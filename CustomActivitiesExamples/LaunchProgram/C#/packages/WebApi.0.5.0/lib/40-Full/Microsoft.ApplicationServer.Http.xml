<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.ApplicationServer.Http</name>
    </assembly>
    <members>
        <member name="T:Microsoft.ApplicationServer.Http.Channels.HttpMemoryHandler">
            <summary>
            Defines an implementation of an <see cref="T:System.Net.Http.HttpMessageHandler"/> which can be 
            used to submit HTTP requests to bindings using the <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMemoryTransportBindingElement"/> 
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryHandler.#ctor(Microsoft.Server.Common.InputQueue{Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.HttpMemoryRequestContext})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMemoryHandler"/> class.
            </summary>
            <param name="inputQueue">The <see cref="T:Microsoft.Server.Common.InputQueue`1"/> to use for enqueing messages.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryHandler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMemoryHandler"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryHandler.SubmitRequestAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Enqueues the request into an <see cref="T:Microsoft.Server.Common.InputQueue`1"/> and dispatches to Service Model.
            </summary>
            <param name="request"><see cref="T:System.Net.Http.HttpRequestMessage"/> to submit</param>
            <param name="cancellationToken">Token used to cancel operation.</param>
            <returns>A Task for handling the request.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryHandler.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            This channel only supports asynchronous requests.
            </summary>
            <param name="request"><see cref="T:System.Net.Http.HttpRequestMessage"/> to submit</param>
            <param name="cancellationToken">Token used to cancel operation.</param>
            <returns>Throws an exception</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Enqueues the request into an <see cref="T:Microsoft.Server.Common.InputQueue`1"/> and dispatches to Service Model.
            </summary>
            <param name="request"><see cref="T:System.Net.Http.HttpRequestMessage"/> to submit</param>
            <param name="cancellationToken">Token used to cancel operation.</param>
            <remarks>Requests submitted to the <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel"/> can only be cancelled 
            from the WCF Service Model side, not from the caller side.</remarks>
            <returns>A Task for handling the request.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Channels.HttpMemoryTransportBindingElement">
            <summary>
            Provides a <see cref="T:System.ServiceModel.Channels.BindingElement"/> implementation that creates <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannelListener"/> instances. 
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryTransportBindingElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMemoryTransportBindingElement"/> class. 
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryTransportBindingElement.#ctor(Microsoft.ApplicationServer.Http.Channels.HttpMemoryTransportBindingElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMemoryTransportBindingElement"/> class.
            </summary>
            <param name="elementToBeCloned">The element to be cloned.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryTransportBindingElement.GetHttpMemoryHandler(System.TimeSpan)">
            <summary>
            Gets an implementation of an <see cref="T:System.Net.Http.HttpMessageHandler"/> for this <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel"/> instance which can be 
            either accessed directly or from an <see cref="T:System.Net.Http.HttpClient"/> for in-memory communication.
            </summary>
            <param name="timeout">Time span before operation times out.</param>
            <remarks>This method blocks the calling thread until a <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMemoryHandler"/> is available or a timeout happens in 
            which case an <see cref="T:System.TimeoutException"/> is thrown.</remarks>
            <returns>The <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMemoryHandler"/> instance.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
            <summary>
            Returns a value that indicates whether the binding element can build a channel factory for a specific type of channel.
            </summary>
            <typeparam name="TChannel">The type of channel the channel factory produces.</typeparam>
            <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext"/> that provides context for the binding element</param>
            <returns>Always false.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
            <summary>
            Initializes a channel factory for producing channels of a specified type from the binding context.
            </summary>
            <typeparam name="TChannel">The type of channel the factory builds.</typeparam>
            <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext"/> that provides context for the binding element</param>
            <returns>Throws <see cref="T:System.NotSupportedException"/>.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
            <summary>
            Returns a value that indicates whether the binding element can build a listener for a specific type of channel.
            </summary>
            <typeparam name="TChannel">The type of channel the listener accepts.</typeparam>
            <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext"/> that provides context for the binding element</param>
            <returns>true if the <see cref="T:System.ServiceModel.Channels.IChannelListener`1"/> of type <see cref="T:System.ServiceModel.Channels.IChannel"/> can be built by the binding element; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
            <summary>
            Initializes a channel listener to accept channels of a specified type from the binding context.
            </summary>
            <typeparam name="TChannel">The type of channel the listener is built to accept.</typeparam>
            <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext"/> that provides context for the binding element</param>
            <returns>The <see cref="T:System.ServiceModel.Channels.IChannelListener`1"/> of type <see cref="T:System.ServiceModel.Channels.IChannel"/> initialized from the context.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryTransportBindingElement.Clone">
            <summary>
            Returns a copy of the binding element object.
            </summary>
            <returns>A <see cref="T:System.ServiceModel.Channels.BindingElement"/> object that is a deep clone of the original.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
            <summary>
            Returns a typed object requested, if present, from the appropriate layer in the binding stack
            </summary>
            <typeparam name="T">A typed object for which the method is querying.</typeparam>
            <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext"/> that provides context for the binding element</param>
            <returns>The typed object T requested if it is present or null if it is not present.</returns>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Channels.HttpMemoryTransportBindingElement.Scheme">
            <summary>
            Gets the URI scheme for the transport.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Channels.HttpMemoryTransportBindingElement.HostNameComparisonMode">
            <summary>
            Gets a value that indicates whether the hostname is used to reach the service when matching on the URI.
            </summary>
            <remarks>Only the value <see cref="F:HostNameComparisonMode.StrongWildcard"/> is supported by the <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMemoryTransportBindingElement"/>.</remarks>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel">
            <summary>
            This <see cref="T:System.ServiceModel.Channels.IReplyChannel"/> implementation provides a transport binding element for submitting
            <see cref="T:System.Net.Http.HttpRequestMessage"/> instances for in-memory processing.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.#ctor(Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannelListener)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel"/> class.
            </summary>
            <param name="listener">The <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannelListener"/> that provides default timeouts for the channel operations (send, receive, open, and close).</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.BeginReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to receive an available request with a specified timeout.
            </summary>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> that specifies the interval of time to wait for the reception of an available request.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback"/> delegate that receives the notification of the asynchronous receive that a request operation completes.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</param>
            <returns>The <see cref="T:System.IAsyncResult"/> that references the asynchronous reception of the request.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.BeginReceiveRequest(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to receive an available request with a specified timeout.
            </summary>
            <param name="callback">The <see cref="T:System.AsyncCallback"/> delegate that receives the notification of the asynchronous receive that a request operation completes.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</param>
            <returns>The <see cref="T:System.IAsyncResult"/> that references the asynchronous reception of the request.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to receive a request message that has a specified time out and state object associated with it. 
            </summary>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> that specifies how long the receive request operation has to complete before timing out and returning false.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback"/> delegate that receives the notification of the asynchronous receive that a request operation completes.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</param>
            <returns>The <see cref="T:System.IAsyncResult"/> that references the asynchronous reception of the request.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request operation that has a specified time out and state object associated with it. 
            </summary>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> that specifies the interval of time to wait for the reception of an available request.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback"/> delegate that receives the notification of the asynchronous receive that a request operation completes.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</param>
            <returns>The <see cref="T:System.IAsyncResult"/> that references the asynchronous operation to wait for a request message to arrive.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.EndReceiveRequest(System.IAsyncResult)">
            <summary>
            Completes an asynchronous operation to receive an available request. 
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult"/> returned by a call to <see cref="M:BeginReceive"/>.</param>
            <returns>The <see cref="T:System.ServiceModel.Channels.RequestContext"/> used to construct a reply to the request. </returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.EndTryReceiveRequest(System.IAsyncResult,System.ServiceModel.Channels.RequestContext@)">
            <summary>
            Completes the specified asynchronous operation to receive a request message.
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult"/> returned by a call to <see cref="M:BeginTryReceiveRequest"/>.</param>
            <param name="context">The <see cref="T:System.ServiceModel.Channels.RequestContext"/> received.</param>
            <returns>true if a request message is received before the specified interval of time elapses; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.EndWaitForRequest(System.IAsyncResult)">
            <summary>
            Completes the specified asynchronous wait-for-a-request message operation.
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult"/> that identifies the <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)"/> operation to finish, and from which to retrieve an end result.</param>
            <returns>true if a request is received before the specified interval of time elapses; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.ReceiveRequest(System.TimeSpan)">
            <summary>
            Returns the context of the request received, if one is available. If a context is not available, waits until there is one available. 
            </summary>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> that specifies how long the receive of a request operation has to complete before timing out.</param>
            <returns>The <see cref="T:System.ServiceModel.Channels.RequestContext"/> used to construct replies. </returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.ReceiveRequest">
            <summary>
            Returns the context of the request received, if one is available. If a context is not available, waits until there is one available. 
            </summary>
            <returns>The <see cref="T:System.ServiceModel.Channels.RequestContext"/> used to construct replies.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.TryReceiveRequest(System.TimeSpan,System.ServiceModel.Channels.RequestContext@)">
            <summary>
            Returns a value that indicates whether a request is received before a specified interval of time elapses. 
            </summary>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> that specifies how long the receive of a request operation has to complete before timing out and returning false.</param>
            <param name="context">The <see cref="T:System.ServiceModel.Channels.RequestContext"/> received.</param>
            <returns>true if a request message is received before the specified interval of time elapses; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.WaitForRequest(System.TimeSpan)">
            <summary>
            Returns a value that indicates whether a request message is received before a specified interval of time elapses.
            </summary>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> that specifies how long a request operation has to complete before timing out and returning false.</param>
            <returns>true if a request is received before the specified interval of time elapses; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.OnClose(System.TimeSpan)">
            <summary>
            Inserts processing on a communication object after it transitions to the closing state due to the invocation of a synchronous close operation.
            </summary>
            <param name="timeout">The time span that specifies how long the on close operation has to complete before timing out.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.OnOpen(System.TimeSpan)">
            <summary>
            Inserts processing on a communication object after it transitions into the opening state which must complete within a specified interval of time.
            </summary>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> that specifies how long the on open operation has to complete before timing out.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Inserts processing on a communication object after it transitions to the opening state due to the invocation of an asynchronous open operation. 
            </summary>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> that specifies how long the on open operation has to complete before timing out.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback"/> delegate that receives notification of the completion of the asynchronous on open operation.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous on open operation.</param>
            <returns>The <see cref="T:System.IAsyncResult"/> that references the asynchronous on open operation. </returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.OnEndOpen(System.IAsyncResult)">
            <summary>
            Completes an asynchronous operation on the open of a communication object.
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult"/> that is returned by a call to <see cref="M:OnBeginOpen"/>.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.OnClosed">
            <summary>
            Invoked during the transition of a communication object into the closing state.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Inserts processing after a communication object transitions to the closing state due to the invocation of an asynchronous close operation.
            </summary>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> that specifies how long the on close operation has to complete before timing out.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback"/> delegate that receives notification of the completion of the asynchronous on close operation.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous on close operation.</param>
            <returns>The <see cref="T:System.IAsyncResult"/> that references the asynchronous on close operation. </returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.OnEndClose(System.IAsyncResult)">
            <summary>
            Completes an asynchronous operation on the close of a communication object.
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult"/> that is returned by a call to <see cref="M:OnBeginClose"/>.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.OnAbort">
            <summary>
            Inserts processing on a communication object after it transitions to the closing state due to the invocation of a synchronous abort operation.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.HttpMemoryHandler">
            <summary>
            Gets an implementation of an <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.HttpMemoryHandler"/> for this <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel"/> instance which can be 
            either accessed directly or from an <see cref="T:System.Net.Http.HttpClient"/> for in-memory communication.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.LocalAddress">
            <summary>
            Gets the address on which this reply channel receives messages.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.HttpMemoryRequestContext">
            <summary>
            Provides a reply that is correlated to an incoming request.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.HttpMemoryRequestContext.#ctor(System.Net.Http.HttpRequestMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.HttpMemoryRequestContext"/> class.
            </summary>
            <param name="httpRequest">The <see cref="T:System.Net.Http.HttpRequestMessage"/> instance.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.HttpMemoryRequestContext.Abort">
            <summary>
            Aborts processing the request associated with the context. 
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.HttpMemoryRequestContext.Close(System.TimeSpan)">
            <summary>
            Closes the operation that is replying to the request context associated with the current context.
            </summary>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> that specifies the interval of time within which the reply operation associated with the current context must close.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.HttpMemoryRequestContext.Close">
            <summary>
            Closes the operation that is replying to the request context associated with the current context.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.HttpMemoryRequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to reply to the request associated with the current context.
            </summary>
            <param name="message">The incoming <see cref="T:System.ServiceModel.Channels.Message"/> that contains the request.</param>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> that specifies the interval of time to wait for the reply to an available request.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback"/> delegate that receives the notification of the asynchronous reply operation completion.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous reply operation.</param>
            <returns>The <see cref="T:System.IAsyncResult"/> that references the asynchronous reply operation.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.HttpMemoryRequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to reply to the request associated with the current context.
            </summary>
            <param name="message">The incoming <see cref="T:System.ServiceModel.Channels.Message"/> that contains the request.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback"/> delegate that receives the notification of the asynchronous reply operation completion.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous reply operation.</param>
            <returns>The <see cref="T:System.IAsyncResult"/> that references the asynchronous reply operation.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.HttpMemoryRequestContext.EndReply(System.IAsyncResult)">
            <summary>
            Completes an asynchronous operation to reply to a request message.
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult"/> returned by a call to <see cref="M:BeginReply"/>.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.HttpMemoryRequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)">
            <summary>
            Replies to a request message within a specified interval of time.
            </summary>
            <param name="message">The incoming <see cref="T:System.ServiceModel.Channels.Message"/> that contains the request.</param>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> that specifies the interval of time to wait for the reply to a request.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.HttpMemoryRequestContext.Reply(System.ServiceModel.Channels.Message)">
            <summary>
            Replies to a request message within a specified interval of time.
            </summary>
            <param name="message">The incoming <see cref="T:System.ServiceModel.Channels.Message"/> that contains the request.</param>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.HttpMemoryRequestContext.RequestMessage">
            <summary>
            Gets the message that contains the request.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.HttpMemoryRequestContext.HttpRequestTask">
            <summary>
            Gets the pending task awaiting completion.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.TryReceiveAsyncResult">
            <summary>
            Encapsulates the results of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.ReceiveAsyncResultBase">
            <summary>
            Base class encapsulating the shared results of <see cref="M:BeginTryReceiveRequest"/> and <see cref="M:BeginReceiveRequest"/>.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.ReceiveAsyncResultBase.#ctor(Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.ReceiveAsyncResultBase"/> class.
            </summary>
            <param name="channel">The <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel"/> within which we are operating.</param>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> that specifies how long the receive request operation has to complete before timing out.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback"/> delegate that receives the notification of the asynchronous receive that a request operation completes.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.ReceiveAsyncResultBase.StartReceive">
            <summary>
            Start receiving a request from the inner channel
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.ReceiveAsyncResultBase.CompleteReceive(System.IAsyncResult)">
            <summary>
            Complete receiving a request from the inner channel
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult"/> returned by a call to BeginReceiveRequest or BeginTryReceiveRequest.</param>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.ReceiveAsyncResultBase.Channel">
            <summary>
            Gets the <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel"/> within which we are operating.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.ReceiveAsyncResultBase.Timeout">
            <summary>
            Gets the <see cref="T:System.TimeSpan"/> that specifies how long the receive request operation has to complete before timing out.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.ReceiveAsyncResultBase.Context">
            <summary>
            Gets or sets the <see cref="T:System.ServiceModel.Channels.RequestContext"/> representing the reply.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.TryReceiveAsyncResult.#ctor(Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.TryReceiveAsyncResult"/> class.
            </summary>
            <param name="channel">The <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel"/> within which we are operating.</param>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> that specifies how long the receive request operation has to complete before timing out and returning false.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback"/> delegate that receives the notification of the asynchronous receive that a request operation completes.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.TryReceiveAsyncResult.End(System.IAsyncResult,System.ServiceModel.Channels.RequestContext@)">
            <summary>
            Completes the specified asynchronous operation to receive a request.
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult"/> instance.</param>
            <param name="context">The <see cref="T:System.ServiceModel.Channels.RequestContext"/> received.</param>
            <returns>true if a request message is received before the specified interval of time elapses; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.TryReceiveAsyncResult.StartReceive">
            <summary>
            Start receiving a request from the inner channel
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.TryReceiveAsyncResult.CompleteReceive(System.IAsyncResult)">
            <summary>
            Complete receiving a request from the inner channel
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult"/> returned by a call to <see cref="M:BeginTryReceiveRequest"/>.</param>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.ReceiveAsyncResult">
            <summary>
            Encapsulates the results of <see cref="M:BeginReceiveRequest"/>.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.ReceiveAsyncResult.#ctor(Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.ReceiveAsyncResult"/> class.
            </summary>
            <param name="channel">The <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel"/> within which we are operating.</param>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> that specifies how long the receive request operation has to complete before timing out.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback"/> delegate that receives the notification of the asynchronous receive that a request operation completes.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.ReceiveAsyncResult.End(System.IAsyncResult)">
            <summary>
            Completes the specified asynchronous operation to receive a request.
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult"/> instance.</param>
            <returns>The <see cref="T:System.ServiceModel.Channels.RequestContext"/> used to construct a reply to the request. </returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.ReceiveAsyncResult.StartReceive">
            <summary>
            Start receiving a request from the inner channel
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel.ReceiveAsyncResult.CompleteReceive(System.IAsyncResult)">
            <summary>
            Complete receiving a request from the inner channel
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult"/> returned by a call to <see cref="M:BeginReceiveRequest"/>.</param>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannelListener">
            <summary>
            Defines a <see cref="T:System.ServiceModel.Channels.IChannelListener"/> for creating <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannel"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannelListener.#ctor(Microsoft.ApplicationServer.Http.Channels.HttpMemoryTransportBindingElement,System.ServiceModel.Channels.BindingContext,Microsoft.Server.Common.InputQueue{Microsoft.ApplicationServer.Http.Channels.HttpMemoryHandler})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannelListener"/> class.
            </summary>
            <param name="bindingElement">The <see cref="T:System.ServiceModel.Channels.BindingElement"/> using this <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannelListener"/>.</param>
            <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext"/> used to create this <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannelListener"/>.</param>
            <param name="handlerQueue">Input queue where <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMemoryHandler"/> instances will be sent.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannelListener.GetProperty``1">
            <summary>
            Returns a typed object requested, if present, from the appropriate layer in the channel stack.
            </summary>
            <typeparam name="T">The typed object for which the method is querying.</typeparam>
            <returns>The typed object T requested if it is present or null if it is not.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannelListener.OnAbort">
            <summary>
            Inserts processing on a communication object after it transitions to the closing state due to the invocation of a synchronous abort operation. 
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannelListener.OnClose(System.TimeSpan)">
            <summary>
            Inserts processing on a communication object after it transitions to the closing state due to the invocation of a synchronous close operation. 
            </summary>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> that specifies how long the on close operation has to complete before timing out.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannelListener.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to close a communication object with a specified timeout.
            </summary>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> that specifies how long the close operation has to complete before timing out.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback"/> delegate that receives notification of the completion of the asynchronous close operation.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous close operation.</param>
            <returns>The <see cref="T:System.IAsyncResult"/> that references the asynchronous close operation.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannelListener.OnEndClose(System.IAsyncResult)">
            <summary>
            Completes an asynchronous operation on the close of a communication object.
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult"/> that is returned by a call to <see cref="M:OnBeginClose"/>.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannelListener.OnOpen(System.TimeSpan)">
            <summary>
            Inserts processing on a communication object after it transitions into the opening state which must complete within a specified interval of time. 
            </summary>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> that specifies how long the on open operation has to complete before timing out.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannelListener.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Inserts processing on a communication object after it transitions to the opening state due to the invocation of an asynchronous open operation. 
            </summary>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> that specifies how long the on open operation has to complete before timing out.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback"/> delegate that receives notification of the completion of the asynchronous on open operation.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous on open operation.</param>
            <returns>The <see cref="T:System.IAsyncResult"/> that references the asynchronous on open operation. </returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannelListener.OnEndOpen(System.IAsyncResult)">
            <summary>
            Completes an asynchronous operation on the open of a communication object.
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult"/> that is returned by a call to <see cref="M:BeginOpen"/>.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannelListener.OnAcceptChannel(System.TimeSpan)">
            <summary>
            When implemented in a derived class, provides an extensibility point when accepting a channel.
            </summary>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> that specifies how long the accept channel operation has to complete before timing out.</param>
            <returns>The <see cref="T:System.ServiceModel.Channels.IReplyChannel"/> accepted.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannelListener.OnBeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Provides an asynchronous extensibility point when beginning to accept a channel.
            </summary>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> that specifies how long the accept channel operation has to complete before timing out.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback"/> delegate that receives the notification of the asynchronous completion of the accept channel operation.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous accept channel operation.</param>
            <returns>The <see cref="T:System.IAsyncResult"/> that references the asynchronous accept channel operation.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannelListener.OnEndAcceptChannel(System.IAsyncResult)">
            <summary>
            Provides an asynchronous extensibility point when completing the acceptance a channel.
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult"/> returned by a call to <see cref="M:OnBeginAcceptChannel"/>.</param>
            <returns>The <see cref="T:System.ServiceModel.Channels.IReplyChannel"/> accepted by the listener.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannelListener.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Provides a point of extensibility when starting to wait for a channel to arrive.
            </summary>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> that specifies how long the on begin wait operation has to complete before timing out.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback"/> delegate that receives the notification of the asynchronous operation on begin wait completion.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous on begin wait operation.</param>
            <returns>The <see cref="T:System.IAsyncResult"/> that references the asynchronous on begin wait operation. </returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannelListener.OnEndWaitForChannel(System.IAsyncResult)">
            <summary>
            Provides a point of extensibility when ending the waiting for a channel to arrive.
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult"/> returned by a call to <see cref="M:OnBeginWaitForChannel"/>.</param>
            <returns>true if the method completed before the interval of time specified by the timeout expired; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannelListener.OnWaitForChannel(System.TimeSpan)">
            <summary>
            Provides a point of extensibility when waiting for a channel to arrive.
            </summary>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> that specifies how long the on wait for a channel operation has to complete before timing out.</param>
            <returns>true if the method completed before the interval of time specified by the timeout expired; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannelListener.InitializeUri(Microsoft.ApplicationServer.Http.Channels.HttpMemoryTransportBindingElement,System.ServiceModel.Channels.BindingContext)">
            <summary>
            Initializes the listening URI
            </summary>
            <param name="binding">The binding for which we are generating a listening URI.</param>
            <param name="context">The context used to create the listening <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannelListener.Uri"/>.</param>
            <returns>The listening <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannelListener.Uri"/>.</returns>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Channels.HttpMemoryChannelListener.Uri">
            <summary>
            Gets the URI on which this channel listener listens for an incoming channel.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Configuration.HttpMemoryEndpointCollectionElement">
            <summary>
            Class that provides a collection of <see cref="T:Microsoft.ApplicationServer.Http.Configuration.HttpMemoryEndpointElement"/> instances.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Configuration.HttpMemoryEndpointElement">
            <summary>
            Class that provides an endpoint element for the <see cref="T:Microsoft.ApplicationServer.Http.HttpMemoryBinding"/> binding.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Configuration.HttpMemoryEndpointElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpMemoryEndpoint"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Configuration.HttpMemoryEndpointElement.CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription)">
            <summary>
            When implemented in a derived class, creates a service endpoint from message information
            contained in the specified <see cref="T:System.ServiceModel.Description.ContractDescription"/>.
            </summary>
            <param name="contractDescription">Information about what is contained in messages
            being sent from an endpoint.</param>
            <returns>A service endpoint.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Configuration.HttpMemoryEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)">
            <summary>
            When called from a derived class, initializes and verifies the format of the
            specified service endpoint element in a service application configuration file.
            </summary>
            <param name="channelEndpointElement">An endpoint element that defineds the physical transfer
            of messages back and forth between the client and the service.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Configuration.HttpMemoryEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)">
            <summary>
            When called from a derived class, initializes and verifies the format of the
            specified service endpoint element in a service application configuration file.
            </summary>
            <param name="serviceEndpointElement">A service endpoint element that enables clients to find and
            communicate with a service.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Configuration.HttpMemoryEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)">
            <summary>
            When called from a derived class, loads the service description information
            from the configuration file and applies it to the runtime being constructed.
            </summary>
            <param name="endpoint">And endpoint that enables clients to find and communicate with a service.</param>
            <param name="serviceEndpointElement">A service endpoint element of a service application.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Configuration.HttpMemoryEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)">
            <summary>
            When called from a derived class, loads the service description information
            from the configuration file and applies it to the runtime being constructed.
            </summary>
            <param name="endpoint">And endpoint that enables clients to find and communicate with a service.</param>
            <param name="channelEndpointElement">An endpoint element that defined the physical
            transfer of messages ack and forth between the client and the service.</param>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpMemoryEndpointElement.HelpEnabled">
            <summary>
            Gets or sets a value indicating whether the automatic help page will be available.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpMemoryEndpointElement.TestClientEnabled">
            <summary>
            Gets or sets a value indicating whether the web-based test client will be available.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpMemoryEndpointElement.TrailingSlashMode">
            <summary>
            Gets or sets a value specifying how trailing slashes in the <see cref="T:System.Uri"/> will be handled.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpMemoryEndpointElement.OperationHandlerFactory">
            <summary>
            Gets or sets the <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpMemoryEndpointElement.OperationHandlerFactory"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpMemoryEndpointElement.EndpointType">
            <summary>
            Gets the type of the endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpMemoryEndpointElement.Properties">
            <summary>
            Gets the collection of properties for the current endpoint element.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Configuration.HttpMemoryBindingElement">
            <summary>
            A configuration element for the <see cref="T:Microsoft.ApplicationServer.Http.HttpMemoryBinding"/> binding. 
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Configuration.HttpMemoryBindingElement.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Configuration.HttpMemoryBindingElement"/> class and specifies 
            the name of the element. 
            </summary>
            <param name="name">The name that is used for this binding configuration element</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Configuration.HttpMemoryBindingElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Configuration.HttpMemoryBindingElement"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Configuration.HttpMemoryBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
            <summary>
            Applies the configuration of the the <see cref="T:Microsoft.ApplicationServer.Http.Configuration.HttpMemoryBindingElement"/> to the given
            <see cref="T:Microsoft.ApplicationServer.Http.HttpMemoryBinding"/> instance.
            </summary>
            <param name="binding">The <see cref="T:Microsoft.ApplicationServer.Http.HttpMemoryBinding"/> 
            instance to which the <see cref="T:Microsoft.ApplicationServer.Http.Configuration.HttpMemoryBindingElement"/> configuration will be applied.
            </param>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpMemoryBindingElement.BindingElementType">
            <summary>
            Gets the <see cref="T:System.Type"/> of binding that this configuration element represents. 
            </summary>
            <returns>A <see cref="T:System.Type"/> object that represents the custom binding type.</returns>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpMemoryBindingElement.Properties">
            <summary>
            Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection"/> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty"/> 
            objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement"/> objects of this configuration element.
            </summary>
            <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection"/> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty"/> 
            objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement"/> objects of this configuration element.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Configuration.HttpMemoryBindingCollectionElement">
            <summary>
            Represents a configuration element that contains sub-elements that specify settings for using 
            the <see cref="T:Microsoft.ApplicationServer.Http.HttpMemoryBinding"/> binding.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Configuration.HttpMemoryBindingCollectionElement.GetDefault">
            <summary>
            Returns a default <see cref="T:Microsoft.ApplicationServer.Http.HttpMemoryBinding"/> binding.
            </summary>
            <returns>
            A default <see cref="T:Microsoft.ApplicationServer.Http.HttpMemoryBinding"/> binding.
            </returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandlerPipeline">
            <summary>
            This is an implementation of <see cref="T:System.ServiceModel.Dispatcher.IErrorHandler"/> used to execute a collection of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler"/>.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandlerPipeline.System#ServiceModel#Dispatcher#IErrorHandler#ProvideFault(System.Exception,System.ServiceModel.Channels.MessageVersion,System.ServiceModel.Channels.Message@)">
            <summary>
            Enables the creation of a custom fault <see cref="T:System.ServiceModel.Channels.Message"/>
            that is returned from an exception in the course of a service method.
            </summary>
            <param name="error">The <see cref="T:System.Exception"/> object thrown in the course 
            of the service operation.</param>
            <param name="version">The SOAP version of the message.</param>
            <param name="fault">The <see cref="T:System.ServiceModel.Channels.Message"/> object 
            that is returned to the client, or service, in the duplex case.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandlerPipeline.System#ServiceModel#Dispatcher#IErrorHandler#HandleError(System.Exception)">
            <summary>
            Enables error-related processing and returns a value that indicates whether the dispatcher aborts the session and the instance context in certain cases.
            </summary>
            <param name="error">The exception thrown during processing.</param>
            <returns>
            true if  should not abort the session (if there is one) and instance context if the instance context is not <see cref="F:System.ServiceModel.InstanceContextMode.Single"/>; otherwise, false. The default is false.
            </returns>
            <remarks>
            This always return false which is the default and let other handlers decide whether to abort the session and/or instance context.
            </remarks>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandlerPipeline.HttpErrorHandlers">
            <summary>
            Gets the collection of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.HttpMemoryBinding">
            <summary>
            A binding used with endpoints for web services that use strongly-type HTTP request 
            and response messages for in-memory communication.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.HttpMemoryBinding.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.HttpMemoryBinding"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.HttpMemoryBinding.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.HttpMemoryBinding"/> class with a 
            binding specified by its configuration name.
            </summary>
            <param name="configurationName">
            The binding configuration name.
            </param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.HttpMemoryBinding.GetHttpMemoryHandler">
            <summary>
            Gets an implementation of an <see cref="T:System.Net.Http.HttpMessageHandler"/> for this <see cref="T:Microsoft.ApplicationServer.Http.HttpMemoryBinding"/> instance which can be 
            accessed directly or from an <see cref="T:System.Net.Http.HttpClient"/> for in-memory communication.
            </summary>
            <returns>The <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMemoryHandler"/> instance.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.HttpMemoryBinding.CreateBindingElements">
            <summary>
            Returns an ordered collection of binding elements contained in the current binding. 
            (Overrides <see cref="M:System.ServiceModel.Channels.Binding.CreateBindingElements">
            Binding.CreateBindingElements</see>.)
            </summary>
            <returns>
            An ordered collection of binding elements contained in the current binding.
            </returns>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.HttpMemoryBinding.EnvelopeVersion">
            <summary>
            Gets the envelope version that is used by endpoints that are configured to use an 
            <see cref="T:Microsoft.ApplicationServer.Http.HttpMemoryBinding"/> binding.  Always returns <see cref="P:System.ServiceModel.EnvelopeVersion.None"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.HttpMemoryBinding.MessageHandlerFactory">
            <summary>
            Gets or sets a value representing the <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory"/> to use for
            instantiating <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel"/> instances.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.HttpMemoryBinding.HostNameComparisonMode">
            <summary>
            Gets a value indicating whether the hostname is used to reach the 
            service when matching the URI.
            </summary>
            <remarks>Only the value <see cref="F:HostNameComparisonMode.StrongWildcard"/> is supported by the <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMemoryTransportBindingElement"/>.</remarks>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.HttpMemoryBinding.Scheme">
            <summary>
            Gets the URI transport scheme for the channels and listeners that are configured 
            with this binding. (Overrides <see cref="P:System.ServiceModel.Channels.Binding.Scheme"/>)
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.HttpMemoryBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
            <summary>
            Gets a value indicating whether incoming requests can be handled more efficiently synchronously or asynchronously.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Description.HttpMemoryEndpoint">
            <summary>
            Class that provides a <see cref="T:System.ServiceModel.Description.ServiceEndpoint"/> for the <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpMemoryEndpoint.HttpMemoryBinding"/> binding.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpMemoryEndpoint.#ctor(System.ServiceModel.Description.ContractDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpMemoryEndpoint"/> class.
            </summary>
            <param name="contract">The <see cref="T:System.ServiceModel.Description.ContractDescription"/> for the service endpoint.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpMemoryEndpoint.#ctor(System.ServiceModel.Description.ContractDescription,System.ServiceModel.EndpointAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpMemoryEndpoint"/> class.
            </summary>
            <param name="contract">The <see cref="T:System.ServiceModel.Description.ContractDescription"/> for the service endpoint.</param>
            <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress"/> for the service endpoint.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpMemoryEndpoint.GetHttpMemoryHandler">
            <summary>
            Gets an implementation of an <see cref="T:System.Net.Http.HttpMessageHandler"/> for this <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpMemoryEndpoint"/> instance which can be 
            either accessed directly or from an <see cref="T:System.Net.Http.HttpClient"/> for in-memory communication.
            </summary>
            <returns>The <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMemoryHandler"/> instance.</returns>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpMemoryEndpoint.MessageHandlerFactory">
            <summary>
            Gets or sets the default <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory"/> to use for
            the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpMemoryEndpoint"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpMemoryEndpoint.OperationHandlerFactory">
            <summary>
            Gets or sets the default <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory"/> to use for
            the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpMemoryEndpoint"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpMemoryEndpoint.HelpEnabled">
            <summary>
            Gets or sets a value indicating whether an automatic help page will be generated.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpMemoryEndpoint.TestClientEnabled">
            <summary>
            Gets or sets a value indicating whether a web-based test client will be generated.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpMemoryEndpoint.TrailingSlashMode">
            <summary>
            Gets or sets a value specifying how trailing slashes on <see cref="T:System.Uri"/>s should be treated.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Configuration.HttpConfigurationOperationHandlerFactory">
            <summary>
            A custom HttpOperationHandlerFactory that takes delegates and call them during OnCreateRequestHandlers and OnCreateResponseHandlers
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory">
            <summary>
            Class that provides <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances to handle Http requests or responses.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory"/> class.
            </summary>
            <remarks>
            A default <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection"/> will be used that includes an
            <see cref="T:System.Net.Http.Formatting.XmlMediaTypeFormatter"/> and a <see cref="T:System.Net.Http.Formatting.JsonMediaTypeFormatter"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory.#ctor(System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory"/> class.
            </summary>
            <param name="formatters">The default <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter"/> instances to use for the
            <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler"/> and <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler"/> instances.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory.CreateRequestHandlers(System.ServiceModel.Description.ServiceEndpoint,Microsoft.ApplicationServer.Http.Description.HttpOperationDescription)">
            <summary>
            Returns the ordered collection of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances to use when handling 
            <see cref="T:System.Net.Http.HttpRequestMessage"/> instances for the given <paramref name="operation"/>.
            </summary>
            <param name="endpoint">The service endpoint.</param>
            <param name="operation">
            The <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription"/> for the given operation that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>
            instances will be associated with.</param>
            <returns>
            The ordered collection of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances to use when handling 
            <see cref="T:System.Net.Http.HttpRequestMessage"/> instances for the given operation.
            </returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory.CreateResponseHandlers(System.ServiceModel.Description.ServiceEndpoint,Microsoft.ApplicationServer.Http.Description.HttpOperationDescription)">
            <summary>
            Returns the ordered collection of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances to use when handling 
            <see cref="T:System.Net.Http.HttpResponseMessage"/> instances for the given <paramref name="operation"/>.
            </summary>
            <param name="endpoint">The service endpoint.</param>
            <param name="operation">The description of the service operation.</param>
            <returns>
            The ordered collection of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances to use when handling 
            <see cref="T:System.Net.Http.HttpResponseMessage"/> instances for the given operation.
            </returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory.OnCreateRequestHandlers(System.ServiceModel.Description.ServiceEndpoint,Microsoft.ApplicationServer.Http.Description.HttpOperationDescription)">
            <summary>
            Called when the ordered collection of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances is being created for 
            the given <paramref name="operation"/>.  Can be overridden in a derived class to customize the 
            collection of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances returned. 
            </summary>
            <remarks>
            The base implementation returns the standard request <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances for the given
            operation.
            </remarks>
            <param name="endpoint">The service endpoint.</param>
            <param name="operation">The description of the service operation.</param>
            <returns>
            The ordered collection of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances to use when handling 
            <see cref="T:System.Net.Http.HttpRequestMessage"/> instances for the given operation.
            </returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory.OnCreateResponseHandlers(System.ServiceModel.Description.ServiceEndpoint,Microsoft.ApplicationServer.Http.Description.HttpOperationDescription)">
            <summary>
            Called when the ordered collection of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances is being created for 
            the given <paramref name="operation"/>.  Can be overridden in a derived class to customize the 
            collection of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances returned. 
            </summary>
            <remarks>
            The base implementation returns the standard response <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances for the given
            operation.
            </remarks>
            <param name="endpoint">The service endpoint.</param>
            <param name="operation">
            The <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription"/> for the given operation that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>
            instances will be associated with.</param>
            <returns>
            The ordered collection of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances to use when handling 
            <see cref="T:System.Net.Http.HttpResponseMessage"/> instances for the given operation.
            </returns>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory.Formatters">
            <summary>
            Gets the default <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter"/> instances to use for the
            <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler"/> and <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Configuration.HttpConfigurationOperationHandlerFactory.OnCreateRequestHandlers(System.ServiceModel.Description.ServiceEndpoint,Microsoft.ApplicationServer.Http.Description.HttpOperationDescription)">
            <summary>
            Called when the ordered collection of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances is being created for
            the given <paramref name="operation"/>.  Can be overridden in a derived class to customize the
            collection of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances returned.
            </summary>
            <param name="endpoint">The service endpoint.</param>
            <param name="operation">The description of the service operation.</param>
            <returns>
            The ordered collection of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances to use when handling
            <see cref="T:System.Net.Http.HttpRequestMessage"/> instances for the given operation.
            </returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Configuration.HttpConfigurationOperationHandlerFactory.OnCreateResponseHandlers(System.ServiceModel.Description.ServiceEndpoint,Microsoft.ApplicationServer.Http.Description.HttpOperationDescription)">
            <summary>
            Called when the ordered collection of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances is being created for
            the given <paramref name="operation"/>.  Can be overridden in a derived class to customize the
            collection of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances returned.
            </summary>
            <param name="endpoint">The service endpoint.</param>
            <param name="operation">The <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription"/> for the given operation that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>
            instances will be associated with.</param>
            <returns>
            The ordered collection of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances to use when handling
            <see cref="T:System.Net.Http.HttpRequestMessage"/> instances for the given operation.
            </returns>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpConfigurationOperationHandlerFactory.RequestHandlerDelegate">
            <summary>
            Gets or sets the request handler delegate.
            </summary>
            <value>
            The request handler delegate.
            </value>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpConfigurationOperationHandlerFactory.ResponseHandlerDelegate">
            <summary>
            Gets or sets the response handler delegate.
            </summary>
            <value>
            The response handler delegate.
            </value>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Configuration.HttpConfigurationInstanceProvider">
            <summary>
            A custom HttpInstanceProvider that takes delegates and call them during OnGetInstance and OnReleaseInstance
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider">
            <summary>
            Declares methods that provide a service object or recycle a service object for a service
            based on <see cref="T:Microsoft.ApplicationServer.Http.HttpBinding">HttpBinding</see>.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider.GetInstance(System.ServiceModel.InstanceContext)">
            <summary>
            Returns a service object given the specified <see cref="T:System.ServiceModel.InstanceContext"/> object.
            </summary>
            <param name="instanceContext">The current <see cref="T:System.ServiceModel.InstanceContext"/> object.</param>
            <returns>The service object.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider.ReleaseInstance(System.ServiceModel.InstanceContext,System.Object)">
            <summary>
            Called when an <see cref="T:System.ServiceModel.InstanceContext"/> object recycles a service object.
            </summary>
            <param name="instanceContext">The service's instance context.</param>
            <param name="instance">The service object to be recycled.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider.GetInstance(System.ServiceModel.InstanceContext,System.Net.Http.HttpRequestMessage)">
            <summary>
            Returns a service object given the specified <see cref="T:System.ServiceModel.InstanceContext"/> object
            and <see cref="T:System.Net.Http.HttpRequestMessage"/>.
            </summary>
            <param name="instanceContext">The current <see cref="T:System.ServiceModel.InstanceContext"/> object.</param>
            <param name="request">The request message that triggered the creation of a service object.</param>
            <returns>The service object.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider.System#ServiceModel#Dispatcher#IInstanceProvider#GetInstance(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)">
            <summary>
            Returns a service object given the specified <see cref="T:System.ServiceModel.InstanceContext"/> object.
            </summary>
            <param name="instanceContext">The current <see cref="T:System.ServiceModel.InstanceContext"/> object.</param>
            <param name="message">The message that triggered the creation of a service object.</param>
            <returns>The service object.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider.OnGetInstance(System.ServiceModel.InstanceContext)">
            <summary>
            Called by <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider.GetInstance(System.ServiceModel.InstanceContext)"/> to get the instance.
            Derived classes must implement this.
            </summary>
            <param name="instanceContext">The current <see cref="T:System.ServiceModel.InstanceContext"/> object.</param>
            <returns>The service object.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider.OnGetInstance(System.ServiceModel.InstanceContext,System.Net.Http.HttpRequestMessage)">
            <summary>
            Called by <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider.GetInstance(System.ServiceModel.InstanceContext,System.Net.Http.HttpRequestMessage)"/> to get the instance.
            Derived classes must implement this.
            </summary>
            <param name="instanceContext">The current <see cref="T:System.ServiceModel.InstanceContext"/> object.</param>
            <param name="request">The request message that triggered the creation of a service object.</param>
            <returns>The service object.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider.OnReleaseInstance(System.ServiceModel.InstanceContext,System.Object)">
            <summary>
            Called by <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider.ReleaseInstance(System.ServiceModel.InstanceContext,System.Object)"/> to release the instance.
            Derived classes must implement this.
            </summary>
            <param name="instanceContext">The service's instance context.</param>
            <param name="instance">The service object to be recycled.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Configuration.HttpConfigurationInstanceProvider.OnGetInstance(System.ServiceModel.InstanceContext)">
            <summary>
            Called by <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpInstanceProvider.GetInstance(System.ServiceModel.InstanceContext)"/> to get the instance.
            Derived classes must implement this.
            </summary>
            <param name="instanceContext">The current <see cref="T:System.ServiceModel.InstanceContext"/> object.</param>
            <returns>
            The service object.
            </returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Configuration.HttpConfigurationInstanceProvider.OnGetInstance(System.ServiceModel.InstanceContext,System.Net.Http.HttpRequestMessage)">
            <summary>
            Gets an instance of the service
            </summary>
            <param name="instanceContext">Instance context</param>
            <param name="request">Request message</param>
            <returns>
            Instance object
            </returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Configuration.HttpConfigurationInstanceProvider.OnReleaseInstance(System.ServiceModel.InstanceContext,System.Object)">
            <summary>
            Release instance
            </summary>
            <param name="instanceContext">Instance context</param>
            <param name="instance">Instance object</param>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpConfigurationInstanceProvider.ReleaseInstanceDelegate">
            <summary>
            Gets or sets an action to release instance.
            </summary>
            <value>
            The release instance.
            </value>
            <remarks>This is optional.</remarks>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpConfigurationInstanceProvider.CreateInstanceDelegate">
            <summary>
            Gets or sets the action used to create instance.
            </summary>
            <value>
            The create instance.
            </value>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Configuration.HttpConfigurationBehavior">
            <summary>
            The http configuration behavior
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Description.HttpBehavior">
            <summary>
            Class that provides <see cref="T:System.ServiceModel.Description.IEndpointBehavior"/> for the <see cref="T:Microsoft.ApplicationServer.Http.HttpBinding"/> binding.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpBehavior"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>
            Passes data at runtime to bindings to support custom behavior.
            </summary>
            <param name="endpoint">The endpoint to modify.</param>
            <param name="bindingParameters">The objects that binding elements require to support the behavior.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
            <summary>
            Implements a modification or extension of the client across and endpoint
            </summary>
            <param name="endpoint">The endpoint that is to be customized.</param>
            <param name="clientRuntime">The client runtime to be customized</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)">
            <summary>
            Confirms that the endpoint meets some intended criteria.
            </summary>
            <param name="endpoint">The endpoint to validate.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
            <summary>
            Allows for extension or modification of the service across an endpoint.
            </summary>
            <param name="endpoint">The endpoint that exposes the contract.</param>
            <param name="endpointDispatcher">The endpoint dispatcher to be modified or extended.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.GenerateClientContractDescription(System.ServiceModel.Description.ContractDescription)">
            <summary>
            Generates a ContractDescription that can be used for generating the help page.
            </summary>
            <param name="originalContract"><see cref="T:System.ServiceModel.Description.ContractDescription"/> of the Service endpoint for which the help page contract description is generated.</param>
            <returns><see cref="T:System.ServiceModel.Description.ContractDescription"/> that should be used for the HelpPage generation.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.OnAddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>
            Override in a derived class to pass data at runtime to bindings to support custom behavior.
            </summary>
            <remarks>This base implementation does nothing.</remarks>
            <param name="endpoint">The endpoint to modify.</param>
            <param name="bindingParameters">The objects that binding elements require to support the behavior.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.OnValidate(System.ServiceModel.Description.ServiceEndpoint)">
            <summary>
            Override in a derived class to confirm that the endpoint meets some intended criteria.
            </summary>
            <remarks>
            This base implementation provides a some standard validation for the endpoint and the service operations, that
            derived implementations should generally leverage.
            </remarks>
            <param name="endpoint">The endpoint to validate.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.OnApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
            <summary>
            Override in a derived class to extend or modify the behavior of the service across an endpoint.
            </summary>
            <remarks>
            This base implementation sets up the proper operation dispatcher, formatter, and error handler.
            Derived implementations should always call the base.
            </remarks>
            <param name="endpoint">The endpoint that exposes the contract.</param>
            <param name="endpointDispatcher">The endpoint dispatcher to be modified or extended.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.OnGetHttpErrorHandlers(System.ServiceModel.Description.ServiceEndpoint,System.Collections.Generic.IEnumerable{Microsoft.ApplicationServer.Http.Description.HttpOperationDescription})">
            <summary>
            Gets the collection of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler"/> instances for the given
            set of <paramref name="operations"/> for the specified <paramref name="endpoint"/>.
            </summary>
            <remarks>
            The base implementation does nothing.
            </remarks>
            <param name="endpoint">The endpoint whose error handlers are required.</param>
            <param name="operations">The set of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription"/>s.</param>
            <returns>The set of error handlers. The default is an empty collection.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.OnGetOperationSelector(System.ServiceModel.Description.ServiceEndpoint,System.Collections.Generic.IEnumerable{Microsoft.ApplicationServer.Http.Description.HttpOperationDescription})">
            <summary>
            Gets the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector"/> to use for the given set
            of <paramref name="operations"/> for the specified <paramref name="endpoint"/>.
            </summary>
            <remarks>The base implementation returns the default <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector"/>.
            </remarks>
            <param name="endpoint">The endpoint exposing the operations.</param>
            <param name="operations">The set of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription"/>.</param>
            <returns>The <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector"/> to use.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.OnGetMessageFormatter(System.ServiceModel.Description.ServiceEndpoint,Microsoft.ApplicationServer.Http.Description.HttpOperationDescription)">
            <summary>
            Gets the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter"/> to use for the given 
            <paramref name="operation"/> for the specified <paramref name="endpoint"/>.
            </summary>
            <remarks>
            The base implementation returns an <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter"/> with the
            <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances applied to the given operation.
            </remarks>
            <param name="endpoint">The endpoint exposing the operations.</param>
            <param name="operation">The <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription"/>.</param>
            <returns>The <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter"/> to use for the <paramref name="operation"/>.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpBehavior.ApplyMessageFormatters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher,System.Collections.Generic.List{Microsoft.ApplicationServer.Http.Description.HttpOperationDescription},System.Boolean)">
            <summary>
            Applies the message formatters.
            </summary>
            <param name="endpoint">The endpoint.</param>
            <param name="endpointDispatcher">The endpoint dispatcher.</param>
            <param name="httpOperations">The HTTP operations.</param>
            <param name="isSystemOperation">true if the operation is help page operation or test client operation</param>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpBehavior.HelpEnabled">
            <summary>
            Gets or sets a value indicating whether an automatic help page will be
            available.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpBehavior.TestClientEnabled">
            <summary>
            Gets or sets a value indicating whether a web-based test client will be
            available.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpBehavior.TrailingSlashMode">
            <summary>
            Gets or sets a value specifying how trailing slashes will be handled
            with URI-based operation selection.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpBehavior.OperationHandlerFactory">
            <summary>
            Gets or sets the <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpBehavior.OperationHandlerFactory"/>.
            </summary>
            <value>
            The value returned will never be <c>null</c>.  
            If no <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory"/> has been set,
            the default factory will be returned.
            </value>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Configuration.HttpConfigurationBehavior.OnApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
            <summary>
            Override in a derived class to extend or modify the behavior of the service across an endpoint.
            </summary>
            <param name="endpoint">Service endpoint</param>
            <param name="endpointDispatcher">Endpoint dispatcher</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Configuration.HttpConfigurationBehavior.OnGetHttpErrorHandlers(System.ServiceModel.Description.ServiceEndpoint,System.Collections.Generic.IEnumerable{Microsoft.ApplicationServer.Http.Description.HttpOperationDescription})">
            <summary>
            Gets the collection of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler"/> instances for the given
            set of <paramref name="operations"/> for the specified <paramref name="endpoint"/>.
            </summary>
            <param name="endpoint">Service endpoint</param>
            <param name="operations">Http operations</param>
            <returns>A collection of error handlers</returns>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpConfigurationBehavior.ErrorHandlerDelegate">
            <summary>
            Gets or sets the error handler delegate.
            </summary>
            <value>
            The error handler delegate.
            </value>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpConfigurationBehavior.InstanceProvider">
            <summary>
            Gets or sets the http service instance provider
            </summary>
            <value>
            The instance provider.
            </value>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.HttpConfiguration">
            <summary>
            The configuration class for Http Services
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.HttpConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.HttpConfiguration"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.HttpConfiguration.ConfigureServiceHost(Microsoft.ApplicationServer.Http.HttpServiceHost)">
            <summary>
            Internal method called to configure host settings.
            </summary>
            <param name="serviceHost">Service host.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.HttpConfiguration.ConfigureEndpoint(Microsoft.ApplicationServer.Http.Description.HttpEndpoint)">
            <summary>
            Internal method called to configure endpoint settings.
            </summary>
            <param name="endpoint">Http endpoint.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.HttpConfiguration.OnConfigureServiceHost(Microsoft.ApplicationServer.Http.HttpServiceHost)">
            <summary>
            Called to apply the configuration on the host level.
            </summary>
            <param name="serviceHost">Http service host.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.HttpConfiguration.OnConfigureEndpoint(Microsoft.ApplicationServer.Http.Description.HttpEndpoint)">
            <summary>
            Called to apply the configuration on the endpoint level.
            </summary>
            <param name="endpoint">Http endpoint.</param>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.HttpConfiguration.TransferMode">
            <summary>
            Gets or sets the transfer mode.
            </summary>
            <value>
            The transfer mode.
            </value>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.HttpConfiguration.Formatters">
            <summary>
            Gets the media type formatters.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.HttpConfiguration.EnableHelpPage">
            <summary>
            Gets or sets a value indicating whether to enable help page.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.HttpConfiguration.EnableTestClient">
            <summary>
            Gets or sets a value indicating whether to enable test client.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.HttpConfiguration.TrailingSlashMode">
            <summary>
            Gets or sets the trailing slash mode.
            </summary>
            <value>
            The trailing slash mode.
            </value>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.HttpConfiguration.MaxBufferSize">
            <summary>
            Gets or sets the size of the max buffer.
            </summary>
            <value>
            The size of the max buffer.
            </value>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.HttpConfiguration.MaxReceivedMessageSize">
            <summary>
            Gets or sets the size of the max received message.
            </summary>
            <value>
            The size of the max received message.
            </value>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.HttpConfiguration.IncludeExceptionDetail">
            <summary>
            Gets or sets a value indicating whether to include exception detail.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.HttpConfiguration.RequestHandlers">
            <summary>
            Gets or sets an action to configure request handlers.
            </summary>
            <value>
            The request handlers action.
            </value>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.HttpConfiguration.ResponseHandlers">
            <summary>
            Gets or sets an action to configure response handlers.
            </summary>
            <value>
            The response handlers action.
            </value>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.HttpConfiguration.CreateInstance">
            <summary>
            Gets or sets a delegate to create service instance
            </summary>
            <value>
            The create service instance delegate.
            </value>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.HttpConfiguration.ReleaseInstance">
            <summary>
            Gets or sets a delegate to release service instance
            </summary>
            <value>
            The release service instance delegate.
            </value>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.HttpConfiguration.MessageHandlerFactory">
            <summary>
            Gets or sets the delegate to create message handlers.
            </summary>
            <value>
            The message handler delegate.
            </value>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.HttpConfiguration.MessageHandlers">
            <summary>
            Gets the types of message handlers to be created.
            </summary>
            <value>
            The message handler types.
            </value>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.HttpConfiguration.ErrorHandlers">
            <summary>
            Gets or sets an action to configure http error handlers.
            </summary>
            <value>
            The error handlers action.
            </value>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.HttpConfiguration.Security">
            <summary>
            Gets or sets an action to configure security.
            </summary>
            <value>
            The security action.
            </value>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.QueryTypeHelper">
            <summary>
            A static class that provides Queryable related types and functionality
            to perform checks related on them.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.HttpBinding">
            <summary>
            A binding used with endpoints for web services that use strongly-type HTTP request 
            and response messages.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.HttpBinding.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.HttpBinding"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.HttpBinding.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.HttpBinding"/> class with a 
            binding specified by its configuration name.
            </summary>
            <param name="configurationName">
            The binding configuration name.
            </param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.HttpBinding.#ctor(Microsoft.ApplicationServer.Http.HttpBindingSecurityMode)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.HttpBinding"/> class with the 
            type of security used by the binding explicitly specified.
            </summary>
            <param name="securityMode">The value of <see cref="T:Microsoft.ApplicationServer.Http.HttpBindingSecurityMode"/> that 
            specifies the type of security that is used to configure a service endpoint using the
            <see cref="T:Microsoft.ApplicationServer.Http.HttpBinding"/> binding.
            </param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.HttpBinding.CreateBindingElements">
            <summary>
            Returns an ordered collection of binding elements contained in the current binding. 
            (Overrides <see cref="M:System.ServiceModel.Channels.Binding.CreateBindingElements">
            Binding.CreateBindingElements</see>.)
            </summary>
            <returns>
            An ordered collection of binding elements contained in the current binding.
            </returns>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.HttpBinding.EnvelopeVersion">
            <summary>
            Gets the envelope version that is used by endpoints that are configured to use an 
            <see cref="T:Microsoft.ApplicationServer.Http.HttpBinding"/> binding.  Always returns <see cref="P:System.ServiceModel.EnvelopeVersion.None"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.HttpBinding.MessageHandlerFactory">
            <summary>
            Gets or sets a value representing the <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory"/> to use for
            instantiating <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel"/> instances.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.HttpBinding.HostNameComparisonMode">
            <summary>
            Gets or sets a value that indicates whether the hostname is used to reach the 
            service when matching the URI.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.HttpBinding.MaxBufferPoolSize">
            <summary>
            Gets or sets the maximum amount of memory allocated for the buffer manager that manages the buffers 
            required by endpoints that use this binding.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.HttpBinding.MaxBufferSize">
            <summary>
            Gets or sets the maximum amount of memory that is allocated for use by the manager of the message 
            buffers that receive messages from the channel.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.HttpBinding.MaxReceivedMessageSize">
            <summary>
            Gets or sets the maximum size for a message that can be processed by the binding.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.HttpBinding.Scheme">
            <summary>
            Gets the URI transport scheme for the channels and listeners that are configured 
            with this binding. (Overrides <see cref="P:System.ServiceModel.Channels.Binding.Scheme">
            Binding.Scheme</see>.)
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.HttpBinding.Security">
            <summary>
            Gets or sets the security settings used with this binding. 
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.HttpBinding.TransferMode">
            <summary>
            Gets or sets a value that indicates whether the service configured with the 
            binding uses streamed or buffered (or both) modes of message transfer.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.HttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
            <summary>
            Gets a value indicating whether incoming requests can be handled more efficiently synchronously or asynchronously.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior">
            <summary>
            This behavior explicitly adds an instance of the <see cref="T:System.ServiceModel.Description.ServiceDebugBehavior"/> and the <see cref="T:System.ServiceModel.Description.DispatcherSynchronizationBehavior"/> 
            as binding parameters during <see cref="M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)"/>. This makes these behaviors 
            visible to the <see cref="T:HttpMessageHandlerChannel"/> which is necessary for it to operate correctly.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior.#ctor(System.ServiceModel.Description.ServiceDebugBehavior,System.ServiceModel.Description.DispatcherSynchronizationBehavior)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior"/> class.
            </summary>
            <param name="serviceDebugBehavior">Optional service debug behavior (can be null).</param>
            <param name="dispatcherSynchronizationBehavior">Optional dispatcher synchronization behavior (can be null).</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
            <summary>
            Validates the endpoint meets the criteria required to enable this behavior.
            </summary>
            <param name="serviceEndpoint">The endpoint to validate.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>
            Adds the binding parameters.
            </summary>
            <param name="serviceEndpoint">The service endpoint.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
            <summary>
            Applies the dispatch behavior.
            </summary>
            <param name="serviceEndpoint">The service endpoint.</param>
            <param name="endpointDispatcher">The endpoint dispatcher.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.HttpBindingParameterBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
            <summary>
            Applies the client behavior.
            </summary>
            <param name="serviceEndpoint">The service endpoint.</param>
            <param name="behavior">The behavior.</param>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.HttpBindingSecurity">
            <summary>
            Specifies the types of security available to a service endpoint configured to use an
            <see cref="T:Microsoft.ApplicationServer.Http.HttpBinding"/> binding.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.HttpBindingSecurity.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.HttpBindingSecurity"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.HttpBindingSecurity.Mode">
            <summary>
            Gets or sets the mode of security that is used by an endpoint configured to use an
            <see cref="T:Microsoft.ApplicationServer.Http.HttpBinding"/> binding.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.HttpBindingSecurity.Transport">
            <summary>
            Gets or sets an object that contains the transport-level security settings for the 
            <see cref="T:Microsoft.ApplicationServer.Http.HttpBinding"/> binding.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.HttpBindingSecurityMode">
            <summary>
            Defines the modes of security that can be used to configure a service endpoint that uses the
            <see cref="T:Microsoft.ApplicationServer.Http.HttpBinding"/>.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationServer.Http.HttpBindingSecurityMode.None">
            <summary>
            Indicates no security is used with HTTP requests.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationServer.Http.HttpBindingSecurityMode.Transport">
            <summary>
            Indicates that transport-level security is used with HTTP requests.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationServer.Http.HttpBindingSecurityMode.TransportCredentialOnly">
            <summary>
            Indicates that only HTTP-based client authentication is provided.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.HttpBindingSecurityModeHelper">
            <summary>
            Internal helper class to validate <see cref="T:Microsoft.ApplicationServer.Http.HttpBindingSecurityMode"/> enum values.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.HttpBindingSecurityModeHelper.IsDefined(Microsoft.ApplicationServer.Http.HttpBindingSecurityMode)">
            <summary>
            Determines whether the given <paramref name="value"/> is a valid
            <see cref="T:Microsoft.ApplicationServer.Http.HttpBindingSecurityMode"/> value.
            </summary>
            <param name="value">The value to test.</param>
            <returns><c>true</c> if <paramref name="value"/> is a valid <see cref="T:Microsoft.ApplicationServer.Http.HttpBindingSecurityMode"/> value; otherwise<c> false</c>.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.HttpServiceHost">
            <summary>
            Class that provides a <see cref="T:System.ServiceModel.ServiceHost"/> for the <see cref="T:Microsoft.ApplicationServer.Http.HttpBinding"/> binding.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.HttpServiceHost.#ctor(System.Object,System.Uri[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.HttpServiceHost"/> class.
            </summary>
            <param name="singletonInstance">The instance of the hosted service.</param>
            <param name="baseAddresses">The base addresses for the hosted service.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.HttpServiceHost.#ctor(System.Object,Microsoft.ApplicationServer.Http.HttpConfiguration,System.Uri[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.HttpServiceHost"/> class.
            </summary>
            <param name="singletonInstance">The instance of the hosted service.</param>
            <param name="configuration">The configuration</param>
            <param name="baseAddresses">The base addresses for the hosted service.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.HttpServiceHost.#ctor(System.Type,System.Uri[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.HttpServiceHost"/> class.
            </summary>
            <param name="serviceType">The type of hosted service.</param>
            <param name="baseAddresses">The base addresses for the hosted service.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.HttpServiceHost.#ctor(System.Type,Microsoft.ApplicationServer.Http.HttpConfiguration,System.Uri[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.HttpServiceHost"/> class.
            </summary>
            <param name="serviceType">The type of hosted service.</param>
            <param name="configuration">The configuration</param>
            <param name="baseAddresses">The base addresses for the hosted service.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.HttpServiceHost.#ctor(System.Object,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.HttpServiceHost"/> class.
            </summary>
            <param name="singletonInstance">The instance of the hosted service.</param>
            <param name="baseAddresses">The base addresses for the hosted service.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.HttpServiceHost.#ctor(System.Object,Microsoft.ApplicationServer.Http.HttpConfiguration,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.HttpServiceHost"/> class.
            </summary>
            <param name="singletonInstance">The instance of the hosted service.</param>
            <param name="configuration">The configuration</param>
            <param name="baseAddresses">The base addresses for the hosted service.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.HttpServiceHost.#ctor(System.Type,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.HttpServiceHost"/> class.
            </summary>
            <param name="serviceType">The type of hosted service.</param>
            <param name="baseAddresses">The base addresses for the hosted service.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.HttpServiceHost.#ctor(System.Type,Microsoft.ApplicationServer.Http.HttpConfiguration,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.HttpServiceHost"/> class.
            </summary>
            <param name="serviceType">The type of hosted service.</param>
            <param name="configuration">The configuration.</param>
            <param name="baseAddresses">The base addresses for the hosted service.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.HttpServiceHost.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.HttpServiceHost"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.HttpServiceHost.#ctor(Microsoft.ApplicationServer.Http.HttpConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.HttpServiceHost"/> class.
            </summary>
            <param name="configuration">The configuration</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.HttpServiceHost.AddDefaultEndpoints">
            <summary>
            Adds service endpoints for all base addresses in each contract found in the service host
            with the default binding.
            </summary>
            <returns>A read-only collection of default endpoints.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.HttpServiceHost.AddHttpEndpoint(System.Type,System.String)">
            <summary>
            Adds the HTTP endpoint with configuration.
            </summary>
            <param name="implementedContract">The implemented contract.</param>
            <param name="address">The address.</param>
            <returns>The http endpoint.</returns>
            <exception cref="T:System.UriFormatException"/>
            <exception cref="T:System.ArgumentNullException"/>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.HttpServiceHost.AddHttpEndpoint(System.Type,System.Uri)">
            <summary>
            Adds the HTTP endpoint with configuration.
            </summary>
            <param name="implementedContract">The implemented contract.</param>
            <param name="address">The address.</param>
            <returns>The http endpoint.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.HttpServiceHost.OnOpening">
            <summary>
            Invoked during the transition of a communication object into the opening state.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.HttpTypeHelper">
            <summary>
            A static class that provides HTTP related types and functionality
            around checking types against the set of HTTP related types.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.OperationContextExtensionMethods">
            <summary>
            Extension Methods that provide access to common values from the 
            <see cref="T:System.ServiceModel.OperationContext"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.StandardHttpResponseMessageBuilder">
            <summary>
            Provides various helper methods for creating <see cref="T:System.Net.Http.HttpResponseMessage">HttpResponseMessage</see> instances.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.StandardHttpResponseMessageBuilder.CreateAcceptedResponse(System.Net.Http.HttpRequestMessage)">
            <summary>
            Initializes a new <see cref="T:System.Net.Http.HttpResponseMessage"/> instance as an "HTTP/1.1 202 Accepted" response.
            </summary>
            <param name="request">The request message for which to generate the response message.</param>
            <returns>The initialized HTTP response.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.StandardHttpResponseMessageBuilder.CreateTemporaryRedirectResponse(System.Net.Http.HttpRequestMessage,System.Uri,System.Uri)">
            <summary>
            Initializes a new <see cref="T:System.Net.Http.HttpResponseMessage"/> instance as an "HTTP/1.1 307 Accepted" response.
            </summary>
            <param name="request">The request message for which to generate the response message.</param>
            <param name="oldLocation">The URI being redirected from.</param>
            <param name="newLocation">The URI being redirected to.</param>
            <returns>The initialized HTTP response.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.StandardHttpResponseMessageBuilder.CreateBadRequestResponse(System.Net.Http.HttpRequestMessage)">
            <summary>
            Initializes a new <see cref="T:System.Net.Http.HttpResponseMessage"/> instance as an "HTTP/1.1 400 Bad Request" response.
            </summary>
            <param name="request">The request message for which to generate the response message.</param>
            <returns>The initialized HTTP response.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.StandardHttpResponseMessageBuilder.CreateNotFoundResponse(System.Net.Http.HttpRequestMessage,System.Uri)">
            <summary>
            Initializes a new <see cref="T:System.Net.Http.HttpResponseMessage"/> instance as an "HTTP/1.1 404 Not Found" response.
            </summary>
            <param name="request">The request message for which to generate the response message.</param>
            <param name="helpPageUri">Help page URI or null if not available.</param>
            <returns>The initialized HTTP response.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.StandardHttpResponseMessageBuilder.CreateMethodNotAllowedResponse(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.HttpMethod},System.Uri)">
            <summary>
            Initializes a new <see cref="T:System.Net.Http.HttpResponseMessage"/> instance as an "HTTP/1.1 405 Method Not Allowed" response.
            </summary>
            <param name="request">The request message for which to generate the response message.</param>
            <param name="allowedMethods">List of allowed methods.</param>
            <param name="helpPageUri">Help page URI or null if not available.</param>
            <returns>The initialized HTTP response.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.StandardHttpResponseMessageBuilder.CreateInternalServerErrorResponse(System.Net.Http.HttpRequestMessage,System.Exception,System.Boolean,System.Uri)">
            <summary>
            Initializes a new <see cref="T:System.Net.Http.HttpResponseMessage"/> instance as an "HTTP/1.1 501 Internal Server Error" response.
            </summary>
            <param name="request">The request message for which to generate the response message.</param>
            <param name="error">The exception to include if <paramref name="includeExceptionDetailInFaults"/> is set to true.</param>
            <param name="includeExceptionDetailInFaults">Indicates whether to include exception details in the response. This value should be obtained
            from the current <see cref="T:System.ServiceModel.Description.ServiceDebugBehavior"/> instance.</param>
            <param name="helpPageUri">Help page URI or null if not available.</param>
            <returns>The initialized HTTP response.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.TrailingSlashMode">
            <summary>
            TrailingSlashMode lists the possible ways in which the trailing slash will be handled in URI's.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationServer.Http.TrailingSlashMode.AutoRedirect">
            <summary>
            AutoRedirects in the case of request uri differing by trailing slash
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationServer.Http.TrailingSlashMode.Ignore">
            <summary>
            Ignores the difference in trailing slash in the request uri
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.UriExtensionMethods">
            <summary>
            Extension methods for <see cref="T:System.Uri"/>
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.UriExtensionMethods.GetHostNormalizedUri(System.Uri,System.Net.Http.HttpRequestMessage)">
            <summary>
            Returns a <see cref="T:System.Uri"/> that has been normalized to contain information
            from the host headers of <paramref name="request"/>.
            </summary>
            <param name="uri">The existing <see cref="T:System.Uri"/>.</param>
            <param name="request">The <see cref="T:System.Net.Http.HttpRequestMessage"/> whose host headers should be used.</param>
            <returns>A <see cref="T:System.Uri"/> containing the host header information if it was available.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory">
            <summary>
            <see cref="T:System.ServiceModel.Activation.ServiceHostFactory"/> derived class that can create <see cref="T:Microsoft.ApplicationServer.Http.HttpServiceHost"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])">
            <summary>
            Creates a new <see cref="T:Microsoft.ApplicationServer.Http.HttpServiceHost"/> instance.
            </summary>
            <param name="serviceType">Specifies the type of service to host.</param>
            <param name="baseAddresses">The base addresses for the service hosted.</param>
            <returns>A new <see cref="T:Microsoft.ApplicationServer.Http.HttpServiceHost"/> instance.</returns>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Activation.HttpServiceHostFactory.Configuration">
            <summary>
            Gets or sets the configuration.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement">
            <summary>
            Provides an <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncoderFactory"/> that returns a <see cref="T:System.ServiceModel.Channels.MessageEncoder"/> 
            that is able to produce and consume <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessage"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
            <summary>
            Returns a value that indicates whether the binding element can build a listener for a specific type of channel.
            </summary>
            <typeparam name="TChannel">The type of channel the listener accepts.</typeparam>
            <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext"/> that provides context for the binding element</param>
            <returns>true if the <see cref="T:System.ServiceModel.Channels.IChannelListener`1"/> of type <see cref="T:System.ServiceModel.Channels.IChannel"/> can be built by the binding element; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
            <summary>
            Returns a value that indicates whether the binding element can build a channel factory for a specific type of channel.
            </summary>
            <typeparam name="TChannel">The type of channel the channel factory produces.</typeparam>
            <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext"/> that provides context for the binding element</param>
            <returns>ALways false.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
            <summary>
            Returns a value that indicates whether the binding element can build a channel factory for a specific type of channel.
            </summary>
            <typeparam name="TChannel">The type of channel the channel factory produces.</typeparam>
            <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext"/> that provides context for the binding element</param>
            <returns>ALways false.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
            <summary>
            Initializes a channel listener to accept channels of a specified type from the binding context.
            </summary>
            <typeparam name="TChannel">The type of channel the listener is built to accept.</typeparam>
            <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext"/> that provides context for the binding element</param>
            <returns>The <see cref="T:System.ServiceModel.Channels.IChannelListener`1"/> of type <see cref="T:System.ServiceModel.Channels.IChannel"/> initialized from the context.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement.Clone">
            <summary>
            Returns a copy of the binding element object.
            </summary>
            <returns>A <see cref="T:System.ServiceModel.Channels.BindingElement"/> object that is a deep clone of the original.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement.CreateMessageEncoderFactory">
            <summary>
            Creates a factory for producing message encoders that are able to 
            produce and consume <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessage"/> instances.
            </summary>
            <returns>
            The <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory"/> used to produce message encoders that are able to 
            produce and consume <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessage"/> instances.
            </returns>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement.MessageVersion">
            <summary>
            Gets or sets the message version that can be handled by the message encoders produced by the message encoder factory.
            </summary>
            <returns>The <see cref="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageEncodingBindingElement.MessageVersion"/> used by the encoders produced by the message encoder factory.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageExtensionMethods">
            <summary>
            Provides extension methods for getting an <see cref="T:System.Net.Http.HttpRequestMessage"/> instance or
            an <see cref="T:System.Net.Http.HttpResponseMessage"/> instance from a <see cref="T:System.ServiceModel.Channels.Message"/> instance and
            provides extension methods for creating a <see cref="T:System.ServiceModel.Channels.Message"/> instance from either an 
            <see cref="T:System.Net.Http.HttpRequestMessage"/> instance or an 
            <see cref="T:System.Net.Http.HttpResponseMessage"/> instance.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageExtensionMethods.ToHttpRequestMessage(System.ServiceModel.Channels.Message)">
            <summary>
            Returns a reference to the <see cref="T:System.Net.Http.HttpRequestMessage"/> 
            instance held by the given <see cref="T:System.ServiceModel.Channels.Message"/> or null if the <see cref="T:System.ServiceModel.Channels.Message"/> does not
            hold a reference to an <see cref="T:System.Net.Http.HttpRequestMessage"/> 
            instance.
            </summary>
            <param name="message">The given <see cref="T:System.ServiceModel.Channels.Message"/> that holds a reference to an 
            <see cref="T:System.Net.Http.HttpRequestMessage"/> instance.
            </param>
            <returns>
            A reference to the <see cref="T:System.Net.Http.HttpRequestMessage"/> 
            instance held by the given <see cref="T:System.ServiceModel.Channels.Message"/> or null if the <see cref="T:System.ServiceModel.Channels.Message"/> does not
            hold a reference to an <see cref="T:System.Net.Http.HttpRequestMessage"/> 
            instance.
            </returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageExtensionMethods.ExtractHttpRequestMessage(System.ServiceModel.Channels.Message)">
            <summary>
            Returns a reference to the <see cref="T:System.Net.Http.HttpRequestMessage"/> 
            instance held by the given <see cref="T:System.ServiceModel.Channels.Message"/> or null if the <see cref="T:System.ServiceModel.Channels.Message"/> does not
            hold a reference to an <see cref="T:System.Net.Http.HttpRequestMessage"/> 
            instance.
            </summary>
            <remarks>The caller takes over the ownership of the associated <see cref="T:System.Net.Http.HttpRequestMessage"/> and is responsible for its disposal.</remarks>
            <param name="message">The given <see cref="T:System.ServiceModel.Channels.Message"/> that holds a reference to an 
            <see cref="T:System.Net.Http.HttpRequestMessage"/> instance.
            </param>
            <returns>
            A reference to the <see cref="T:System.Net.Http.HttpRequestMessage"/> 
            instance held by the given <see cref="T:System.ServiceModel.Channels.Message"/> or null if the <see cref="T:System.ServiceModel.Channels.Message"/> does not
            hold a reference to an <see cref="T:System.Net.Http.HttpRequestMessage"/> 
            instance.
            The caller is responsible for disposing any <see cref="T:System.Net.Http.HttpRequestMessage"/> instance returned.
            </returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageExtensionMethods.ToHttpResponseMessage(System.ServiceModel.Channels.Message)">
            <summary>
            Returns a reference to the <see cref="T:System.Net.Http.HttpResponseMessage"/> 
            instance held by the given <see cref="T:System.ServiceModel.Channels.Message"/> or null if the <see cref="T:System.ServiceModel.Channels.Message"/> does not
            hold a reference to an <see cref="T:System.Net.Http.HttpResponseMessage"/> 
            instance.
            </summary>
            <param name="message">The given <see cref="T:System.ServiceModel.Channels.Message"/> that holds a reference to an 
            <see cref="T:System.Net.Http.HttpResponseMessage"/> instance.
            </param>
            <returns>
            A reference to the <see cref="T:System.Net.Http.HttpResponseMessage"/> 
            instance held by the given <see cref="T:System.ServiceModel.Channels.Message"/> or null if the <see cref="T:System.ServiceModel.Channels.Message"/> does not
            hold a reference to an <see cref="T:System.Net.Http.HttpResponseMessage"/> 
            instance.
            </returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageExtensionMethods.ExtractHttpResponseMessage(System.ServiceModel.Channels.Message)">
            <summary>
            Returns a reference to the <see cref="T:System.Net.Http.HttpResponseMessage"/> 
            instance held by the given <see cref="T:System.ServiceModel.Channels.Message"/> or null if the <see cref="T:System.ServiceModel.Channels.Message"/> does not
            hold a reference to an <see cref="T:System.Net.Http.HttpResponseMessage"/> 
            instance.
            </summary>
            <remarks>The caller takes over the ownership of the associated <see cref="T:System.Net.Http.HttpRequestMessage"/> and is responsible for its disposal.</remarks>
            <param name="message">The given <see cref="T:System.ServiceModel.Channels.Message"/> that holds a reference to an 
            <see cref="T:System.Net.Http.HttpResponseMessage"/> instance.
            </param>
            <returns>
            A reference to the <see cref="T:System.Net.Http.HttpResponseMessage"/> 
            instance held by the given <see cref="T:System.ServiceModel.Channels.Message"/> or null if the <see cref="T:System.ServiceModel.Channels.Message"/> does not
            hold a reference to an <see cref="T:System.Net.Http.HttpResponseMessage"/> 
            instance.
            The caller is responsible for disposing any <see cref="T:System.Net.Http.HttpResponseMessage"/> instance returned.
            </returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageExtensionMethods.ToMessage(System.Net.Http.HttpRequestMessage)">
            <summary>
            Creates a new <see cref="T:System.ServiceModel.Channels.Message"/> that holds a reference to the given 
            <see cref="T:System.Net.Http.HttpRequestMessage"/> instance.
            </summary>
            <param name="request">The <see cref="T:System.Net.Http.HttpRequestMessage"/> 
            instance to which the new <see cref="T:System.ServiceModel.Channels.Message"/> should hold a reference.
            </param>
            <returns>A <see cref="T:System.ServiceModel.Channels.Message"/> that holds a reference to the given
            <see cref="T:System.Net.Http.HttpRequestMessage"/> instance.
            </returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageExtensionMethods.ToMessage(System.Net.Http.HttpResponseMessage)">
            <summary>
            Creates a new <see cref="T:System.ServiceModel.Channels.Message"/> that holds a reference to the given
            <see cref="T:System.Net.Http.HttpResponseMessage"/> instance.
            </summary>
            <param name="response">The <see cref="T:System.Net.Http.HttpResponseMessage"/> 
            instance to which the new <see cref="T:System.ServiceModel.Channels.Message"/> should hold a reference.
            </param>
            <returns>A <see cref="T:System.ServiceModel.Channels.Message"/> that holds a reference to the given
            <see cref="T:System.Net.Http.HttpResponseMessage"/> instance.
            </returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement">
            <summary>
            Provides a <see cref="T:System.ServiceModel.Channels.BindingElement"/> implementation that provides <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener"/> instances. 
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement"/> class. 
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement.#ctor(Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement"/> class.
            </summary>
            <param name="elementToBeCloned">The element to be cloned.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
            <summary>
            Returns a value that indicates whether the binding element can build a channel factory for a specific type of channel.
            </summary>
            <typeparam name="TChannel">The type of channel the channel factory produces.</typeparam>
            <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext"/> that provides context for the binding element</param>
            <returns>ALways false.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
            <summary>
            Initializes a channel factory for producing channels of a specified type from the binding context.
            </summary>
            <typeparam name="TChannel">The type of channel the factory builds.</typeparam>
            <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext"/> that provides context for the binding element</param>
            <returns>Throws <see cref="T:System.NotSupportedException"/>.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
            <summary>
            Returns a value that indicates whether the binding element can build a listener for a specific type of channel.
            </summary>
            <typeparam name="TChannel">The type of channel the listener accepts.</typeparam>
            <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext"/> that provides context for the binding element</param>
            <returns>true if the <see cref="T:System.ServiceModel.Channels.IChannelListener`1"/> of type <see cref="T:System.ServiceModel.Channels.IChannel"/> can be built by the binding element; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
            <summary>
            Initializes a channel listener to accept channels of a specified type from the binding context.
            </summary>
            <typeparam name="TChannel">The type of channel the listener is built to accept.</typeparam>
            <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext"/> that provides context for the binding element</param>
            <returns>The <see cref="T:System.ServiceModel.Channels.IChannelListener`1"/> of type <see cref="T:System.ServiceModel.Channels.IChannel"/> initialized from the context.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement.Clone">
            <summary>
            Returns a copy of the binding element object.
            </summary>
            <returns>A <see cref="T:System.ServiceModel.Channels.BindingElement"/> object that is a deep clone of the original.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
            <summary>
            Returns a typed object requested, if present, from the appropriate layer in the binding stack
            </summary>
            <typeparam name="T">e typed object for which the method is querying.</typeparam>
            <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext"/> that provides context for the binding element</param>
            <returns>The typed object T requested if it is present or null if it is not present.</returns>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement.MessageHandlerFactory">
            <summary>
            Gets or sets a value representing the <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory"/> to use for
            instantiating an <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel">
            <summary>
            This <see cref="T:System.ServiceModel.Channels.IReplyChannel"/> encapsulates an <see cref="T:System.Net.Http.HttpMessageHandler"/> enabling an easy way for 
            plugging into an <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding"/> using the <see cref="T:System.Threading.Tasks.Task"/> based extensibility model provided by 
            <see cref="T:System.Net.Http.HttpMessageHandler"/>.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.#ctor(System.ServiceModel.Channels.ChannelManagerBase,System.ServiceModel.Channels.IReplyChannel,Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel"/> class.
            </summary>
            <param name="channelManager">The <see cref="T:System.ServiceModel.Channels.ChannelManagerBase"/> that provides default timeouts for the channel operations (send, receive, open, and close).</param>
            <param name="innerChannel">The underlying <see cref="T:System.ServiceModel.Channels.IReplyChannel"/> instance.</param>
            <param name="httpMessageHandlerFactory">The <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory"/> used on instantiate a <see cref="T:System.Net.Http.HttpMessageHandler"/>.</param>
            <param name="asynchronousSendEnabled">Value indicating whether asynchronous send behavior is enabled on <see cref="T:System.ServiceModel.Channels.RequestContext"/>.</param>
            <param name="includeExceptionDetailInFaults">Value indicating whether to include managed exception information in the detail of HTTP Internal Error responses.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.BeginReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to receive an available request with a specified timeout.
            </summary>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> that specifies the interval of time to wait for the reception of an available request.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback"/> delegate that receives the notification of the asynchronous receive that a request operation completes.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</param>
            <returns>The <see cref="T:System.IAsyncResult"/> that references the asynchronous reception of the request.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.BeginReceiveRequest(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to receive an available request with a specified timeout.
            </summary>
            <param name="callback">The <see cref="T:System.AsyncCallback"/> delegate that receives the notification of the asynchronous receive that a request operation completes.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</param>
            <returns>The <see cref="T:System.IAsyncResult"/> that references the asynchronous reception of the request.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to receive a request message that has a specified time out and state object associated with it. 
            </summary>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> that specifies how long the receive request operation has to complete before timing out and returning false.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback"/> delegate that receives the notification of the asynchronous receive that a request operation completes.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</param>
            <returns>The <see cref="T:System.IAsyncResult"/> that references the asynchronous reception of the request.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous request operation that has a specified time out and state object associated with it. 
            </summary>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> that specifies the interval of time to wait for the reception of an available request.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback"/> delegate that receives the notification of the asynchronous receive that a request operation completes.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</param>
            <returns>The <see cref="T:System.IAsyncResult"/> that references the asynchronous operation to wait for a request message to arrive.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.EndReceiveRequest(System.IAsyncResult)">
            <summary>
            Completes an asynchronous operation to receive an available request. 
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult"/> returned by a call to <see cref="M:BeginReceive"/>.</param>
            <returns>The <see cref="T:System.ServiceModel.Channels.RequestContext"/> used to construct a reply to the request. </returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.EndTryReceiveRequest(System.IAsyncResult,System.ServiceModel.Channels.RequestContext@)">
            <summary>
            Completes the specified asynchronous operation to receive a request message.
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult"/> returned by a call to <see cref="M:BeginTryReceiveRequest"/>.</param>
            <param name="context">The <see cref="T:System.ServiceModel.Channels.RequestContext"/> received.</param>
            <returns>true if a request message is received before the specified interval of time elapses; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.EndWaitForRequest(System.IAsyncResult)">
            <summary>
            Completes the specified asynchronous wait-for-a-request message operation.
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult"/> that identifies the <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.BeginWaitForRequest(System.TimeSpan,System.AsyncCallback,System.Object)"/> operation to finish, and from which to retrieve an end result.</param>
            <returns>true if a request is received before the specified interval of time elapses; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveRequest(System.TimeSpan)">
            <summary>
            Returns the context of the request received, if one is available. If a context is not available, waits until there is one available. 
            </summary>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> that specifies how long the receive of a request operation has to complete before timing out.</param>
            <returns>The <see cref="T:System.ServiceModel.Channels.RequestContext"/> used to construct replies. </returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveRequest">
            <summary>
            Returns the context of the request received, if one is available. If a context is not available, waits until there is one available. 
            </summary>
            <returns>The <see cref="T:System.ServiceModel.Channels.RequestContext"/> used to construct replies.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.TryReceiveRequest(System.TimeSpan,System.ServiceModel.Channels.RequestContext@)">
            <summary>
            Returns a value that indicates whether a request is received before a specified interval of time elapses. 
            </summary>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> that specifies how long the receive of a request operation has to complete before timing out and returning false.</param>
            <param name="context">The <see cref="T:System.ServiceModel.Channels.RequestContext"/> received.</param>
            <returns>true if a request message is received before the specified interval of time elapses; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.WaitForRequest(System.TimeSpan)">
            <summary>
            Returns a value that indicates whether a request message is received before a specified interval of time elapses.
            </summary>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> that specifies how long a request operation has to complete before timing out and returning false.</param>
            <returns>true if a request is received before the specified interval of time elapses; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.OnOpened">
            <summary>
            Invoked during the transition of a communication object into the opened state.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.OnClosed">
            <summary>
            Invoked during the transition of a communication object into the closing state.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.OnAbort">
            <summary>
            Inserts processing on a communication object after it transitions to the closing state due to the invocation of a synchronous abort operation.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.LocalAddress">
            <summary>
            Gets the address on which this reply channel receives messages.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.AsynchronousSendEnabled">
            <summary>
            Gets a value indicating whether asynchronous send behavior is enabled on <see cref="T:System.ServiceModel.Channels.RequestContext"/>. 
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.IncludeExceptionDetailInFaults">
            <summary>
            Gets a value indicating whether to include managed exception information in the detail of HTTP Server Error responses.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.RequestPropertyKey">
            <summary>
            Gets the key used to identify the <see cref="T:HttpMessageHandlerChannel.HttpMessageHandlerRequestContext"/> instance used to process incoming 
            <see cref="T:System.Net.Http.HttpRequestMessage"/> requests.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.TryReceiveAsyncResult">
            <summary>
            Encapsulates the results of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveAsyncResultBase">
            <summary>
            Base class encapsulating the shared results of <see cref="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.BeginTryReceiveRequest(System.TimeSpan,System.AsyncCallback,System.Object)"/> and 
            <see cref="M:HttpMessageHandlerChannel.BeginReceiveRequest"/>.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveAsyncResultBase.#ctor(Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel,System.TimeSpan,System.AsyncCallback,System.Object,System.Threading.CancellationTokenSource)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveAsyncResultBase"/> class.
            </summary>
            <param name="channel">The <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel"/> within which we are operating.</param>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> that specifies how long the receive request operation has to complete before timing out.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback"/> delegate that receives the notification of the asynchronous receive that a request operation completes.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</param>
            <param name="cancellationTokenSource">Token source used to cancel operation.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveAsyncResultBase.StartReceive">
            <summary>
            Start receiving a request from the inner channel
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveAsyncResultBase.CompleteReceive(System.IAsyncResult)">
            <summary>
            Complete receiving a request from the inner channel
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult"/> returned by a call to BeginReceiveRequest or BeginTryReceiveRequest.</param>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveAsyncResultBase.CancellationToken">
            <summary>
            Gets the token used to cancel operation.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveAsyncResultBase.SyncCompletedEvent">
            <summary>
            Gets or sets an event that indicates when the synchronous reply path has completed.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveAsyncResultBase.Channel">
            <summary>
            Gets the <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel"/> within which we are operating.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveAsyncResultBase.Timeout">
            <summary>
            Gets the <see cref="T:System.TimeSpan"/> that specifies how long the receive request operation has to complete before timing out.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveAsyncResultBase.Context">
            <summary>
            Gets or sets the <see cref="T:System.ServiceModel.Channels.RequestContext"/> representing the reply.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveAsyncResultBase.HttpMessageHandlerRequestContext">
            <summary>
            Provides a reply that is correlated to an incoming request.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveAsyncResultBase.HttpMessageHandlerRequestContext.#ctor(Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveAsyncResultBase,System.ServiceModel.Channels.RequestContext,System.TimeSpan,System.Threading.CancellationToken,Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveAsyncResultBase.HttpMessageHandlerRequestContext"/> class.
            </summary>
            <param name="receiveResult">The <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveAsyncResultBase"/> associated with this operation.</param>
            <param name="innerContext">The inner context on which we send the reply.</param>
            <param name="defaultSendTimeout">The default interval of time provided for a send operation to complete.</param>
            <param name="channelCancellationToken">Token used to cancel operation.</param>
            <param name="channel"><see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel"/> instance.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveAsyncResultBase.HttpMessageHandlerRequestContext.StartHttpMessageChannel">
            <summary>
            Starts the <see cref="T:System.Net.Http.HttpMessageHandler"/> provided by the <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory"/>.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveAsyncResultBase.HttpMessageHandlerRequestContext.CreateOuterHandlerTask">
            <summary>
            Creates the outer handler task which is completed when reply is returned from Service Model.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the operation.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveAsyncResultBase.HttpMessageHandlerRequestContext.Abort">
            <summary>
            Aborts processing the request associated with the context. 
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveAsyncResultBase.HttpMessageHandlerRequestContext.Close(System.TimeSpan)">
            <summary>
            Closes the operation that is replying to the request context associated with the current context.
            </summary>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> that specifies the interval of time within which the reply operation associated with the current context must close.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveAsyncResultBase.HttpMessageHandlerRequestContext.Close">
            <summary>
            Closes the operation that is replying to the request context associated with the current context.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveAsyncResultBase.HttpMessageHandlerRequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to reply to the request associated with the current context.
            </summary>
            <param name="message">The incoming <see cref="T:System.ServiceModel.Channels.Message"/> that contains the request.</param>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> that specifies the interval of time to wait for the reply to an available request.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback"/> delegate that receives the notification of the asynchronous reply operation completion.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous reply operation.</param>
            <returns>The <see cref="T:System.IAsyncResult"/> that references the asynchronous reply operation.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveAsyncResultBase.HttpMessageHandlerRequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to reply to the request associated with the current context.
            </summary>
            <param name="message">The incoming <see cref="T:System.ServiceModel.Channels.Message"/> that contains the request.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback"/> delegate that receives the notification of the asynchronous reply operation completion.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous reply operation.</param>
            <returns>The <see cref="T:System.IAsyncResult"/> that references the asynchronous reply operation.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveAsyncResultBase.HttpMessageHandlerRequestContext.EndReply(System.IAsyncResult)">
            <summary>
            Completes an asynchronous operation to reply to a request message.
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult"/> returned by a call to <see cref="M:HttpMessageHandlerRequestContext.BeginReply"/>.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveAsyncResultBase.HttpMessageHandlerRequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)">
            <summary>
            Replies to a request message within a specified interval of time.
            </summary>
            <param name="message">The incoming <see cref="T:System.ServiceModel.Channels.Message"/> that contains the request.</param>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> that specifies the interval of time to wait for the reply to a request.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveAsyncResultBase.HttpMessageHandlerRequestContext.Reply(System.ServiceModel.Channels.Message)">
            <summary>
            Replies to a request message within a specified interval of time.
            </summary>
            <param name="message">The incoming <see cref="T:System.ServiceModel.Channels.Message"/> that contains the request.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveAsyncResultBase.HttpMessageHandlerRequestContext.Dispose(System.Boolean)">
            <summary>
            Releases resources associated with the context.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveAsyncResultBase.HttpMessageHandlerRequestContext.RequestMessage">
            <summary>
            Gets the message that contains the request.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveAsyncResultBase.HttpMessageHandlerRequestContext.ReplyAsyncResult">
            <summary>
            Encapsulates the results of <see cref="M:HttpMessageHandlerRequestContext.BeginReply"/>.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveAsyncResultBase.HttpMessageHandlerRequestContext.ReplyAsyncResult.#ctor(System.ServiceModel.Channels.RequestContext,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveAsyncResultBase.HttpMessageHandlerRequestContext.ReplyAsyncResult"/> class.
            </summary>
            <param name="innerContext">The inner context where to send the reply.</param>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> that specifies the interval of time to wait for the reply to an available request.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback"/> delegate that receives the notification of the asynchronous reply operation completion.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous reply operation.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveAsyncResultBase.HttpMessageHandlerRequestContext.ReplyAsyncResult.End(System.IAsyncResult)">
            <summary>
            Completes the specified asynchronous operation to send a reply.
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult"/> instance.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveAsyncResultBase.HttpMessageHandlerRequestContext.ReplyAsyncResult.ContinueReplyPath(System.Net.Http.HttpResponseMessage)">
            <summary>
            When the <see cref="T:System.Net.Http.HttpMessageHandler"/> has been completed we continue sending the
            reply.
            </summary>
            <param name="httpResponse">The <see cref="T:System.Net.Http.HttpResponseMessage"/> output from the <see cref="T:System.Net.Http.HttpMessageHandler"/>.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveAsyncResultBase.HttpMessageHandlerRequestContext.ReplyAsyncResult.CompleteReplyPath(System.Boolean,System.Exception)">
            <summary>
            Completes the reply path.
            </summary>
            <param name="completedSynchronously">if set to <c>true</c> the result completed synchronously.</param>
            <param name="exception">The exception (if any) to complete the result with.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.TryReceiveAsyncResult.#ctor(Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel,System.TimeSpan,System.AsyncCallback,System.Object,System.Threading.CancellationTokenSource)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.TryReceiveAsyncResult"/> class.
            </summary>
            <param name="channel">The <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel"/> within which we are operating.</param>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> that specifies how long the receive request operation has to complete before timing out and returning false.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback"/> delegate that receives the notification of the asynchronous receive that a request operation completes.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</param>
            <param name="cancellationTokenSource">Token source used to cancel operation.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.TryReceiveAsyncResult.End(System.IAsyncResult,System.ServiceModel.Channels.RequestContext@)">
            <summary>
            Completes the specified asynchronous operation to receive a request.
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult"/> instance.</param>
            <param name="context">The <see cref="T:System.ServiceModel.Channels.RequestContext"/> received.</param>
            <returns>true if a request message is received before the specified interval of time elapses; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.TryReceiveAsyncResult.StartReceive">
            <summary>
            Start receiving a request from the inner channel
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.TryReceiveAsyncResult.CompleteReceive(System.IAsyncResult)">
            <summary>
            Complete receiving a request from the inner channel
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult"/> returned by a call to <see cref="M:BeginTryReceiveRequest"/>.</param>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveAsyncResult">
            <summary>
            Encapsulates the results of <see cref="M:BeginReceiveRequest"/>.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveAsyncResult.#ctor(Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel,System.TimeSpan,System.AsyncCallback,System.Object,System.Threading.CancellationTokenSource)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveAsyncResult"/> class.
            </summary>
            <param name="channel">The <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel"/> within which we are operating.</param>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> that specifies how long the receive request operation has to complete before timing out.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback"/> delegate that receives the notification of the asynchronous receive that a request operation completes.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous receive of a request operation.</param>
            <param name="cancellationTokenSource">Token source used to cancel operation.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveAsyncResult.End(System.IAsyncResult)">
            <summary>
            Completes the specified asynchronous operation to receive a request.
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult"/> instance.</param>
            <returns>The <see cref="T:System.ServiceModel.Channels.RequestContext"/> used to construct a reply to the request. </returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveAsyncResult.StartReceive">
            <summary>
            Start receiving a request from the inner channel
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ReceiveAsyncResult.CompleteReceive(System.IAsyncResult)">
            <summary>
            Complete receiving a request from the inner channel
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult"/> returned by a call to <see cref="M:BeginReceiveRequest"/>.</param>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.InnerHandler">
            <summary>
            Handler wrapping the bottom (towards network) of the <see cref="T:System.Net.Http.HttpMessageHandler"/> and integrates
            back into the <see cref="T:System.ServiceModel.Channels.IReplyChannel"/>.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.InnerHandler.#ctor(System.Net.Http.HttpMessageHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.InnerHandler"/> class.
            </summary>
            <param name="innerChannel">The inner <see cref="T:System.Net.Http.HttpMessageHandler"/> on which we send the <see cref="T:System.Net.Http.HttpRequestMessage"/>.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.InnerHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Submits an <see cref="T:System.Net.Http.HttpRequestMessage"/> on the inner channel asynchronously.
            </summary>
            <param name="request"><see cref="T:System.Net.Http.HttpRequestMessage"/> to submit</param>
            <param name="cancellationToken">Token used to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the operation.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.InnerHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Submits an <see cref="T:System.Net.Http.HttpRequestMessage"/> on the inner channel synchronously.
            </summary>
            <param name="request"><see cref="T:System.Net.Http.HttpRequestMessage"/> to submit</param>
            <param name="cancellationToken">Token used to cancel operation.</param>
            <returns>The <see cref="T:System.Net.Http.HttpResponseMessage"/> resulting from the operation.</returns>
            <remarks>Throws <see cref="T:System.NotImplementedException"/>.</remarks>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.OuterHandler">
            <summary>
            Handler wrapping the top (towards Service Model) of the <see cref="T:System.Net.Http.HttpMessageHandler"/> and integrates
            bask into the <see cref="T:System.ServiceModel.Channels.IReplyChannel"/>.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.OuterHandler.#ctor(Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.OuterHandler"/> class.
            </summary>
            <param name="channel">The channel instance this handler instance is associated with.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.OuterHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Submits an <see cref="T:System.Net.Http.HttpRequestMessage"/> on the inner channel synchronously.
            </summary>
            <param name="request"><see cref="T:System.Net.Http.HttpRequestMessage"/> to submit</param>
            <param name="cancellationToken">Token used to cancel operation.</param>
            <returns>The <see cref="T:System.Net.Http.HttpResponseMessage"/> resulting from the operation.</returns>
            <remarks>Throws <see cref="T:System.NotImplementedException"/>.</remarks>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.OuterHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Submits an <see cref="T:System.Net.Http.HttpRequestMessage"/> on the inner channel asynchronously.
            </summary>
            <param name="request"><see cref="T:System.Net.Http.HttpRequestMessage"/> to submit</param>
            <param name="cancellationToken">Token used to cancel operation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the operation.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ErrorHandler">
            <summary>
            Error handler used in case the pipeline cannot be constructed. This handler always returns an HTTP response
            based on the exception provided in the constructor.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ErrorHandler.#ctor(System.Net.Http.HttpMessageHandler,Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ErrorHandler"/> class.
            </summary>
            <param name="innerChannel">The inner <see cref="T:System.Net.Http.HttpMessageHandler"/> on which we send the <see cref="T:System.Net.Http.HttpRequestMessage"/>.</param>
            <param name="channel">The channel instance this handler instance is associated with.</param>
            <param name="exception">The exception to include in the HTTP response.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ErrorHandler.Send(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Sends the specified request.
            </summary>
            <param name="request">The request.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The resulting <see cref="T:System.Net.Http.HttpResponseMessage"/>.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel.ErrorHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Creates a <see cref="T:System.Threading.Tasks.Task`1"/> that always returns an HTTP error response.
            </summary>
            <param name="request"><see cref="T:System.Net.Http.HttpRequestMessage"/> to submit</param>
            <param name="cancellationToken">Token used to cancel operation.</param>
            <returns>Task that always returns an HTTP response.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener">
            <summary>
            Defines a <see cref="T:System.ServiceModel.Channels.IChannelListener"/> for creating <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.Channels.IChannelListener{System.ServiceModel.Channels.IReplyChannel},Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener"/> class.
            </summary>
            <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding"/> using this <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener"/>.</param>
            <param name="innerListener">The underlying <see cref="T:System.ServiceModel.Channels.IChannelListener"/> instance.</param>
            <param name="httpMessageHandlerFactory">The <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory"/> used on instantiate a <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannel"/>.</param>
            <param name="asynchronousSendEnabled">Value indicating whether asynchronous send behavior is enabled on <see cref="T:System.ServiceModel.Channels.RequestContext"/>.</param>
            <param name="includeExceptionDetailInFaults">Value indicating whether to include managed exception information in the detail of HTTP Internal Error responses.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener.OnOpening">
            <summary>
            Invoked during the transition of a communication object into the opening state.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener.OnAcceptChannel(System.TimeSpan)">
            <summary>
            Provides an extensibility point when accepting a channel.
            </summary>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> that specifies how long the accept channel operation has to complete before timing out.</param>
            <returns>The <see cref="T:System.ServiceModel.Channels.IReplyChannel"/> accepted.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener.OnBeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Provides an asynchronous extensibility point when beginning to accept a channel.
            </summary>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> that specifies how long the accept channel operation has to complete before timing out.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback"/> delegate that receives the notification of the asynchronous completion of the accept channel operation.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous accept channel operation.</param>
            <returns>The <see cref="T:System.IAsyncResult"/> that references the asynchronous accept channel operation.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener.OnEndAcceptChannel(System.IAsyncResult)">
            <summary>
            Provides an asynchronous extensibility point when completing the acceptance a channel.
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult"/> returned by a call to <see cref="M:OnBeginAcceptChannel"/>.</param>
            <returns>The <see cref="T:System.ServiceModel.Channels.IReplyChannel"/> accepted by the listener.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Provides a point of extensibility when starting to wait for a channel to arrive.
            </summary>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> that specifies how long the on begin wait operation has to complete before timing out.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback"/> delegate that receives the notification of the asynchronous operation on begin wait completion.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous on begin wait operation.</param>
            <returns>The <see cref="T:System.IAsyncResult"/> that references the asynchronous on begin wait operation. </returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener.OnEndWaitForChannel(System.IAsyncResult)">
            <summary>
            Provides a point of extensibility when ending the waiting for a channel to arrive.
            </summary>
            <param name="result">The <see cref="T:System.IAsyncResult"/> returned by a call to <see cref="M:OnBeginWaitForChannel"/>.</param>
            <returns>true if the method completed before the interval of time specified by the timeout expired; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerChannelListener.OnWaitForChannel(System.TimeSpan)">
            <summary>
            Provides a point of extensibility when waiting for a channel to arrive.
            </summary>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> that specifies how long the on wait for a channel operation has to complete before timing out.</param>
            <returns>true if the method completed before the interval of time specified by the timeout expired; otherwise false.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory">
            <summary>
            Default HTTP message handler factory 
            for instantiating a set of HTTP message handler types using their default constructors.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory.#ctor(System.Type[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory"/> class given
            a set of HTTP message handler types to instantiate using their default constructors.
            </summary>
            <param name="handlers">An ordered list of HTTP message handler types to be invoked as part of an 
            <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerBindingElement"/> instance.
            HTTP message handler types must derive from <see cref="T:System.Net.Http.DelegatingHandler"/> and have a public constructor
            taking exactly one argument of type <see cref="T:System.Net.Http.HttpMessageHandler"/>. The handlers are invoked in a 
            bottom-up fashion in the incoming path and top-down in the outgoing path.
            That is, the last entry is called first 
            for an incoming request message but invoked last for an outgoing response message.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory.#ctor(System.Func{System.Collections.Generic.IEnumerable{System.Net.Http.DelegatingHandler}})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory"/> class given
            a <see cref="T:System.Func`1"/> used to create a set of <see cref="T:System.Net.Http.DelegatingHandler"/> instances.
            </summary>
            <param name="handlers">A function to generate an ordered list of <see cref="T:System.Net.Http.DelegatingHandler"/> instances 
            to be invoked as part of an <see cref="T:System.Net.Http.HttpMessageHandler"/> instance.
            The handlers are invoked in a bottom-up fashion in the incoming path and top-down in the outgoing path. That is, 
            the last entry is called first for an incoming request message but invoked last for an outgoing response message.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory.Create(System.Net.Http.HttpMessageHandler)">
            <summary>
            Creates an instance of an <see cref="T:System.Net.Http.HttpMessageHandler"/> using the HTTP message handlers
            provided in the constructor.
            </summary>
            <param name="innerChannel">The inner channel represents the destination of the HTTP message channel.</param>
            <returns>The HTTP message channel.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory.OnCreate(System.Net.Http.HttpMessageHandler)">
            <summary>
            Creates an instance of an <see cref="T:System.Net.Http.HttpMessageHandler"/> using the HTTP message handlers
            provided in the constructor.
            </summary>
            <param name="innerChannel">The inner channel represents the destination of the HTTP message channel.</param>
            <returns>The HTTP message channel.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Configuration.HttpBindingCollectionElement">
            <summary>
            Represents a configuration element that contains sub-elements that specify settings for using 
            the <see cref="T:Microsoft.ApplicationServer.Http.HttpBinding">HttpBinding</see> binding.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Configuration.HttpBindingCollectionElement.GetDefault">
            <summary>
            Returns a default <see cref="T:Microsoft.ApplicationServer.Http.HttpBinding">HttpBinding</see> binding.
            </summary>
            <returns>
            A default <see cref="T:Microsoft.ApplicationServer.Http.HttpBinding">HttpBinding</see> binding.
            </returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement">
            <summary>
            A configuration element for the <see cref="T:Microsoft.ApplicationServer.Http.HttpBinding">HttpBinding</see>
            binding. 
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement"/> class and specifies 
            the name of the element. 
            </summary>
            <param name="name">The name that is used for this binding configuration element</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
            <summary>
            Initializes the <see cref="T:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement"/> from an 
            <see cref="T:Microsoft.ApplicationServer.Http.HttpBinding">HttpBinding</see> instance.
            </summary>
            <param name="binding">
            The <see cref="T:Microsoft.ApplicationServer.Http.HttpBinding">HttpBinding</see> instance from which
            the <see cref="T:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement"/> will be initialized.
            </param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
            <summary>
            Applies the configuration of the the <see cref="T:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement"/> to the given
            <see cref="T:Microsoft.ApplicationServer.Http.HttpBinding">HttpBinding</see> instance.
            </summary>
            <param name="binding">The <see cref="T:Microsoft.ApplicationServer.Http.HttpBinding">HttpBinding</see> 
            instance to which the <see cref="T:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement"/> configuration will be applied.
            </param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)">
            <summary>
            Used by InitializeFrom() pattern to avoid writing default values to generated .config files.
            </summary>
            <typeparam name="T">The type of the property value.</typeparam>
            <param name="propertyName">ConfigurationProperty.Name for the configuration property to set</param>
            <param name="value">Value to set</param>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.HostNameComparisonMode">
            <summary>
            Gets or sets a value that indicates whether the hostname is used to reach the service when matching 
            the URI.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.MaxBufferPoolSize">
            <summary>
            Gets or sets the maximum amount of memory allocated for the buffer manager that manages the buffers 
            required by endpoints that use this binding.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.MaxBufferSize">
            <summary>
            Gets or sets the maximum amount of memory that is allocated for use by the manager of the message 
            buffers that receive messages from the channel.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.MaxReceivedMessageSize">
            <summary>
            Gets or sets the maximum size for a message that can be processed by the binding.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.Security">
            <summary>
            Gets the configuration element that contains the security settings used with this binding.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.TransferMode">
            <summary>
            Gets or sets a value that indicates whether the service configured with the binding uses streamed or 
            buffered (or both) modes of message transfer.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.BindingElementType">
            <summary>
            Gets the <see cref="T:System.Type">Type</see> of binding that this configuration element represents. 
            (Overrides <see cref="P:System.ServiceModel.Configuration.StandardBindingElement.BindingElementType">
            StandardBindingElement.BindingElementType</see>.)
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingElement.Properties">
            <summary>
            Gets the collection of properties. (Inherited from 
            <see cref="T:System.Configuration.ConfigurationElement">ConfigurationElement</see>.)
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement">
            <summary>
            An XML element that configures the security for a service with endpoints that use the
            <see cref="T:Microsoft.ApplicationServer.Http.HttpBinding">HttpBinding</see>. 
            This class cannot be inherited.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement.Mode">
            <summary>
            Gets or sets an XML element that specifies the security mode for a basic HTTP service.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement.Transport">
            <summary>
            Gets an XML element that indicates the transport-level security settings 
            for a service endpoint configured to receive HTTP requests.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpBindingSecurityElement.Properties">
            <summary>
            Gets the collection of properties. (Inherited from 
            <see cref="T:System.Configuration.ConfigurationElement">ConfigurationElement</see>.)
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement">
            <summary>
            Class that provides a behavior element for the <see cref="T:Microsoft.ApplicationServer.Http.HttpBinding"/> binding.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement.CreateBehavior">
            <summary>
            Creates the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpBehavior"/> instance.
            </summary>
            <returns>A new <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpBehavior"/> instance.</returns>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement.HelpEnabled">
            <summary>
            Gets or sets a value indicating whether the automatic help page will be available.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement.TestClientEnabled">
            <summary>
            Gets or sets a value indicating whether the web-based test client will be available.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement.TrailingSlashMode">
            <summary>
            Gets or sets a value specifying how trailing slashes in a <see cref="T:System.Uri"/> will be handled.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement.OperationHandlerFactory">
            <summary>
            Gets or sets the <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement.OperationHandlerFactory"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement.BehaviorType">
            <summary>
            Gets the type of this behavior element.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpBehaviorElement.Properties">
            <summary>
            Gets the collection of properties of the current behavior element.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointCollectionElement">
            <summary>
            Class that provides a collection of <see cref="T:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement"/> instances.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement">
            <summary>
            Class that provides an endpoint element for the <see cref="T:Microsoft.ApplicationServer.Http.HttpBinding"/> binding.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpEndpoint"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription)">
            <summary>
            When implemented in a derived class, creates a service endpoint from message information
            contained in the specified <see cref="T:System.ServiceModel.Description.ContractDescription"/>.
            </summary>
            <param name="contractDescription">Information about what is contained in messages
            being sent from an endpoint.</param>
            <returns>A service endpoint.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)">
            <summary>
            When called from a derived class, initializes and verifies the format of the
            specified service endpoint element in a service application configuration file.
            </summary>
            <param name="channelEndpointElement">An endpoint element that defines the physical transfer
            of messages back and forth between the client and the service.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)">
            <summary>
            When called from a derived class, initializes and verifies the format of the
            specified service endpoint element in a service application configuration file.
            </summary>
            <param name="serviceEndpointElement">A service endpoint element that enables clients to find and
            communicate with a service.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)">
            <summary>
            When called from a derived class, loads the service description information
            from the configuration file and applies it to the runtime being constructed.
            </summary>
            <param name="endpoint">And endpoint that enables clients to find and communicate with a service.</param>
            <param name="serviceEndpointElement">A service endpoint element of a service application.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)">
            <summary>
            When called from a derived class, loads the service description information
            from the configuration file and applies it to the runtime being constructed.
            </summary>
            <param name="endpoint">And endpoint that enables clients to find and communicate with a service.</param>
            <param name="channelEndpointElement">An endpoint element that defined the physical
            transfer of messages back and forth between the client and the service.</param>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.HelpEnabled">
            <summary>
            Gets or sets a value indicating whether the automatic help page will be available.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.TestClientEnabled">
            <summary>
            Gets or sets a value indicating whether the web-based test client will be available.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.TrailingSlashMode">
            <summary>
            Gets or sets a value specifying how trailing slashes in the <see cref="T:System.Uri"/> will be handled.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.OperationHandlerFactory">
            <summary>
            Gets or sets the <see cref="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.OperationHandlerFactory"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.HostNameComparisonMode">
            <summary>
            Gets or sets a value that indicates whether the hostname is used to reach the service when matching 
            the URI.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.MaxBufferPoolSize">
            <summary>
            Gets or sets the maximum amount of memory allocated for the buffer manager that manages the buffers 
            required by endpoints that use this binding.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.MaxBufferSize">
            <summary>
            Gets or sets the maximum amount of memory that is allocated for use by the manager of the message 
            buffers that receive messages from the channel.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.MaxReceivedMessageSize">
            <summary>
            Gets or sets the maximum size for a message that can be processed by the binding.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.Security">
            <summary>
            Gets the configuration element that contains the security settings used with this binding.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.TransferMode">
            <summary>
            Gets or sets a value that indicates whether the service configured with the binding uses streamed or 
            buffered (or both) modes of message transfer.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.EndpointType">
            <summary>
            Gets the type of the endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Configuration.HttpEndpointElement.Properties">
            <summary>
            Gets the collection of properties for the current endpoint element.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Description.HttpEndpoint">
            <summary>
            Class that provides a <see cref="T:System.ServiceModel.Description.ServiceEndpoint"/> for the <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.HttpBinding"/> binding.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.#ctor(System.ServiceModel.Description.ContractDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpEndpoint"/> class.
            </summary>
            <param name="contract">The <see cref="T:System.ServiceModel.Description.ContractDescription"/> for the service endpoint.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.#ctor(System.ServiceModel.Description.ContractDescription,System.ServiceModel.EndpointAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpEndpoint"/> class.
            </summary>
            <param name="contract">The <see cref="T:System.ServiceModel.Description.ContractDescription"/> for the service endpoint.</param>
            <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress"/> for the service endpoint.</param>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.MessageHandlerFactory">
            <summary>
            Gets or sets the default <see cref="T:Microsoft.ApplicationServer.Http.Channels.HttpMessageHandlerFactory"/> to use for
            the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpEndpoint"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.OperationHandlerFactory">
            <summary>
            Gets or sets the default <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpOperationHandlerFactory"/> to use for
            the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpEndpoint"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.HostNameComparisonMode">
            <summary>
            Gets or sets a value specifying how the host name should be use in <see cref="T:System.Uri"/>
            comparisons when dispatching an incoming message to a service endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.MaxBufferPoolSize">
            <summary>
            Gets or sets the maximum amount of memory that is allocated for use by the manager
            of the message buffers that receive messages from the endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.MaxBufferSize">
            <summary>
            Gets or sets the maximum amount of memory that is allocated for use by the manager of the message 
            buffers that receive messages from the channel.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.MaxReceivedMessageSize">
            <summary>
            Gets or sets the maximum size for a message that can be processed by the endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.TransferMode">
            <summary>
            Gets or sets a value that indicates whether the service configured with the endpoint uses streamed or 
            buffered (or both) modes of message transfer.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.Security">
            <summary>
            Gets the <see cref="T:Microsoft.ApplicationServer.Http.HttpBindingSecurity"/> for this endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.HelpEnabled">
            <summary>
            Gets or sets a value indicating whether an automatic help page will be generated.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.TestClientEnabled">
            <summary>
            Gets or sets a value indicating whether a web-based test client will be generated.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpEndpoint.TrailingSlashMode">
            <summary>
            Gets or sets a value specifying how trailing slashes on <see cref="T:System.Uri"/>s should be treated.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription">
            <summary>
            Represents the description of a service operation when using the
            <see cref="T:Microsoft.ApplicationServer.Http.HttpBinding">HttpBinding</see> and the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpBehavior"/>.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription"/> class.
            </summary>
            <remarks>This constructor creates an empty instance that must be
            populated via its public properties before use.   To create an
            instance from an existing <see cref="T:System.ServiceModel.Description.OperationDescription"/>, use the
            extension method <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationDescriptionExtensionMethods.ToHttpOperationDescription(System.ServiceModel.Description.OperationDescription)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.#ctor(System.String,System.ServiceModel.Description.ContractDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription"/> class.
            </summary>
            <param name="name">The name of the operation.</param>
            <param name="declaringContract">The declaring contract to which the operation will belong.</param>
            <remarks>
            This constructor creates an empty instance that must be
            populated via its public properties before use.   To create an
            instance from an existing <see cref="T:System.ServiceModel.Description.OperationDescription"/>, use the
            extension method <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpOperationDescriptionExtensionMethods.ToHttpOperationDescription(System.ServiceModel.Description.OperationDescription)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.#ctor(System.ServiceModel.Description.OperationDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription"/> class
            using an existing <see cref="T:System.ServiceModel.Description.OperationDescription"/>.
            </summary>
            <remarks>
            An instance created using this constructor will synchronize changes made to the
            instance properties back to the original <see cref="T:System.ServiceModel.Description.OperationDescription"/>.
            </remarks>
            <param name="operationDescription">An existing <see cref="T:System.ServiceModel.Description.OperationDescription"/>
            instance on which to base this new <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription"/>.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.ToOperationDescription">
            <summary>
            Retrieves an <see cref="T:System.ServiceModel.Description.OperationDescription"/> that matches the current instance.
            </summary>
            <remarks>
            This method will throw <see cref="T:System.NotImplementedException"/> if a matching
            <see cref="T:System.ServiceModel.Description.OperationDescription"/> is not available.
            </remarks>
            <returns>The <see cref="T:System.ServiceModel.Description.OperationDescription"/>.   It will not be <c>null</c>.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.CreateMessageDescriptionIfNecessary(System.ServiceModel.Description.OperationDescription,System.Int32)">
            <summary>
            Ensures that a <see cref="T:System.ServiceModel.Description.MessageDescription"/> exists for the given <paramref name="messageIndex"/>
            within the specified <see cref="T:System.ServiceModel.Description.OperationDescription"/>.
            A default one will be created if it does not yet exist.
            </summary>
            <param name="operationDescription">The <see cref="T:System.ServiceModel.Description.OperationDescription"/> to check and modify.</param>
            <param name="messageIndex">The index within the <see cref="T:System.ServiceModel.Description.MessageDescriptionCollection"/> that must exist.</param>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.Name">
            <summary>
            Gets or sets the name of the operation.
            </summary>
            <remarks>
            Attempting to set the name for an instance created from an existing
            <see cref="T:System.ServiceModel.Description.OperationDescription"/> will throw <see cref="T:System.NotSupportedException"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.Behaviors">
            <summary>
            Gets the operation behaviors associated with the operation.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.DeclaringContract">
            <summary>
            Gets or sets the contract to which the operation belongs.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.KnownTypes">
            <summary>
            Gets the known types associated with the operation description.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.Attributes">
            <summary>
            Gets the custom attributes associated with the operation.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.ReturnValue">
            <summary>
             Gets or sets the description of the value returned by the operation.
            </summary>
            <value>
            This value may be <c>null</c>.  If the current instance is synchronized
            with respect to an <see cref="T:System.ServiceModel.Description.OperationDescription"/>, it will be modified
            to reflect the new value.
            </value>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.InputParameters">
            <summary>
            Gets the collection of input parameters used by this operation.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.OutputParameters">
            <summary>
             Gets the collection of output parameters used by this operation.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription.IsSynchronized">
            <summary>
            Gets a value indicating whether the current instance is synchronized with
            respect to an <see cref="T:System.ServiceModel.Description.OperationDescription"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Description.HttpOperationDescriptionExtensionMethods">
            <summary>
            Provides extension methods for <see cref="T:System.ServiceModel.Description.OperationDescription"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpOperationDescriptionExtensionMethods.ToHttpOperationDescription(System.ServiceModel.Description.OperationDescription)">
            <summary>
            Creates an <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription"/> instance based on the given
            <see cref="T:System.ServiceModel.Description.OperationDescription"/> instance.
            </summary>
            <param name="operation">The <see cref="T:System.ServiceModel.Description.OperationDescription"/> instance.</param>
            <returns>A new <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription"/> instance.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpOperationDescriptionExtensionMethods.GetHttpMethod(Microsoft.ApplicationServer.Http.Description.HttpOperationDescription)">
            <summary>
            Gets the <see cref="T:System.Net.Http.HttpMethod"/> for the given <paramref name="operation"/>.
            </summary>
            <param name="operation">The <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription"/> instance.</param>
            <returns>The <see cref="T:System.Net.Http.HttpMethod"/>.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpOperationDescriptionExtensionMethods.GetUriTemplate(Microsoft.ApplicationServer.Http.Description.HttpOperationDescription)">
            <summary>
            Gets the <see cref="T:System.UriTemplate"/> associated with the given <paramref name="operation"/>.
            </summary>
            <param name="operation">The <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription"/> instance.</param>
            <returns>The <see cref="T:System.UriTemplate"/>.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpOperationDescriptionExtensionMethods.GetUriTemplate(Microsoft.ApplicationServer.Http.Description.HttpOperationDescription,Microsoft.ApplicationServer.Http.TrailingSlashMode)">
            <summary>
            Gets the <see cref="T:System.UriTemplate"/> associated with the given <paramref name="operation"/>.
            </summary>
            <param name="operation">The <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription"/> instance.</param>
            <param name="trailingSlashMode">The <see cref="T:Microsoft.ApplicationServer.Http.TrailingSlashMode"/> option to use for the <see cref="T:System.UriTemplate"/>.</param>
            <returns>The <see cref="T:System.UriTemplate"/>.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Description.HttpParameter">
            <summary>
            Represents the description of input parameters, output parameters,
            or return values for an <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription"/>.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpParameter.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> class.
            </summary>
            <param name="name">The name of the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/>.</param>
            <param name="type">The type of the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/>.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpParameter.#ctor(System.ServiceModel.Description.MessagePartDescription)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> class.
            </summary>
            <remarks>
            This form of the constructor creates an instance based on an existing
            <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.MessagePartDescription"/> instance.  To create such an instance, use the extension method
            <see cref="M:Microsoft.ApplicationServer.Http.Description.HttpParameterExtensionMethods.ToHttpParameter(System.ServiceModel.Description.MessagePartDescription)"/>.
            </remarks>
            <param name="messagePartDescription">The existing <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.MessagePartDescription"/>.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpParameter.IsAssignableFromParameter(System.Type)">
            <summary>
            Determines if the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> could function as
            an input <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> that would be able to bind
            to an output <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> with the given <paramref name="type"/>.
            </summary>
            <param name="type">
            The <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.ParameterType"/> of the output <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/>.
            </param>
            <returns>
            <c>true</c> if the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> could function as
            an input <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> that would be able to bind
            to an output <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> with the given <paramref name="type"/>;
            <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpParameter.IsAssignableFromParameter``1">
            <summary>
            Determines if the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> could function as
            an input <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> that would be able to bind
            to an output <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> with the given <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">The type of the output <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/>.</typeparam>
            <returns>
            <c>true</c> if the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> could function as
            an input <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> that would be able to bind
            to an output <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/>;
            <c>false</c> otherwise.
            </returns>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.RequestMessage">
            <summary>
            Gets an <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instance for an <see cref="T:System.Net.Http.HttpRequestMessage"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.RequestUri">
            <summary>
            Gets an <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instance for the request <see cref="T:System.Uri"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.RequestMethod">
            <summary>
            Gets an <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instance for an <see cref="T:System.Net.Http.HttpMethod"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.RequestHeaders">
            <summary>
            Gets an <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instance for the <see cref="T:System.Net.Http.Headers.HttpRequestHeaders"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.RequestContent">
            <summary>
            Gets an <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instance for the request <see cref="T:System.Net.Http.HttpContent"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.ResponseMessage">
            <summary>
            Gets an <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instance for an <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.ResponseStatusCode">
            <summary>
            Gets an <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instance for the response <see cref="T:System.Net.HttpStatusCode"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.ResponseHeaders">
            <summary>
            Gets an <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instance for the <see cref="T:System.Net.Http.Headers.HttpResponseHeaders"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.ResponseContent">
            <summary>
            Gets an <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instance for the response <see cref="T:System.Net.Http.HttpContent"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.Name">
            <summary>
            Gets the name of the current instance.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.ParameterType">
            <summary>
            Gets the type of the current instance.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.IsContentParameter">
            <summary>
            Gets or sets a value indicating whether this instance is content parameter.
            </summary>
            <value>
            <c>true</c> if this instance is content parameter; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection">
            <summary>
            Represents an ordered collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.#ctor(System.Collections.Generic.IEnumerable{Microsoft.ApplicationServer.Http.Description.HttpParameter})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection"/> class.
            </summary>
            <remarks>
            This form of the constructor initializes the instance from the given <paramref name="parameters"/>.
            </remarks>
            <param name="parameters">The collection whose elements are copied to the new list.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.#ctor(System.ServiceModel.Description.OperationDescription,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection"/> class.
            </summary>
            <remarks>
            This form of the constructor initializes the instance from the respective collection in the given
            <see cref="T:System.ServiceModel.Description.OperationDescription"/> and keeps the two instances synchronized.
            </remarks>
            <param name="operationDescription">The <see cref="T:System.ServiceModel.Description.OperationDescription"/>
            instance from which to create the collection.</param>
            <param name="isOutputCollection">If <c>false</c> use the input parameter collection, 
            otherwise use the output parameter collection.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.IndexOf(Microsoft.ApplicationServer.Http.Description.HttpParameter)">
            <summary>
            Determines the index of a specific item in the collection.
            </summary>
            <param name="item">The object to locate in the collection.</param>
            <returns>The index of item if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.Insert(System.Int32,Microsoft.ApplicationServer.Http.Description.HttpParameter)">
            <summary>
            Inserts an item at the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="item">The object to insert at the specified index.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove,</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.Add(Microsoft.ApplicationServer.Http.Description.HttpParameter)">
            <summary>
            Adds an item to the collection.
            </summary>
            <param name="item">The object to add to the collection.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.Contains(Microsoft.ApplicationServer.Http.Description.HttpParameter)">
            <summary>
            Determines whether the collection contains a specific value.
            </summary>
            <param name="item">The object to locate in the collection.</param>
            <returns><c>true</c> if item is found in the collection; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.CopyTo(Microsoft.ApplicationServer.Http.Description.HttpParameter[],System.Int32)">
            <summary>
            Copies the elements of the collection to an <see cref="T:System.Array"/>, starting at a particular array index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from collection. The array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.Remove(Microsoft.ApplicationServer.Http.Description.HttpParameter)">
            <summary>
            Removes the first occurrence of a specific object from the collection.
            </summary>
            <param name="item">The object to remove from the collection.</param>
            <returns><c>true</c> if <paramref name="item"/> was successfully removed from the collection; otherwise, <c>false</c>. 
            This method also returns <c>false</c> if <paramref name="item"/> is not found in the original collection.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.ToArray(System.ServiceModel.Description.MessagePartDescriptionCollection)">
            <summary>
            Creates an array of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> elements that are synchronized with their
            corresponding <see cref="T:System.ServiceModel.Description.MessagePartDescription"/> elements.
            </summary>
            <param name="messagePartDescriptionCollection">The existing collection from which to create the array.</param>
            <returns>The new array.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.GetOrCreateMessagePartDescriptionCollection">
            <summary>
            Retrieves the appropriate <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.MessagePartDescriptionCollection"/> for the current instance.
            If the synchronized <see cref="T:System.ServiceModel.Description.OperationDescription"/> does not have the corresponding collection,
            this method will create a default <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.MessageDescription"/> element so that the collection exists.
            </summary>
            <returns>The <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.MessagePartDescriptionCollection"/>.</returns>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.Count">
            <summary>
            Gets the number of elements contained in the collection.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether this instance is synchronized with a corresponding
            collection in a <see cref="T:System.ServiceModel.Description.OperationDescription"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.MessagePartDescriptionCollection">
            <summary>
            Gets the <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.MessagePartDescriptionCollection"/> from the original
            <see cref="T:System.ServiceModel.Description.OperationDescription"/> instance.
            It returns <c>null</c> if this instance
            is not synchronized or the synchronized <see cref="T:System.ServiceModel.Description.OperationDescription"/>
            is incomplete and does not contain required collection.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Description.HttpParameterCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <returns>The item at the specified index.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Description.HttpParameterExtensionMethods">
            <summary>
            Provides extension methods for <see cref="T:System.ServiceModel.Description.MessagePartDescription"/>
            to translate to <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/>.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Description.HttpParameterExtensionMethods.ToHttpParameter(System.ServiceModel.Description.MessagePartDescription)">
            <summary>
            Creates a new <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instance from the given
            <see cref="T:System.ServiceModel.Description.MessagePartDescription"/>.
            </summary>
            <param name="description">The <see cref="T:System.ServiceModel.Description.MessagePartDescription"/> to use.</param>
            <returns>A new <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instance.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Description.HttpParameterValueConverter">
            <summary>
            Class that can convert from values of one type to values of another type based on 
            the rules of binding <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler">
            <summary>
            Abstract base class to provide an <see cref="T:System.ServiceModel.Dispatcher.IErrorHandler"/> for the
            <see cref="T:Microsoft.ApplicationServer.Http.HttpBinding">HttpBinding</see>
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler.TryProvideResponse(System.Exception,System.Net.Http.HttpResponseMessage@)">
            <summary>
            Enables the creation of a custom response describing the specified <paramref name="error"/>.
            </summary>
            <param name="error">The error for which a response is required.</param>
            <param name="message">The <see cref="T:System.Net.Http.HttpResponseMessage"/> to return.</param>
            <returns>A value indicating whether the message is ready to be returned.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler.OnTryProvideResponse(System.Exception,System.Net.Http.HttpResponseMessage@)">
            <summary>
            Called from <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpErrorHandler.TryProvideResponse(System.Exception,System.Net.Http.HttpResponseMessage@)"/>.
            Derived classes must implement this.
            </summary>
            <param name="exception">The error for which a response is required.</param>
            <param name="message">The <see cref="T:System.Net.Http.HttpResponseMessage"/> to return.</param>
            <returns>A value indicating whether the message is ready to be returned.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter">
            <summary>
            Abstract base class that defines methods to deserialize request messages
            and serialize response messages for the
            <see cref="T:Microsoft.ApplicationServer.Http.HttpBinding">HttpBinding</see>.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter.System#ServiceModel#Dispatcher#IDispatchMessageFormatter#DeserializeRequest(System.ServiceModel.Channels.Message,System.Object[])">
            <summary>
            Deserializes a message into an array of parameters.
            </summary>
            <param name="message">The incoming message.</param>
            <param name="parameters">The objects that are passed to the operation as parameters.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter.System#ServiceModel#Dispatcher#IDispatchMessageFormatter#SerializeReply(System.ServiceModel.Channels.MessageVersion,System.Object[],System.Object)">
            <summary>
            Serializes a reply message from a specified message version, array of parameters, and a return value.
            </summary>
            <param name="messageVersion">The SOAP message version.</param>
            <param name="parameters">The out parameters.</param>
            <param name="result">The return value.</param>
            <returns>The serialized reply message.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter.DeserializeRequest(System.Net.Http.HttpRequestMessage,System.Object[])">
            <summary>
            Deserializes a message into an array of parameters.
            </summary>
            <param name="request">The incoming message.</param>
            <param name="parameters">The objects that are passed to the operation as parameters.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter.SerializeReply(System.Object[],System.Object)">
            <summary>
            Serializes a reply message from an array of parameters and a return value into the
            given <paramref name="result"/>.
            </summary>
            <param name="parameters">The out parameters.</param>
            <param name="result">The return value.</param>
            <returns>The <see cref="T:System.Net.Http.HttpResponseMessage"/> to return.  It cannot be <c>null</c>.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter.OnDeserializeRequest(System.Net.Http.HttpRequestMessage,System.Object[])">
            <summary>
            Deserializes a message into an array of parameters.
            </summary>
            <param name="message">The incoming message.</param>
            <param name="parameters">The objects that are passed to the operation as parameters.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter.OnSerializeReply(System.Object[],System.Object)">
            <summary>
            Serializes a reply message from an array of parameters and a return value into the
            given <paramref name="result"/>.
            </summary>
            <param name="parameters">The out parameters.</param>
            <param name="result">The return value.</param>
            <returns>The <see cref="T:System.Net.Http.HttpResponseMessage"/> to return.  It cannot be <c>null</c>.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageInspector">
            <summary>
            Defines the methods that enable custom inspection or modification of inbound and 
            outbound application messages in service applications based on
            <see cref="T:Microsoft.ApplicationServer.Http.HttpBinding">HttpBinding</see>.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageInspector.System#ServiceModel#Dispatcher#IDispatchMessageInspector#AfterReceiveRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel,System.ServiceModel.InstanceContext)">
            <summary>
            Called after an inbound message has been received but before the message
            is dispatched to the intended operation.
            </summary>
            <param name="request">The request message.</param>
            <param name="channel">The incoming channel.</param>
            <param name="instanceContext">The current service instance.</param>
            <returns>The object used to correlate state. This object is passed back 
            in the <see cref="M:System.ServiceModel.Dispatcher.IDispatchMessageInspector.BeforeSendReply(System.ServiceModel.Channels.Message@,System.Object)"/> method.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageInspector.System#ServiceModel#Dispatcher#IDispatchMessageInspector#BeforeSendReply(System.ServiceModel.Channels.Message@,System.Object)">
            <summary>
            Called after the operation has returned but before the reply message is sent.
            </summary>
            <param name="reply">The reply message. This value is null if the operation is one way.</param>
            <param name="correlationState">The correlation object returned from the <see cref="M:System.ServiceModel.Dispatcher.IDispatchMessageInspector.AfterReceiveRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel,System.ServiceModel.InstanceContext)"/> method.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageInspector.AfterReceiveRequest(System.Net.Http.HttpRequestMessage)">
            <summary>
            Called after an inbound message has been received but 
            before the message is dispatched to the intended operation.
            </summary>
            <param name="request">The request message</param>
            <returns>The object used to correlate state. This object is 
            passed back in the <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageInspector.BeforeSendReply(System.Net.Http.HttpResponseMessage,System.Object)"/>method.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageInspector.BeforeSendReply(System.Net.Http.HttpResponseMessage,System.Object)">
            <summary>
            Called after the operation has returned but before the response message is sent.
            </summary>
            <param name="response">The response message that will be sent.</param>
            <param name="correlationState">The correlction object returned from the
            <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageInspector.AfterReceiveRequest(System.Net.Http.HttpRequestMessage)"/> method.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageInspector.OnAfterReceiveRequest(System.Net.Http.HttpRequestMessage)">
            <summary>
            Called after an inbound message has been received but 
            before the message is dispatched to the intended operation.
            </summary>
            <param name="request">The request message</param>
            <returns>The object used to correlate state. This object is 
            passed back in the <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageInspector.BeforeSendReply(System.Net.Http.HttpResponseMessage,System.Object)"/>method.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageInspector.OnBeforeSendReply(System.Net.Http.HttpResponseMessage,System.Object)">
            <summary>
            Called after the operation has returned but before the response message is sent.
            </summary>
            <param name="response">The response message that will be sent.</param>
            <param name="correlationState">The correlction object returned from the
            <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageInspector.AfterReceiveRequest(System.Net.Http.HttpRequestMessage)"/> method.</param>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler">
            <summary>
            An abstract base class used to create custom <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances
            that execute based on declared input and output <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter">HttpParameters</see>. 
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.Handle(System.Object[])">
            <summary>
            The <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> handles the given <paramref name="input"/> values and returns 
            a the output <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances.
            </summary>
            <param name="input">
            The input values that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle. 
            The values should agree in order and type with the input <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter">
            HttpParameters</see> given by the <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.InputParameters"/> property.
            </param>
            <returns>
            An array that provides the output values.
            </returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance and includes
            the type name of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> and a list of the
            input and output <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> names.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OnGetInputParameters">
            <summary>
            Implemented in a derived class to return the input <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter">HttpParameters</see>
            that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> expects to be provided whenever the <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.Handle(System.Object[])"/> method 
            is called.  The <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter">HttpParameters</see> must be returned in the same order
            the the <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.Handle(System.Object[])"/> method will expect them in the input object array.
            </summary>
            <remarks>
            <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OnGetInputParameters"/> is only called once and the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter">HttpParameters</see>
            are cached in a read-only collection.
            </remarks>
            <returns>
            The input <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter">HttpParameters</see> that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>
            expects.
            </returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OnGetOutputParameters">
            <summary>
            Implemented in a derived class to return the ouput <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter">HttpParameters</see>
            that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> will provided whenever the <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.Handle(System.Object[])"/> method 
            is called.  The <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter">HttpParameters</see> must be returned in the same order
            the the <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.Handle(System.Object[])"/> method will provide then in the output object array.
            </summary>
            <remarks>
            <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OnGetOutputParameters"/> is only called once and the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter">HttpParameters</see>
            are cached in a read-only collection.
            </remarks>
            <returns>
            The output <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter">HttpParameters</see> that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>
            will provide.
            </returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OnHandle(System.Object[])">
            <summary>
            Implemented in a derived class to provide the handling logic of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <param name="input">
            The input values that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should be handled. 
            The values should agree in order and type with the input <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter">
            HttpParameters</see> given by the <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.InputParameters"/> property.
            </param>
            <returns>
            An array that provides the output values.
            </returns>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.InputParameters">
            <summary>
            Gets the collection of input <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter">HttpParameters</see> 
            that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> expects to handle.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OutputParameters">
            <summary>
            Gets the collection of output <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter">HttpParameters</see> 
            that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> returns.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`2">
            <summary>
            An abstract base class used to create custom <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances 
            that handle a single declared input and a single declared output. 
            </summary>
            <typeparam name="T">The type of the input value.</typeparam>
            <typeparam name="TOutput">The type of the output value.</typeparam>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`2.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> class.
            </summary>
            <param name="outputParameterName">The name to use for the output <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/>.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`2.OnHandle(`0)">
            <summary>
            Implemented in a derived class to provide the handling logic of the custom <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <param name="input">
            The input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle. 
            </param>
            <returns>The output value returned.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`2.OnHandle(System.Object[])">
            <summary>
            Called to handle the given <paramref name="input"/> values.
            </summary>
            <param name="input">The input values which correspond in length and
            type to the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> collection returned
            from <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OnGetInputParameters"/>.</param>
            <returns>The output value.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`2.OnGetInputParameters">
            <summary>
            Retrieves the collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances describing
            the inputs of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <returns>The collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`2.OnGetOutputParameters">
            <summary>
            Retrieves the collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances describing
            the output of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <returns>The collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`3">
            <summary>
            An abstract base class used to create custom <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances 
            that handle a single declared input and a single declared output. 
            </summary>
            <typeparam name="T1">The type of the first input value.</typeparam>
            <typeparam name="T2">The type of the second input value.</typeparam>
            <typeparam name="TOutput">The type of the output value.</typeparam>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`3.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> class.
            </summary>
            <param name="outputParameterName">The name to use for the output <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/>.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`3.OnHandle(`0,`1)">
            <summary>
            Implemented in a derived class to provide the handling logic of the custom <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <param name="input1">The first input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input2">The second input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <returns>The output value returned.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`3.OnHandle(System.Object[])">
            <summary>
            Called to handle the given <paramref name="input"/> values.
            </summary>
            <param name="input">The input values which correspond in length and
            type to the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> collection returned
            from <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OnGetInputParameters"/>.</param>
            <returns>The output value.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`3.OnGetInputParameters">
            <summary>
            Retrieves the collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances describing
            the inputs of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <returns>The collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`3.OnGetOutputParameters">
            <summary>
            Retrieves the collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances describing
            the output of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <returns>The collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`4">
            <summary>
            An abstract base class used to create custom <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances 
            that handle a single declared input and a single declared output. 
            </summary>
            <typeparam name="T1">The type of the first input value.</typeparam>
            <typeparam name="T2">The type of the second input value.</typeparam>
            <typeparam name="T3">The type of the third input value.</typeparam>
            <typeparam name="TOutput">The type of the output value.</typeparam>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`4.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> class.
            </summary>
            <param name="outputParameterName">The name to use for the output <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/>.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`4.OnHandle(`0,`1,`2)">
            <summary>
            Implemented in a derived class to provide the handling logic of the custom <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <param name="input1">The first input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input2">The second input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input3">The third input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <returns>The output value returned.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`4.OnHandle(System.Object[])">
            <summary>
            Called to handle the given <paramref name="input"/> values.
            </summary>
            <param name="input">The input values which correspond in length and
            type to the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> collection returned
            from <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OnGetInputParameters"/>.</param>
            <returns>The output value.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`4.OnGetInputParameters">
            <summary>
            Retrieves the collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances describing
            the inputs of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <returns>The collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`4.OnGetOutputParameters">
            <summary>
            Retrieves the collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances describing
            the output of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <returns>The collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`5">
            <summary>
            An abstract base class used to create custom <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances 
            that handle a single declared input and a single declared output. 
            </summary>
            <typeparam name="T1">The type of the first input value.</typeparam>
            <typeparam name="T2">The type of the second input value.</typeparam>
            <typeparam name="T3">The type of the third input value.</typeparam>
            <typeparam name="T4">The type of the fourth input value.</typeparam>
            <typeparam name="TOutput">The type of the output value.</typeparam>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`5.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> class.
            </summary>
            <param name="outputParameterName">The name to use for the output <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/>.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`5.OnHandle(`0,`1,`2,`3)">
            <summary>
            Implemented in a derived class to provide the handling logic of the custom <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <param name="input1">The first input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input2">The second input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input3">The third input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input4">The fourth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <returns>The output value returned.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`5.OnHandle(System.Object[])">
            <summary>
            Called to handle the given <paramref name="input"/> values.
            </summary>
            <param name="input">The input values which correspond in length and
            type to the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> collection returned
            from <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OnGetInputParameters"/>.</param>
            <returns>The output value.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`5.OnGetInputParameters">
            <summary>
            Retrieves the collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances describing
            the inputs of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <returns>The collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`5.OnGetOutputParameters">
            <summary>
            Retrieves the collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances describing
            the output of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <returns>The collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`6">
            <summary>
            An abstract base class used to create custom <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances 
            that handle a single declared input and a single declared output. 
            </summary>
            <typeparam name="T1">The type of the first input value.</typeparam>
            <typeparam name="T2">The type of the second input value.</typeparam>
            <typeparam name="T3">The type of the third input value.</typeparam>
            <typeparam name="T4">The type of the fourth input value.</typeparam>
            <typeparam name="T5">The type of the fifth input value.</typeparam>
            <typeparam name="TOutput">The type of the output value.</typeparam>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`6.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> class.
            </summary>
            <param name="outputParameterName">The name to use for the output <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/>.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`6.OnHandle(`0,`1,`2,`3,`4)">
            <summary>
            Implemented in a derived class to provide the handling logic of the custom <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <param name="input1">The first input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input2">The second input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input3">The third input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input4">The fourth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input5">The fifth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <returns>The output value returned.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`6.OnHandle(System.Object[])">
            <summary>
            Called to handle the given <paramref name="input"/> values.
            </summary>
            <param name="input">The input values which correspond in length and
            type to the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> collection returned
            from <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OnGetInputParameters"/>.</param>
            <returns>The output value.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`6.OnGetInputParameters">
            <summary>
            Retrieves the collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances describing
            the inputs of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <returns>The collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`6.OnGetOutputParameters">
            <summary>
            Retrieves the collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances describing
            the output of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <returns>The collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`7">
            <summary>
            An abstract base class used to create custom <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances 
            that handle a single declared input and a single declared output. 
            </summary>
            <typeparam name="T1">The type of the first input value.</typeparam>
            <typeparam name="T2">The type of the second input value.</typeparam>
            <typeparam name="T3">The type of the third input value.</typeparam>
            <typeparam name="T4">The type of the fourth input value.</typeparam>
            <typeparam name="T5">The type of the fifth input value.</typeparam>
            <typeparam name="T6">The type of the sixth input value.</typeparam>
            <typeparam name="TOutput">The type of the output value.</typeparam>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`7.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> class.
            </summary>
            <param name="outputParameterName">The name to use for the output <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/>.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`7.OnHandle(`0,`1,`2,`3,`4,`5)">
            <summary>
            Implemented in a derived class to provide the handling logic of the custom <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <param name="input1">The first input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input2">The second input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input3">The third input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input4">The fourth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input5">The fifth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input6">The sixth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <returns>The output value returned.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`7.OnHandle(System.Object[])">
            <summary>
            Called to handle the given <paramref name="input"/> values.
            </summary>
            <param name="input">The input values which correspond in length and
            type to the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> collection returned
            from <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OnGetInputParameters"/>.</param>
            <returns>The output value.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`7.OnGetInputParameters">
            <summary>
            Retrieves the collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances describing
            the inputs of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <returns>The collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`7.OnGetOutputParameters">
            <summary>
            Retrieves the collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances describing
            the output of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <returns>The collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`8">
            <summary>
            An abstract base class used to create custom <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances 
            that handle a single declared input and a single declared output. 
            </summary>
            <typeparam name="T1">The type of the first input value.</typeparam>
            <typeparam name="T2">The type of the second input value.</typeparam>
            <typeparam name="T3">The type of the third input value.</typeparam>
            <typeparam name="T4">The type of the fourth input value.</typeparam>
            <typeparam name="T5">The type of the fifth input value.</typeparam>
            <typeparam name="T6">The type of the sixth input value.</typeparam>
            <typeparam name="T7">The type of the seventh input value.</typeparam>
            <typeparam name="TOutput">The type of the output value.</typeparam>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`8.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> class.
            </summary>
            <param name="outputParameterName">The name to use for the output <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/>.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`8.OnHandle(`0,`1,`2,`3,`4,`5,`6)">
            <summary>
            Implemented in a derived class to provide the handling logic of the custom <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <param name="input1">The first input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input2">The second input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input3">The third input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input4">The fourth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input5">The fifth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input6">The sixth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input7">The seventh input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <returns>The output value returned.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`8.OnHandle(System.Object[])">
            <summary>
            Called to handle the given <paramref name="input"/> values.
            </summary>
            <param name="input">The input values which correspond in length and
            type to the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> collection returned
            from <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OnGetInputParameters"/>.</param>
            <returns>The output value.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`8.OnGetInputParameters">
            <summary>
            Retrieves the collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances describing
            the inputs of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <returns>The collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`8.OnGetOutputParameters">
            <summary>
            Retrieves the collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances describing
            the output of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <returns>The collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`9">
            <summary>
            An abstract base class used to create custom <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances 
            that handle a single declared input and a single declared output. 
            </summary>
            <typeparam name="T1">The type of the first input value.</typeparam>
            <typeparam name="T2">The type of the second input value.</typeparam>
            <typeparam name="T3">The type of the third input value.</typeparam>
            <typeparam name="T4">The type of the fourth input value.</typeparam>
            <typeparam name="T5">The type of the fifth input value.</typeparam>
            <typeparam name="T6">The type of the sixth input value.</typeparam>
            <typeparam name="T7">The type of the seventh input value.</typeparam>
            <typeparam name="T8">The type of the eighth input value.</typeparam>
            <typeparam name="TOutput">The type of the output value.</typeparam>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`9.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> class.
            </summary>
            <param name="outputParameterName">The name to use for the output <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/>.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`9.OnHandle(`0,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Implemented in a derived class to provide the handling logic of the custom <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <param name="input1">The first input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input2">The second input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input3">The third input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input4">The fourth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input5">The fifth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input6">The sixth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input7">The seventh input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input8">The eighth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <returns>The output value returned.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`9.OnHandle(System.Object[])">
            <summary>
            Called to handle the given <paramref name="input"/> values.
            </summary>
            <param name="input">The input values which correspond in length and
            type to the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> collection returned
            from <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OnGetInputParameters"/>.</param>
            <returns>The output value.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`9.OnGetInputParameters">
            <summary>
            Retrieves the collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances describing
            the inputs of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <returns>The collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`9.OnGetOutputParameters">
            <summary>
            Retrieves the collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances describing
            the output of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <returns>The collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`10">
            <summary>
            An abstract base class used to create custom <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances 
            that handle a single declared input and a single declared output. 
            </summary>
            <typeparam name="T1">The type of the first input value.</typeparam>
            <typeparam name="T2">The type of the second input value.</typeparam>
            <typeparam name="T3">The type of the third input value.</typeparam>
            <typeparam name="T4">The type of the fourth input value.</typeparam>
            <typeparam name="T5">The type of the fifth input value.</typeparam>
            <typeparam name="T6">The type of the sixth input value.</typeparam>
            <typeparam name="T7">The type of the seventh input value.</typeparam>
            <typeparam name="T8">The type of the eighth input value.</typeparam>
            <typeparam name="T9">The type of the ninth input value.</typeparam>
            <typeparam name="TOutput">The type of the output value.</typeparam>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`10.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> class.
            </summary>
            <param name="outputParameterName">The name to use for the output <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/>.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`10.OnHandle(`0,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Implemented in a derived class to provide the handling logic of the custom <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <param name="input1">The first input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input2">The second input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input3">The third input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input4">The fourth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input5">The fifth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input6">The sixth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input7">The seventh input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input8">The eighth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input9">The ninth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <returns>The output value returned.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`10.OnHandle(System.Object[])">
            <summary>
            Called to handle the given <paramref name="input"/> values.
            </summary>
            <param name="input">The input values which correspond in length and
            type to the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> collection returned
            from <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OnGetInputParameters"/>.</param>
            <returns>The output value.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`10.OnGetInputParameters">
            <summary>
            Retrieves the collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances describing
            the inputs of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <returns>The collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`10.OnGetOutputParameters">
            <summary>
            Retrieves the collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances describing
            the output of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <returns>The collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`11">
            <summary>
            An abstract base class used to create custom <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances 
            that handle a single declared input and a single declared output. 
            </summary>
            <typeparam name="T1">The type of the first input value.</typeparam>
            <typeparam name="T2">The type of the second input value.</typeparam>
            <typeparam name="T3">The type of the third input value.</typeparam>
            <typeparam name="T4">The type of the fourth input value.</typeparam>
            <typeparam name="T5">The type of the fifth input value.</typeparam>
            <typeparam name="T6">The type of the sixth input value.</typeparam>
            <typeparam name="T7">The type of the seventh input value.</typeparam>
            <typeparam name="T8">The type of the eighth input value.</typeparam>
            <typeparam name="T9">The type of the ninth input value.</typeparam>
            <typeparam name="T10">The type of the tenth input value.</typeparam>
            <typeparam name="TOutput">The type of the output value.</typeparam>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`11.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> class.
            </summary>
            <param name="outputParameterName">The name to use for the output <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/>.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`11.OnHandle(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Implemented in a derived class to provide the handling logic of the custom <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <param name="input1">The first input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input2">The second input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input3">The third input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input4">The fourth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input5">The fifth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input6">The sixth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input7">The seventh input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input8">The eighth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input9">The ninth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input10">The tenth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <returns>The output value returned.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`11.OnHandle(System.Object[])">
            <summary>
            Called to handle the given <paramref name="input"/> values.
            </summary>
            <param name="input">The input values which correspond in length and
            type to the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> collection returned
            from <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OnGetInputParameters"/>.</param>
            <returns>The output value.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`11.OnGetInputParameters">
            <summary>
            Retrieves the collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances describing
            the inputs of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <returns>The collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`11.OnGetOutputParameters">
            <summary>
            Retrieves the collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances describing
            the output of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <returns>The collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`12">
            <summary>
            An abstract base class used to create custom <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances 
            that handle a single declared input and a single declared output. 
            </summary>
            <typeparam name="T1">The type of the first input value.</typeparam>
            <typeparam name="T2">The type of the second input value.</typeparam>
            <typeparam name="T3">The type of the third input value.</typeparam>
            <typeparam name="T4">The type of the fourth input value.</typeparam>
            <typeparam name="T5">The type of the fifth input value.</typeparam>
            <typeparam name="T6">The type of the sixth input value.</typeparam>
            <typeparam name="T7">The type of the seventh input value.</typeparam>
            <typeparam name="T8">The type of the eighth input value.</typeparam>
            <typeparam name="T9">The type of the ninth input value.</typeparam>
            <typeparam name="T10">The type of the tenth input value.</typeparam>
            <typeparam name="T11">The type of the eleventh input value.</typeparam>
            <typeparam name="TOutput">The type of the output value.</typeparam>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`12.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> class.
            </summary>
            <param name="outputParameterName">The name to use for the output <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/>.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`12.OnHandle(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Implemented in a derived class to provide the handling logic of the custom <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <param name="input1">The first input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input2">The second input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input3">The third input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input4">The fourth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input5">The fifth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input6">The sixth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input7">The seventh input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input8">The eighth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input9">The ninth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input10">The tenth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input11">The eleventh input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <returns>The output value returned.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`12.OnHandle(System.Object[])">
            <summary>
            Called to handle the given <paramref name="input"/> values.
            </summary>
            <param name="input">The input values which correspond in length and
            type to the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> collection returned
            from <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OnGetInputParameters"/>.</param>
            <returns>The output value.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`12.OnGetInputParameters">
            <summary>
            Retrieves the collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances describing
            the inputs of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <returns>The collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`12.OnGetOutputParameters">
            <summary>
            Retrieves the collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances describing
            the output of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <returns>The collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`13">
            <summary>
            An abstract base class used to create custom <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances 
            that handle a single declared input and a single declared output. 
            </summary>
            <typeparam name="T1">The type of the first input value.</typeparam>
            <typeparam name="T2">The type of the second input value.</typeparam>
            <typeparam name="T3">The type of the third input value.</typeparam>
            <typeparam name="T4">The type of the fourth input value.</typeparam>
            <typeparam name="T5">The type of the fifth input value.</typeparam>
            <typeparam name="T6">The type of the sixth input value.</typeparam>
            <typeparam name="T7">The type of the seventh input value.</typeparam>
            <typeparam name="T8">The type of the eighth input value.</typeparam>
            <typeparam name="T9">The type of the ninth input value.</typeparam>
            <typeparam name="T10">The type of the tenth input value.</typeparam>
            <typeparam name="T11">The type of the eleventh input value.</typeparam>
            <typeparam name="T12">The type of the twelfth input value.</typeparam>
            <typeparam name="TOutput">The type of the output value.</typeparam>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`13.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> class.
            </summary>
            <param name="outputParameterName">The name to use for the output <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/>.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`13.OnHandle(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Implemented in a derived class to provide the handling logic of the custom <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <param name="input1">The first input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input2">The second input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input3">The third input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input4">The fourth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input5">The fifth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input6">The sixth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input7">The seventh input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input8">The eighth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input9">The ninth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input10">The tenth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input11">The eleventh input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input12">The twelfth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <returns>The output value returned.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`13.OnHandle(System.Object[])">
            <summary>
            Called to handle the given <paramref name="input"/> values.
            </summary>
            <param name="input">The input values which correspond in length and
            type to the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> collection returned
            from <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OnGetInputParameters"/>.</param>
            <returns>The output value.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`13.OnGetInputParameters">
            <summary>
            Retrieves the collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances describing
            the inputs of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <returns>The collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`13.OnGetOutputParameters">
            <summary>
            Retrieves the collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances describing
            the output of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <returns>The collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`14">
            <summary>
            An abstract base class used to create custom <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances 
            that handle a single declared input and a single declared output. 
            </summary>
            <typeparam name="T1">The type of the first input value.</typeparam>
            <typeparam name="T2">The type of the second input value.</typeparam>
            <typeparam name="T3">The type of the third input value.</typeparam>
            <typeparam name="T4">The type of the fourth input value.</typeparam>
            <typeparam name="T5">The type of the fifth input value.</typeparam>
            <typeparam name="T6">The type of the sixth input value.</typeparam>
            <typeparam name="T7">The type of the seventh input value.</typeparam>
            <typeparam name="T8">The type of the eighth input value.</typeparam>
            <typeparam name="T9">The type of the ninth input value.</typeparam>
            <typeparam name="T10">The type of the tenth input value.</typeparam>
            <typeparam name="T11">The type of the eleventh input value.</typeparam>
            <typeparam name="T12">The type of the twelfth input value.</typeparam>
            <typeparam name="T13">The type of the thirteenth input value.</typeparam>
            <typeparam name="TOutput">The type of the output value.</typeparam>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`14.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> class.
            </summary>
            <param name="outputParameterName">The name to use for the output <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/>.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`14.OnHandle(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Implemented in a derived class to provide the handling logic of the custom <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <param name="input1">The first input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input2">The second input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input3">The third input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input4">The fourth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input5">The fifth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input6">The sixth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input7">The seventh input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input8">The eighth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input9">The ninth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input10">The tenth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input11">The eleventh input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input12">The twelfth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input13">The thirteenth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <returns>The output value returned.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`14.OnHandle(System.Object[])">
            <summary>
            Called to handle the given <paramref name="input"/> values.
            </summary>
            <param name="input">The input values which correspond in length and
            type to the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> collection returned
            from <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OnGetInputParameters"/>.</param>
            <returns>The output value.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`14.OnGetInputParameters">
            <summary>
            Retrieves the collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances describing
            the inputs of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <returns>The collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`14.OnGetOutputParameters">
            <summary>
            Retrieves the collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances describing
            the output of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <returns>The collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`15">
            <summary>
            An abstract base class used to create custom <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances 
            that handle a single declared input and a single declared output. 
            </summary>
            <typeparam name="T1">The type of the first input value.</typeparam>
            <typeparam name="T2">The type of the second input value.</typeparam>
            <typeparam name="T3">The type of the third input value.</typeparam>
            <typeparam name="T4">The type of the fourth input value.</typeparam>
            <typeparam name="T5">The type of the fifth input value.</typeparam>
            <typeparam name="T6">The type of the sixth input value.</typeparam>
            <typeparam name="T7">The type of the seventh input value.</typeparam>
            <typeparam name="T8">The type of the eighth input value.</typeparam>
            <typeparam name="T9">The type of the ninth input value.</typeparam>
            <typeparam name="T10">The type of the tenth input value.</typeparam>
            <typeparam name="T11">The type of the eleventh input value.</typeparam>
            <typeparam name="T12">The type of the twelfth input value.</typeparam>
            <typeparam name="T13">The type of the thirteenth input value.</typeparam>
            <typeparam name="T14">The type of the fourteenth input value.</typeparam>
            <typeparam name="TOutput">The type of the output value.</typeparam>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`15.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> class.
            </summary>
            <param name="outputParameterName">The name to use for the output <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/>.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`15.OnHandle(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Implemented in a derived class to provide the handling logic of the custom <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <param name="input1">The first input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input2">The second input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input3">The third input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input4">The fourth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input5">The fifth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input6">The sixth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input7">The seventh input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input8">The eighth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input9">The ninth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input10">The tenth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input11">The eleventh input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input12">The twelfth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input13">The thirteenth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input14">The fourteenth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <returns>The output value returned.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`15.OnHandle(System.Object[])">
            <summary>
            Called to handle the given <paramref name="input"/> values.
            </summary>
            <param name="input">The input values which correspond in length and
            type to the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> collection returned
            from <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OnGetInputParameters"/>.</param>
            <returns>The output value.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`15.OnGetInputParameters">
            <summary>
            Retrieves the collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances describing
            the inputs of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <returns>The collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`15.OnGetOutputParameters">
            <summary>
            Retrieves the collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances describing
            the output of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <returns>The collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`16">
            <summary>
            An abstract base class used to create custom <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances 
            that handle a single declared input and a single declared output. 
            </summary>
            <typeparam name="T1">The type of the first input value.</typeparam>
            <typeparam name="T2">The type of the second input value.</typeparam>
            <typeparam name="T3">The type of the third input value.</typeparam>
            <typeparam name="T4">The type of the fourth input value.</typeparam>
            <typeparam name="T5">The type of the fifth input value.</typeparam>
            <typeparam name="T6">The type of the sixth input value.</typeparam>
            <typeparam name="T7">The type of the seventh input value.</typeparam>
            <typeparam name="T8">The type of the eighth input value.</typeparam>
            <typeparam name="T9">The type of the ninth input value.</typeparam>
            <typeparam name="T10">The type of the tenth input value.</typeparam>
            <typeparam name="T11">The type of the eleventh input value.</typeparam>
            <typeparam name="T12">The type of the twelfth input value.</typeparam>
            <typeparam name="T13">The type of the thirteenth input value.</typeparam>
            <typeparam name="T14">The type of the fourteenth input value.</typeparam>
            <typeparam name="T15">The type of the fifteenth input value.</typeparam>
            <typeparam name="TOutput">The type of the output value.</typeparam>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`16.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> class.
            </summary>
            <param name="outputParameterName">The name to use for the output <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/>.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`16.OnHandle(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Implemented in a derived class to provide the handling logic of the custom <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <param name="input1">The first input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input2">The second input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input3">The third input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input4">The fourth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input5">The fifth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input6">The sixth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input7">The seventh input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input8">The eighth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input9">The ninth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input10">The tenth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input11">The eleventh input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input12">The twelfth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input13">The thirteenth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input14">The fourteenth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input15">The fifteenth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <returns>The output value returned.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`16.OnHandle(System.Object[])">
            <summary>
            Called to handle the given <paramref name="input"/> values.
            </summary>
            <param name="input">The input values which correspond in length and
            type to the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> collection returned
            from <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OnGetInputParameters"/>.</param>
            <returns>The output value.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`16.OnGetInputParameters">
            <summary>
            Retrieves the collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances describing
            the inputs of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <returns>The collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`16.OnGetOutputParameters">
            <summary>
            Retrieves the collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances describing
            the output of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <returns>The collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`17">
            <summary>
            An abstract base class used to create custom <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances 
            that handle a single declared input and a single declared output. 
            </summary>
            <typeparam name="T1">The type of the first input value.</typeparam>
            <typeparam name="T2">The type of the second input value.</typeparam>
            <typeparam name="T3">The type of the third input value.</typeparam>
            <typeparam name="T4">The type of the fourth input value.</typeparam>
            <typeparam name="T5">The type of the fifth input value.</typeparam>
            <typeparam name="T6">The type of the sixth input value.</typeparam>
            <typeparam name="T7">The type of the seventh input value.</typeparam>
            <typeparam name="T8">The type of the eighth input value.</typeparam>
            <typeparam name="T9">The type of the ninth input value.</typeparam>
            <typeparam name="T10">The type of the tenth input value.</typeparam>
            <typeparam name="T11">The type of the eleventh input value.</typeparam>
            <typeparam name="T12">The type of the twelfth input value.</typeparam>
            <typeparam name="T13">The type of the thirteenth input value.</typeparam>
            <typeparam name="T14">The type of the fourteenth input value.</typeparam>
            <typeparam name="T15">The type of the fifteenth input value.</typeparam>
            <typeparam name="T16">The type of the sixteenth input value.</typeparam>
            <typeparam name="TOutput">The type of the output value.</typeparam>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`17.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> class.
            </summary>
            <param name="outputParameterName">The name to use for the output <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/>.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`17.OnHandle(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
            Implemented in a derived class to provide the handling logic of the custom <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <param name="input1">The first input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input2">The second input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input3">The third input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input4">The fourth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input5">The fifth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input6">The sixth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input7">The seventh input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input8">The eighth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input9">The ninth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input10">The tenth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input11">The eleventh input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input12">The twelfth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input13">The thirteenth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input14">The fourteenth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input15">The fifteenth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <param name="input16">The sixteenth input value that the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> should handle.</param>
            <returns>The output value returned.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`17.OnHandle(System.Object[])">
            <summary>
            Called to handle the given <paramref name="input"/> values.
            </summary>
            <param name="input">The input values which correspond in length and
            type to the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> collection returned
            from <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OnGetInputParameters"/>.</param>
            <returns>The output value.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`17.OnGetInputParameters">
            <summary>
            Retrieves the collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances describing
            the inputs of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <returns>The collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler`17.OnGetOutputParameters">
            <summary>
            Retrieves the collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances describing
            the output of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>.
            </summary>
            <returns>The collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector">
            <summary>
            Defines the contract that associates incoming messages with a local operation 
            to customize service execution behavior using
            <see cref="T:Microsoft.ApplicationServer.Http.HttpBinding">HttpBinding</see>.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector.SelectedOperationPropertyName">
            <summary>
            The name of the message property that will store the name of the selected operation.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector.SelectOperation(System.Net.Http.HttpRequestMessage)">
            <summary>
            Associates a local operation with the incoming method.
            </summary>
            <param name="message">The incoming <see cref="T:System.Net.Http.HttpRequestMessage"/>.</param>
            <returns>The name of the operation to be associated with the message.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector.System#ServiceModel#Dispatcher#IDispatchOperationSelector#SelectOperation(System.ServiceModel.Channels.Message@)">
            <summary>
            Associates a local operation with the incoming method.
            </summary>
            <param name="message">The incoming <see cref="T:System.ServiceModel.Channels.Message"/> to be associated with an operation.</param>
            <returns>The name of the operation to be associated with the message.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector.OnSelectOperation(System.Net.Http.HttpRequestMessage)">
            <summary>
            Abstract method called by <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector.SelectOperation(System.Net.Http.HttpRequestMessage)"/>
            to determine the associated operation.   Derived classes must implement this.
            </summary>
            <param name="request">The incoming <see cref="T:System.Net.Http.HttpRequestMessage"/>.</param>
            <returns>The name of the operation to be associated with the message.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseErrorHandler.OnTryProvideResponse(System.Exception,System.Net.Http.HttpResponseMessage@)">
            <summary>
            Enables the creation of a custom <see cref="T:System.Net.Http.HttpResponseMessage"/> that is returned
            when an exception is encountered servicing an Http request.
            </summary>
            <param name="error">The exception thrown in the course of executing the Http request.</param>
            <param name="message">The <see cref="T:System.Net.Http.HttpResponseMessage"/> to return.  It cannot be <c>null</c>.</param>
            <returns>A value indicating whether the message is ready to be returned.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException">
            <summary>
            An exception that allows for a given <see cref="T:System.Net.Http.HttpResponseMessage"/> 
            to be returned to the client.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException.#ctor(System.Net.HttpStatusCode)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException"/> class.
            </summary>
            <param name="statusCode">The status code to use with the <see cref="T:System.Net.Http.HttpResponseMessage"/>.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException.#ctor(System.Net.Http.HttpResponseMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException"/> class.
            </summary>
            <param name="response">The response message.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException"/> class.
            </summary>
            <param name="serializationInfo">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="streamingContext">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:ArgumentNullException">The <paramref name="info"/> parameter is a null reference.</exception>
            <PermissionSet>
              <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*"/>
              <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="SerializationFormatter"/>
            </PermissionSet>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Dispatcher.HttpResponseException.Response">
            <summary>
            Gets the <see cref="T:System.Net.Http.HttpResponseMessage"/> to return to the client.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerFormatter">
            <summary>
            An <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpMessageFormatter"/> that executes an
            <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipeline"/> for each <see cref="T:System.Net.Http.HttpRequestMessage"/>
            instance that is dispatched to an operation and for each
            <see cref="T:System.Net.Http.HttpResponseMessage"/> that is created and returned 
            down the channel stack.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerFormatter.OnDeserializeRequest(System.Net.Http.HttpRequestMessage,System.Object[])">
            <summary>
            Deserializes the incoming <see cref="T:System.Net.Http.HttpRequestMessage"/> into the given <paramref name="parameters"/>.
            </summary>
            <param name="request">The incoming <see cref="T:System.Net.Http.HttpRequestMessage"/> containing the content 
            that requires deserialization</param>
            <param name="parameters">The array of objects into which this method should deserialize.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerFormatter.OnSerializeReply(System.Object[],System.Object)">
            <summary>
            Serializes the given <paramref name="parameters"/> values into the outgoing <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
            <param name="parameters">The array of values that need to be serialized.</param>
            <param name="result">The return value of the operation that needs to be serialized.</param>
            <returns>The <see cref="T:System.Net.Http.HttpResponseMessage"/> to return.  It cannot be <c>null</c>.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipeline">
            <summary>
            Thic class is used to bind and execute an ordered collection of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances. 
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineContext">
            <summary>
            Holds all of the state of an executing <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipeline"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo">
            <summary>
            Class that manages all of the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> binding information
            for an instance of an <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipeline"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo.HandlerType">
            <summary>
            An Enum that indicates if an <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> is
            a request handler, response handler or the service operation.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo.HttpParameterBinding">
            <summary>
            A class that represents a binding between an output <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/>
            and an input <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo.OperationHandlerInfo">
            <summary>
            A class that holds all of the binding information for a single <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>
            for using during runtime.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo.OutputParameterInfo">
            <summary>
            A class that holds all of the binding information for a single <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/>
            for use during runtime.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo.RequestMessageSourceHandler">
            <summary>
            A dummy <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> that is never executed, or even in the 
            collection of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances used by an <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipeline"/>,
            but is used as a place holder by the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo.OperationHandlerInfo"/> class to
            bind the incoming <see cref="T:System.Net.Http.HttpRequestMessage"/> to any <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/>
            instances in the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipeline"/> that accept it as an input <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/>.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo.RequestMessageSourceHandler.OnGetInputParameters">
            <summary>
            Implementation of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OnGetInputParameters"/> that always returns null.
            </summary>
            <returns>Always returns <c>null</c>.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo.RequestMessageSourceHandler.OnGetOutputParameters">
            <summary>
            Implementation of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OnGetOutputParameters"/> that always returns <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.RequestMessage"/>.
            </summary>
            <returns>Always returns <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.RequestMessage"/>.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo.RequestMessageSourceHandler.OnHandle(System.Object[])">
            <summary>
            Implementation of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OnGetOutputParameters"/> that should never be called.
            </summary>
            <param name="input">An array of input values.</param>
            <returns>Always returns <c>null</c>.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo.ResponseMessageSinkHandler">
            <summary>
            A dummy <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> that is never executed, or even in the 
            collection of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances used by an <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipeline"/>,
            but is used as a place holder by the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo.OperationHandlerInfo"/> class to
            bind against any <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances in the 
            <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipeline"/> that produce an <see cref="T:System.Net.Http.HttpResponseMessage"/> 
            as an output <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/>.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo.ResponseMessageSinkHandler.OnGetInputParameters">
            <summary>
            Implementation of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OnGetInputParameters"/> that always returns <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.ResponseMessage"/>.
            </summary>
            <returns>Always returns <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.ResponseMessage"/>.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo.ResponseMessageSinkHandler.OnGetOutputParameters">
            <summary>
            Implementation of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OnGetOutputParameters"/> that always returns null.
            </summary>
            <returns>Always returns <c>null</c>.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo.ResponseMessageSinkHandler.OnHandle(System.Object[])">
            <summary>
            Implementation of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OnGetOutputParameters"/> that should never be called.
            </summary>
            <param name="input">An array of input values.</param>
            <returns>Always returns <c>null</c>.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo.ServiceOperationHandler">
            <summary>
            A dummy <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> that is never executed, or even in the 
            collection of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances used by an <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipeline"/>,
            but is used as a place holder by the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo.OperationHandlerInfo"/> class to
            bind the service operation against the output <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances of the
            request <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances and against the input <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/>
            instances of the response <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo.ServiceOperationHandler.OnGetInputParameters">
            <summary>
            Implementation of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OnGetInputParameters"/> that always returns 
            the input <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances of the service operation.
            </summary>
            <returns>The input <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances of the service operation.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo.ServiceOperationHandler.OnGetOutputParameters">
            <summary>
            Implementation of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OnGetOutputParameters"/> that always returns
            the output <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances of the service operation.
            </summary>
            <returns>The output <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances of the service operation.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.OperationHandlerPipelineInfo.ServiceOperationHandler.OnHandle(System.Object[])">
            <summary>
            Implementation of <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OnGetOutputParameters"/> that should never be called.
            </summary>
            <param name="input">An array of input values.</param>
            <returns>Always returns <c>null</c>.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.QueryCompositionHandler">
            <summary>
            A <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> that composes a <see cref="T:System.Linq.IQueryable"/> with the result of the service operation.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.QueryCompositionHandler.#ctor(System.Type)">
            <summary>
            Initialize a new instance of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.QueryCompositionHandler"/> with the
            given <paramref name="returnType"/>.
            </summary>
            <param name="returnType">The return type of the service operation</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.QueryCompositionHandler.OnHandle(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)">
            <summary>
            Composes the service query with the result of the service operation and returns a new <see cref="T:System.Net.Http.HttpResponseMessage"/>, overriding the previous result.
            </summary>
            <param name="request">The original <see cref="T:System.Net.Http.HttpRequestMessage"/> for this request.</param>
            <param name="response">The <see cref="T:System.Net.Http.HttpResponseMessage"/> produced by the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler"/> from the service operation result.</param>
            <returns>
            The <see cref="T:System.Net.Http.HttpResponseMessage"/> resulting from the composition of the <paramref name="response"/> and
            the serviceQuery Property set on the <see cref="T:System.Net.Http.HttpRequestMessage"/>.
            </returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.QueryDeserializationHandler">
            <summary>
            A <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> that deserialize the URI query for a given
            request and inserts it as a property on the <see cref="T:System.Net.Http.HttpRequestMessage"/>.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationServer.Http.Dispatcher.QueryDeserializationHandler.QueryPropertyName">
            <summary>
            The string key for the Property Name on the message.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.QueryDeserializationHandler.#ctor(System.Type)">
            <summary>
            Initialize a new instance of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.QueryDeserializationHandler"/> with the given
            <see cref="T:System.Linq.IQueryable"/> return type for the service operation.
            </summary>
            <param name="returnType">The return type of the service operation</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.QueryDeserializationHandler.#ctor(System.Type,Microsoft.ApplicationServer.Query.QueryResolver)">
            <summary>
            Initialize a new instance of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.QueryDeserializationHandler"/> with the given
            <see cref="T:System.Linq.IQueryable"/> return type for the service operation.
            </summary>
            <param name="returnType">The return type of the service operation</param>
            <param name="queryResolver">A <see cref="T:Microsoft.ApplicationServer.Query.QueryResolver"/> that participates in the deserialization process.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.QueryDeserializationHandler.OnHandle(System.Net.Http.HttpRequestMessage)">
            <summary>
            Processes the URI query string from the request and deserializes it as a
            <see cref="T:System.Linq.IQueryable"/> ready for composition, added to the <see cref="T:System.Net.Http.HttpRequestMessage"/> as a Property.
            </summary>
            <param name="request">The <see cref="T:System.Net.Http.HttpRequestMessage"/> associated with the current request.</param>
            <returns>Return value is ignored.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.ReflectionHttpParameterBuilder">
            <summary>
            Class used to generate the input and output collections of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances 
            for the generic versions of <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> based on the method signatures of
            the <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler.OnHandle(System.Object[])"/> method.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler">
            <summary>
            A <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> that takes in a instance of some type
            and returns an <see cref="T:System.Net.Http.HttpResponseMessage"/> instance of that same type.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler.#ctor(Microsoft.ApplicationServer.Http.Description.HttpParameter,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler"/> with the
            given <paramref name="responseContentParameter"/> and <paramref name="formatters"/>.
            </summary>
            <param name="responseContentParameter">The <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> for the content of the response.</param>
            <param name="formatters">The collection of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter"/> instances to use for deserializing the response content.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler.OnGetInputParameters">
            <summary>
            Retrieves the collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances describing the
            input values for this <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler"/>.
            </summary>
            <remarks>
            The <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler"/> always returns a single input of
            <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.ResponseMessage"/>.
            </remarks>
            <returns>A collection that consists of just the <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.ResponseMessage"/>.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler.OnGetOutputParameters">
            <summary>
            Retrieves the collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/>s describing the
            output values of this <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler"/>.
            </summary>
            <remarks>
            The <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler"/> always returns the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> 
            instance that was passed into the constructor of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler"/>.
            </remarks>
            <returns>
            A collection that consists of just the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> 
            instance that was passed into the constructor of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler"/>.
            </returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler.OnHandle(System.Object[])">
            <summary>
            Called to execute this <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler"/>.
            </summary>
            <param name="input">
            The input values to handle corresponding to the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> 
            returned by <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler.OnGetInputParameters"/>.
            </param>
            <returns>
            The output values corresponding to the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> returned 
            by <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler.OnGetOutputParameters"/>.
            </returns>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler.Formatters">
            <summary>
            Gets the default <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter"/> instances to use for the <see cref="T:System.Net.Http.HttpResponseMessage"/>
            instances created by the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler.HttpResponseMessageConverter">
            <summary>
            Abstract base class used by the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler"/> to create 
            <see cref="T:System.Net.Http.HttpResponseMessage"/> instances for a particular type 
            without the performance hit of using reflection for every new instance.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler.HttpResponseMessageConverter.Convert(System.Net.Http.HttpRequestMessage,System.Object,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
            <summary>
            Base abstract method that is overridden by the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler.HttpResponseMessageConverter"/>
            to convert an <see cref="T:System.Net.Http.HttpResponseMessage"/> into an <see cref="T:System.Net.Http.HttpResponseMessage"/> of
            a particular type.
            </summary>
            <param name="requestMessage">The <see cref="T:System.Net.Http.HttpRequestMessage"/> to attach to the converted <see cref="T:System.Net.Http.HttpResponseMessage"/>.</param>
            <param name="responseContent">The content of the response message.</param>
            <param name="formatters">The <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter"/> collection to use with the <see cref="T:System.Net.Http.ObjectContent"/>
            used by the converted <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler.HttpResponseMessageConverter"/>.</param>
            <returns>
            The converted <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler.HttpResponseMessageConverter"/>.
            </returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler.SimpleHttpResponseMessageConverter">
            <summary>
            An <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler.HttpResponseMessageConverter"/> that is only used when the response content is a non-generic <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler.SimpleHttpResponseMessageConverter.Convert(System.Net.Http.HttpRequestMessage,System.Object,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
            <summary>
            Overridden method that simply sets the <see cref="P:System.Net.Http.HttpResponseMessage.RequestMessage"/> on the <see cref="T:System.Net.Http.HttpResponseMessage"/> instance that
            is already provided as the <paramref name="responseContent"/>.
            </summary>
            <param name="requestMessage">The <see cref="T:System.Net.Http.HttpRequestMessage"/> to attach to the <see cref="T:System.Net.Http.HttpResponseMessage"/>.</param>
            <param name="responseContent">The response message.</param>
            <param name="formatters">The <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter"/> collection to use with the <see cref="T:System.Net.Http.ObjectContent"/>
            used by the converted <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler.HttpResponseMessageConverter"/>.</param>
            <returns>
            The <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler.VoidHttpResponseMessageConverter">
            <summary>
            An <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler.VoidHttpResponseMessageConverter"/> that is only used when the response content is a void.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler.VoidHttpResponseMessageConverter.Convert(System.Net.Http.HttpRequestMessage,System.Object,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
            <summary>
            Overridden method that simply sets the HttpReponseMessage.RequestMessage on a new <see cref="T:System.Net.Http.HttpResponseMessage"/> instance.
            </summary>
            <param name="requestMessage">The <see cref="T:System.Net.Http.HttpRequestMessage"/> to attach to the <see cref="T:System.Net.Http.HttpResponseMessage"/>.</param>
            <param name="responseContent">The value is always null.</param>
            <param name="formatters">The value is not used.</param>
            <returns>
            The <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler.HttpContentMessageConverter">
            <summary>
            An <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler.HttpResponseMessageConverter"/> that is only used when the response content is a an <see cref="T:System.Net.Http.HttpContent"/>.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler.HttpContentMessageConverter.Convert(System.Net.Http.HttpRequestMessage,System.Object,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
            <summary>
            Overriden method that simply creates a new the <see cref="T:System.Net.Http.HttpResponseMessage"/> instance and sets the <see cref="T:System.Net.Http.HttpContent"/> that
            is already provided as the <paramref name="responseContent"/>.
            </summary>
            <param name="requestMessage">The <see cref="T:System.Net.Http.HttpRequestMessage"/> to attach to the <see cref="T:System.Net.Http.HttpResponseMessage"/>.</param>
            <param name="responseContent">The response message content.</param>
            <param name="formatters">The <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter"/> collection to use with the <see cref="T:System.Net.Http.ObjectContent"/>
            used by the converted <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler.HttpResponseMessageConverter"/>.</param>
            <returns>
            The <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler.HttpResponseMessageConverter`1">
            <summary>
            Generic version of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler.HttpResponseMessageConverter"/> used by the 
            <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler"/> to create <see cref="T:System.Net.Http.HttpResponseMessage"/> instances 
            for a particular <typeparamref name="T"/> without the performance hit of using reflection
            for every new instance.
            </summary>
            <typeparam name="T">The type with which to create new <see cref="T:System.Net.Http.HttpResponseMessage"/> instances.</typeparam>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler.HttpResponseMessageConverter`1.Convert(System.Net.Http.HttpRequestMessage,System.Object,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
            <summary>
            Converts an <see cref="T:System.Net.Http.HttpResponseMessage"/> into an <see cref="T:System.Net.Http.HttpResponseMessage"/> of
            a particular type.
            </summary>
            <param name="requestMessage">The <see cref="T:System.Net.Http.HttpRequestMessage"/> to attach to the converted <see cref="T:System.Net.Http.HttpResponseMessage"/>.</param>
            <param name="responseContent">The content of the response message.</param>
            <param name="formatters">The <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter"/> collection to use with the <see cref="T:System.Net.Http.ObjectContent"/>
            used by the converted <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.ResponseContentHandler.HttpResponseMessageConverter"/>.</param>
            <returns>
            The converted <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler">
            <summary>
            A <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> that takes in an <see cref="T:System.Net.Http.HttpRequestMessage"/>
            and returns an <see cref="T:System.Net.Http.HttpRequestMessage"/> instance with the same type as the content
            <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> passed into the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler"/>
            constructor.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler.#ctor(Microsoft.ApplicationServer.Http.Description.HttpParameter,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler"/> with the
            given <paramref name="requestContentParameter"/> and <paramref name="formatters"/>.
            </summary>
            <param name="requestContentParameter">The <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> for the content of the request.</param>
            <param name="formatters">The collection of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter"/> instances to use for deserializing the request content.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler.OnGetInputParameters">
            <summary>
            Retrieves the collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances describing the
            input values for this <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler"/>.
            </summary>
            <remarks>
            The <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler"/> always returns a single input of
            <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.RequestMessage"/>.
            </remarks>
            <returns>A collection that consists of just the <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.RequestMessage"/>.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler.OnGetOutputParameters">
            <summary>
            Retrieves the collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/>s describing the
            output values of this <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler"/>.
            </summary>
            <remarks>
            The <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler"/> always returns the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> 
            that was passed into the constructor of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler"/>.
            </remarks>
            <returns>
            A collection that consists of just the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> 
            that was passed into the constructor of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler"/>.
            </returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler.OnHandle(System.Object[])">
            <summary>
            Called to execute this <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler"/>.
            </summary>
            <param name="input">
            The input values to handle corresponding to the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> 
            returned by <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler.OnGetInputParameters"/>.
            </param>
            <returns>
            The output values corresponding to the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> returned 
            by <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler.OnGetOutputParameters"/>.
            </returns>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler.Formatters">
            <summary>
            Gets the default <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter"/> instances to use for the <see cref="T:System.Net.Http.HttpRequestMessage"/>
            instances created by the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler.HttpRequestMessageConverter">
            <summary>
            Abstract base class used by the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler"/> to create 
            <see cref="T:System.Net.Http.HttpRequestMessage"/> instances for a particular type
            without the performance hit of using reflection for every new instance.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler.HttpRequestMessageConverter.Convert(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
            <summary>
            Base abstract method that is overridden by the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler.HttpRequestMessageConverter"/>
            to convert an <see cref="T:System.Net.Http.HttpRequestMessage"/> into an <see cref="T:System.Net.Http.HttpRequestMessage"/> of 
            a particular type.
            </summary>
            <param name="requestMessage">The <see cref="T:System.Net.Http.HttpRequestMessage"/> to convert.</param>
            <param name="formatters">
            The <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter"/> collection to use with the <see cref="T:System.Net.Http.ObjectContent"/>
            used by the converted <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler.HttpRequestMessageConverter"/>.
            </param>
            <returns>The converted <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler.HttpRequestMessageConverter"/>.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler.SimpleHttpRequestMessageConverter">
            <summary>
            An <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler.HttpRequestMessageConverter"/> that is only used when the request content should be a non-generic <see cref="T:System.Net.Http.HttpRequestMessage"/>.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler.SimpleHttpRequestMessageConverter.Convert(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
            <summary>
            Overridden method that simply passes the <see cref="T:System.Net.Http.HttpRequestMessage"/> instance through.
            </summary>
            <param name="requestMessage">The <see cref="T:System.Net.Http.HttpRequestMessage"/> to pass through.</param>
            <param name="formatters">The <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter"/> collection to use. This parameter is not used.</param>
            <returns>
            The <see cref="T:System.Net.Http.HttpRequestMessage"/>.
            </returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler.HttpRequestMessageConverter`1">
            <summary>
            Generic version of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler.HttpRequestMessageConverter"/> used by the 
            <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler"/> to create <see cref="T:System.Net.Http.HttpRequestMessage"/> instances 
            for a particular <typeparamref name="T"/> without the performance hit of using reflection
            for every new instance.
            </summary>
            <typeparam name="T">The type with which to create new <see cref="T:System.Net.Http.HttpRequestMessage"/> instances.</typeparam>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler.HttpRequestMessageConverter`1.Convert(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
            <summary>
            Converts an <see cref="T:System.Net.Http.HttpRequestMessage"/> into an <see cref="T:System.Net.Http.HttpRequestMessage"/> of
            a particular type.
            </summary>
            <param name="requestMessage">The <see cref="T:System.Net.Http.HttpRequestMessage"/> to convert.</param>
            <param name="formatters">The <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter"/> collection to use with the <see cref="T:System.Net.Http.ObjectContent"/>
            used by the converted <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler.HttpRequestMessageConverter"/>.</param>
            <returns>
            The converted <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.RequestContentHandler.HttpRequestMessageConverter"/>.
            </returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector">
            <summary>
            Defines the operation selector that matches the incoming requests to operations by means of UriTemplateTableMatch. Matching is done on the HTTP verb and the request Uri.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector.WildcardMethod">
            <summary>
            Denotes a match-all HttpMethod
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector.#ctor(System.Uri,System.Collections.Generic.IEnumerable{Microsoft.ApplicationServer.Http.Description.HttpOperationDescription})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector"/> class with a 
            list of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription"/> 
            </summary>
            <param name="baseAddress">BaseAddress used for mapping the requestUri to the entries in operationList</param>
            <param name="operations"> 
            The <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription"/> instances that describe the operations of the service.
            </param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector.#ctor(System.Uri,System.Collections.Generic.IEnumerable{Microsoft.ApplicationServer.Http.Description.HttpOperationDescription},Microsoft.ApplicationServer.Http.TrailingSlashMode)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationSelector"/> class with a 
            list of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription"/> and <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector.TrailingSlashMode"/>.
            </summary>
            <param name="baseAddress">BaseAddress used for mapping the requestUri to the entries in operationList</param>
            <param name="operations"> 
            The <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpOperationDescription"/> instances that describe the operations of the service.
            </param>
            <param name="trailingSlashMode">
            The setting for the 
            <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector.TrailingSlashMode">TrailingSlashMode</see>.
            </param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector.TrySelectOperation(System.Net.Http.HttpRequestMessage,System.String@,System.Boolean@)">
            <summary>
            Select a service operation based on the HTTP verb and the request Uri of the incoming request message. 
            </summary>
            <param name="request">The incoming <see cref="T:System.Net.Http.HttpRequestMessage"/>.</param>
            <param name="operationName">When this method returns true, operationName will be the name of the operation to be associated with the message.</param>
            <param name="matchDiffersByTrailingSlash">Boolean value indicating whether the match differs from the message.RequestUri by a trailing slash</param>
            <returns>boolean value indicating whether we found a explicit matching operation for the request. The request Uri could be an exact match or differing by a trailing slash.This method does not look for a wild card method match.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector.OnSelectOperation(System.Net.Http.HttpRequestMessage)">
            <summary>
            Selects a service operation based on the HTTP verb and the request Uri of the incoming request message. 
            </summary>
            <param name="request">The incoming <see cref="T:System.Net.Http.HttpRequestMessage"/>.</param>
            <returns>The name of the operation to be associated with the message.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector.OnTrySelectOperation(System.Net.Http.HttpRequestMessage,System.String@,System.Boolean@)">
            <summary>
            Called by <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector.TrySelectOperation(System.Net.Http.HttpRequestMessage,System.String@,System.Boolean@)"/> to select a service operation based on the HTTP verb and the request Uri of the incoming request message.
            </summary>
            <param name="request">The incoming <see cref="T:System.Net.Http.HttpRequestMessage"/>.</param>
            <param name="operationName">When this method returns true, operationName will be the name of the operation to be associated with the message.</param>
            <param name="matchDifferByTrailingSlash">Boolean value indicating whether the match differs from the message.RequestUri by a trailing slash</param>
            <returns>boolean value indicating whether we found a explicit matching operation for the request. The request Uri could be an exact match or differing by a trailing slash.This method does not look for a wild card method match.</returns>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector.TrailingSlashMode">
            <summary>
            Gets <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector.TrailingSlashMode"/> used for matching incoming request
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector.OperationRoutingKey">
            <summary>
             Class used to enforce that no two operations have the same UriTemplate and Method.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector.OperationRoutingKey.Equals(System.Object)">
            <summary>
            Override to do custom comparison
            </summary>
            <param name="obj">The object to compare.</param>
            <returns><c>true</c> if they are equal.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.UriAndMethodOperationSelector.OperationRoutingKey.GetHashCode">
            <summary>
            Override to do custom hash
            </summary>
            <returns>Custom hash code.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler">
            <summary>
            A <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.HttpOperationHandler"/> that matches an input <see cref="T:System.Uri"/> against a 
            given <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler.UriTemplate"/> and outputs <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler.UriTemplate"/> variable
            values as strings.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler.#ctor(System.Uri,System.UriTemplate)">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler"/> with the
            given <paramref name="baseAddress"/> and <paramref name="uriTemplate"/>.
            </summary>
            <param name="baseAddress">
            The base address to use when matching a <see cref="T:System.Uri"/> against the given <paramref name="uriTemplate"/>
            </param> 
            <param name="uriTemplate">
            The <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler.UriTemplate"/> to match against input <see cref="T:System.Uri">Uris</see>.
            </param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler.OnGetInputParameters">
            <summary>
            Retrieves the collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances describing the
            input values for this <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler"/>.
            </summary>
            <remarks>
            The <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler"/> always returns a single input of
            <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.RequestMessage"/>.
            </remarks>
            <returns>A collection that consists of just the <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.RequestMessage"/>.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler.OnGetOutputParameters">
            <summary>
            Retrieves the collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances describing the
            output values of this <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler"/>.
            </summary>
            <remarks>
            The <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler"/> always returns output <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> 
            instances in which the <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.Name"/> is the <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler.UriTemplate"/>
            variable and the <see cref="P:Microsoft.ApplicationServer.Http.Description.HttpParameter.ParameterType"/> is of type <see cref="T:System.String"/>.
            </remarks>
            <returns>The collection of <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> instances.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler.OnHandle(System.Object[])">
            <summary>
            Called to execute this <see cref="T:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler"/>.
            </summary>
            <param name="input">
            The input values to handle, corresponding to the <see cref="T:Microsoft.ApplicationServer.Http.Description.HttpParameter"/> 
            returned by <see cref="M:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler.OnGetInputParameters"/>
            </param>
            <returns>
            The <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler.UriTemplate"/> variable values from matching the <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler.UriTemplate"/>
            agains the request <see cref="T:System.Uri"/>.
            </returns>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler.BaseAddress">
            <summary>
            Gets the base address to use when matching a <see cref="T:System.Uri"/> against the <cref name="UriTemplate"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler.UriTemplate">
            <summary>
            Gets the <see cref="P:Microsoft.ApplicationServer.Http.Dispatcher.UriTemplateHandler.UriTemplate"/> to match against input <see cref="T:System.Uri"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.Test.TolerantTextReaderHelper.GetExpectedValue(System.String,System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            this method returns one string with special structures to present one autocomplete entry to javascript client
            the structure is display-name\nvalue\nreplace-start-position\nfinal-caret-pos\napplicable
            
            e.g. if request is: &lt;ab|
            then one autocomplete entry might look like: MyElement\nMyElement&gt;&lt;/MyElement&gt;\n-2\n-12\ntrue
            in dropdown list, it looks like: MyElement 
            after replacement, it looks like: &lt;MyElement&gt;|&lt;/MyElement&gt;
            </summary>
            <param name="displayName">mandatory, used as &lt;option&gt; name, and also used as sorting key</param>
            <param name="value">mandatory, used as &lt;option&gt; value (i.e. for replacement into textbox), and also used as tooltip</param>
            <param name="replaceStartPos">mandatory, when provided, this is the relative position to the current-pos in the request meaning where replacement in textbox should start; when omitted, javascript should use its own logic to find replace start position</param>
            <param name="finalCaretPos">optional, when provided, this is the relative position to the replace end position meaning where caret should be after replacement and will trigger another autocomplete; when omitted, javascript should do nothing i.e. caret stays at the end of replacement in textbox</param>
            <param name="applicable">optional, when provided, this means whether this &lt;option&gt; item should be grayed out; when omitted, javascript should do nothing i.e. the &lt;option&gt; item displays normal</param>
            <returns>one string with special structures to present one autocomplete entry to javascript client</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Query.ExpressionParser.ConvertEnumExpression(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            We perform comparisons against enums using the underlying type
            because a more complete set of comparisons can be performed.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Query.ODataQueryDeserializer">
            <summary>
            Used to deserialize a set of string based query operations into expressions and
            compose them over a specified query.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Query.ODataQueryDeserializer.Deserialize(System.Linq.IQueryable,System.Uri)">
            <summary>
            Deserializes the query operations in the specified Uri and applies them
            to the specified IQueryable.
            </summary>
            <param name="query">The root query to compose the deserialized query over.</param>
            <param name="uri">The request Uri containing the query operations.</param>
            <returns>The resulting IQueryable with the deserialized query composed over it.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Query.ODataQueryDeserializer.Deserialize``1(System.Uri)">
            <summary>
            Deserializes the query operations in the specified Uri and returns an IQueryable
            with a manufactured query root with those operations applied.
            </summary>
            <typeparam name="T">The element type of the query</typeparam>
            <param name="uri">The request Uri containing the query operations.</param>
            <returns>The resulting IQueryable with the deserialized query composed over it.</returns>
        </member>
        <member name="M:Microsoft.ApplicationServer.Query.ODataQueryDeserializer.Deserialize(System.Type,System.Uri)">
            <summary>
            Deserializes the query operations in the specified Uri and returns an IQueryable
            with a manufactured query root with those operations applied.
            </summary>
            <param name="elementType">The element type of the query</param>
            <param name="uri">The request Uri containing the query operations.</param>
            <returns>The resulting IQueryable with the deserialized query composed over it.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Query.QueryComposer">
            <summary>
            Used to compose two separate queries into a single query
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Query.QueryComposer.Compose(System.Linq.IQueryable,System.Linq.IQueryable)">
            <summary>
            Composes the specified query with the source provided.
            </summary>
            <param name="source">The root or source query</param>
            <param name="query">The query to compose</param>
            <returns>The composed query</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Query.QueryComposer.QueryRebaser">
            <summary>
            Class used to insert a specified query source into another separate
            query, effectively "rebasing" the query source.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Query.QueryComposer.QueryRebaser.Rebase(System.Linq.IQueryable,System.Linq.IQueryable)">
            <summary>
            Rebase the specified query to the specified source
            </summary>
            <param name="source">The query source</param>
            <param name="query">The query to rebase</param>
            <returns>Returns the edited query.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Query.QueryResolver">
            <summary>
            Defines a set of methods that can participate in query deserialization.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Query.QueryResolver.ResolveMember(System.Type,System.String,System.Linq.Expressions.Expression)">
            <summary>
            Called to attempt to resolve unresolved member references during query deserialization.
            </summary>
            <param name="type">The Type the member is expected on.</param>
            <param name="member">The member name.</param>
            <param name="instance">The instance to form the MemberExpression on.</param>
            <returns>A MemberExpression if the member can be resolved, null otherwise.</returns>
        </member>
        <member name="T:Microsoft.ApplicationServer.Query.ServiceQuery">
            <summary>
            Represents an <see cref="T:System.Linq.IQueryable"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Query.ServiceQuery.QueryParts">
            <summary>
            Gets or sets a list of query parts.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationServer.Query.ServiceQueryPart">
            <summary>
            Represents a single query operator to be applied to a query
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Query.ServiceQueryPart.#ctor">
            <summary>
            Public constructor
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Query.ServiceQueryPart.#ctor(System.String,System.String)">
            <summary>
            Public constructor
            </summary>
            <param name="queryOperator">The query operator</param>
            <param name="expression">The query expression</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Query.ServiceQueryPart.ToString">
            <summary>
            Returns a string representation of this <see cref="T:Microsoft.ApplicationServer.Query.ServiceQueryPart"/>
            </summary>
            <returns>The string representation of this <see cref="T:Microsoft.ApplicationServer.Query.ServiceQueryPart"/></returns>
        </member>
        <member name="P:Microsoft.ApplicationServer.Query.ServiceQueryPart.QueryOperator">
            <summary>
            Gets or sets the query operator. Must be one of the supported operators : "where", "orderby", "skip", or "take".
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Query.ServiceQueryPart.Expression">
            <summary>
            Gets or sets the query expression.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.MessageBodyIsHttpRequestMessageWithKnownContentLength(System.Object)">
            <summary>Gets localized string like: HTTP request message body with a content length of '{0}' bytes.</summary>
            <param name="param0">Parameter 0 for string: HTTP request message body with a content length of '{0}' bytes.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.MessageBodyIsHttpResponseMessageWithKnownContentLength(System.Object)">
            <summary>Gets localized string like: HTTP response message body with a content length of '{0}' bytes.</summary>
            <param name="param0">Parameter 0 for string: HTTP response message body with a content length of '{0}' bytes.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.MessageReadWriteCopyNotSupported(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The message instance does not support being read, written out or copied.  Use the '{0}' or '{1}' extension methods on the '{2}' class to access the message content.</summary>
            <param name="param0">Parameter 0 for string: The message instance does not support being read, written out or copied.  Use the '{0}' or '{1}' extension methods on the '{2}' class to access the message content.</param>
            <param name="param1">Parameter 1 for string: The message instance does not support being read, written out or copied.  Use the '{0}' or '{1}' extension methods on the '{2}' class to access the message content.</param>
            <param name="param2">Parameter 2 for string: The message instance does not support being read, written out or copied.  Use the '{0}' or '{1}' extension methods on the '{2}' class to access the message content.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.OnlyMessageVersionNoneSupportedOnHttpMessageEncodingBindingElement(System.Object)">
            <summary>Gets localized string like: The '{0}' type supports only MessageVersion.None. </summary>
            <param name="param0">Parameter 0 for string: The '{0}' type supports only MessageVersion.None. </param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.ChannelFactoryNotSupported(System.Object,System.Object)">
            <summary>Gets localized string like: The '{0}' type does not support building '{1}' instances.</summary>
            <param name="param0">Parameter 0 for string: The '{0}' type does not support building '{1}' instances.</param>
            <param name="param1">Parameter 1 for string: The '{0}' type does not support building '{1}' instances.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.ChannelShapeNotSupported(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The '{0}' type does not support the '{1}' channel shape. Implement the '{2}' channel shape to use this type.</summary>
            <param name="param0">Parameter 0 for string: The '{0}' type does not support the '{1}' channel shape. Implement the '{2}' channel shape to use this type.</param>
            <param name="param1">Parameter 1 for string: The '{0}' type does not support the '{1}' channel shape. Implement the '{2}' channel shape to use this type.</param>
            <param name="param2">Parameter 2 for string: The '{0}' type does not support the '{1}' channel shape. Implement the '{2}' channel shape to use this type.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.EncoderMessageVersionMismatch(System.Object,System.Object)">
            <summary>Gets localized string like: The message version of the outgoing message ({0}) does not match that of the encoder ({1}). Make sure the binding is configured with the same version as the message.</summary>
            <param name="param0">Parameter 0 for string: The message version of the outgoing message ({0}) does not match that of the encoder ({1}). Make sure the binding is configured with the same version as the message.</param>
            <param name="param1">Parameter 1 for string: The message version of the outgoing message ({0}) does not match that of the encoder ({1}). Make sure the binding is configured with the same version as the message.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.MessageInvalidForHttpMessageEncoder(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The response message is not valid for the encoder used by the '{0}' binding, which requires that the response message have been created with the '{1}' extension method on the '{2}' class.</summary>
            <param name="param0">Parameter 0 for string: The response message is not valid for the encoder used by the '{0}' binding, which requires that the response message have been created with the '{1}' extension method on the '{2}' class.</param>
            <param name="param1">Parameter 1 for string: The response message is not valid for the encoder used by the '{0}' binding, which requires that the response message have been created with the '{1}' extension method on the '{2}' class.</param>
            <param name="param2">Parameter 2 for string: The response message is not valid for the encoder used by the '{0}' binding, which requires that the response message have been created with the '{1}' extension method on the '{2}' class.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.ParameterMustBeLessThanOrEqualSecondParameter(System.Object,System.Object)">
            <summary>Gets localized string like: The value of the '{0}' parameter must be less than or equal to the value of the '{1}' parameter.</summary>
            <param name="param0">Parameter 0 for string: The value of the '{0}' parameter must be less than or equal to the value of the '{1}' parameter.</param>
            <param name="param1">Parameter 1 for string: The value of the '{0}' parameter must be less than or equal to the value of the '{1}' parameter.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HttpMessageEncoderFactoryDoesNotSupportSessionEncoder(System.Object)">
            <summary>Gets localized string like: The '{0}' type does not support a session encoder.</summary>
            <param name="param0">Parameter 0 for string: The '{0}' type does not support a session encoder.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.NonHttpMessageMustBeEmpty(System.Object,System.Object)">
            <summary>Gets localized string like: The message instance is non-empty but the '{0}' extension method on the '{1}' class returned null.  Message instances that do not support the '{0}' extension method must be empty. </summary>
            <param name="param0">Parameter 0 for string: The message instance is non-empty but the '{0}' extension method on the '{1}' class returned null.  Message instances that do not support the '{0}' extension method must be empty. </param>
            <param name="param1">Parameter 1 for string: The message instance is non-empty but the '{0}' extension method on the '{1}' class returned null.  Message instances that do not support the '{0}' extension method must be empty. </param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.RequestMissingHttpRequestMessageProperty(System.Object,System.Object)">
            <summary>Gets localized string like: The incoming message does not have the required '{0}' property of type '{1}'.</summary>
            <param name="param0">Parameter 0 for string: The incoming message does not have the required '{0}' property of type '{1}'.</param>
            <param name="param1">Parameter 1 for string: The incoming message does not have the required '{0}' property of type '{1}'.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HttpMessageHandlerTypeNotSupported(System.Object,System.Object)">
            <summary>Gets localized string like: Invalid handler provided: '{0}'. It must inherit from base type '{1}', cannot be abstract, and must expose a default public constructor.</summary>
            <param name="param0">Parameter 0 for string: Invalid handler provided: '{0}'. It must inherit from base type '{1}', cannot be abstract, and must expose a default public constructor.</param>
            <param name="param1">Parameter 1 for string: Invalid handler provided: '{0}'. It must inherit from base type '{1}', cannot be abstract, and must expose a default public constructor.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HttpMessageHandlerInvalidMessage(System.Object)">
            <summary>Gets localized string like: Could not obtain an HTTP request from message of type '{0}'.</summary>
            <param name="param0">Parameter 0 for string: Could not obtain an HTTP request from message of type '{0}'.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HttpMessageHandlerRequestContextReplyPathMismatch1(System.Object,System.Object)">
            <summary>Gets localized string like: The '{0}' for this endpoint indicates that responses should be sent asynchronously but the '{1}' channel received a synchronous response. Please correct this discrepancy either by setting the behavior to be synchronous or use the asynchronous reply path for sending responses.</summary>
            <param name="param0">Parameter 0 for string: The '{0}' for this endpoint indicates that responses should be sent asynchronously but the '{1}' channel received a synchronous response. Please correct this discrepancy either by setting the behavior to be synchronous or use the asynchronous reply path for sending responses.</param>
            <param name="param1">Parameter 1 for string: The '{0}' for this endpoint indicates that responses should be sent asynchronously but the '{1}' channel received a synchronous response. Please correct this discrepancy either by setting the behavior to be synchronous or use the asynchronous reply path for sending responses.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HttpMessageHandlerRequestContextReplyPathMismatch2(System.Object,System.Object)">
            <summary>Gets localized string like: The '{0}' for this endpoint indicates that responses should be sent synchronously but the '{1}' channel received an asynchronous response. Please correct this discrepancy either by setting the behavior to be asynchronous or use the synchronous reply path for sending responses.</summary>
            <param name="param0">Parameter 0 for string: The '{0}' for this endpoint indicates that responses should be sent synchronously but the '{1}' channel received an asynchronous response. Please correct this discrepancy either by setting the behavior to be asynchronous or use the synchronous reply path for sending responses.</param>
            <param name="param1">Parameter 1 for string: The '{0}' for this endpoint indicates that responses should be sent synchronously but the '{1}' channel received an asynchronous response. Please correct this discrepancy either by setting the behavior to be asynchronous or use the synchronous reply path for sending responses.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.ConfigInvalidBindingConfigurationName(System.Object,System.Object)">
            <summary>Gets localized string like: The '{1}' binding does not have a configured binding named '{0}'.</summary>
            <param name="param0">Parameter 0 for string: The '{1}' binding does not have a configured binding named '{0}'.</param>
            <param name="param1">Parameter 1 for string: The '{1}' binding does not have a configured binding named '{0}'.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HtmlPageMethodNotAllowedWithLink(System.Object)">
            <summary>Gets localized string like: <p>Method not allowed. Please see the <a rel="help-page" href="{0}">service help page</a> for constructing valid requests to the service.</p></summary>
            <param name="param0">Parameter 0 for string: <p>Method not allowed. Please see the <a rel="help-page" href="{0}">service help page</a> for constructing valid requests to the service.</p></param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HtmlPageServerErrorProcessingRequestWithDetails(System.Object)">
            <summary>Gets localized string like: The server encountered an error processing the request. The exception message is '{0}'. See server logs for more details. The exception stack trace is: </summary>
            <param name="param0">Parameter 0 for string: The server encountered an error processing the request. The exception message is '{0}'. See server logs for more details. The exception stack trace is: </param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HtmlPageServerErrorProcessingRequestWithDetailsAndLink(System.Object,System.Object)">
            <summary>Gets localized string like: <p>The server encountered an error processing the request. Please see the <a rel="help-page" href="{0}">service help page</a> for constructing valid requests to the service. The exception message is '{1}'. See server logs for more details. The exception stack trace is: </p></summary>
            <param name="param0">Parameter 0 for string: <p>The server encountered an error processing the request. Please see the <a rel="help-page" href="{0}">service help page</a> for constructing valid requests to the service. The exception message is '{1}'. See server logs for more details. The exception stack trace is: </p></param>
            <param name="param1">Parameter 1 for string: <p>The server encountered an error processing the request. Please see the <a rel="help-page" href="{0}">service help page</a> for constructing valid requests to the service. The exception message is '{1}'. See server logs for more details. The exception stack trace is: </p></param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HtmlPageServerErrorProcessingRequestWithLink(System.Object)">
            <summary>Gets localized string like: <p>The server encountered an error processing the request. Please see the <a rel="help-page" href="{0}">service help page</a> for constructing valid requests to the service.</p></summary>
            <param name="param0">Parameter 0 for string: <p>The server encountered an error processing the request. Please see the <a rel="help-page" href="{0}">service help page</a> for constructing valid requests to the service.</p></param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HtmlPageEndpointNotFoundWithLink(System.Object)">
            <summary>Gets localized string like: <p>Endpoint not found. Please see the <a rel="help-page" href="{0}">service help page</a> for constructing valid requests to the service.</p></summary>
            <param name="param0">Parameter 0 for string: <p>Endpoint not found. Please see the <a rel="help-page" href="{0}">service help page</a> for constructing valid requests to the service.</p></param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HtmlPageRedirect(System.Object,System.Object)">
            <summary>Gets localized string like: <p>There is no operation listening for <a href="{0}">{0}</a>, but there is an operation listening for <a href="{1}">{1}</a>, so you are being redirected there.</p></summary>
            <param name="param0">Parameter 0 for string: <p>There is no operation listening for <a href="{0}">{0}</a>, but there is an operation listening for <a href="{1}">{1}</a>, so you are being redirected there.</p></param>
            <param name="param1">Parameter 1 for string: <p>There is no operation listening for <a href="{0}">{0}</a>, but there is an operation listening for <a href="{1}">{1}</a>, so you are being redirected there.</p></param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HttpMessageInspectorNullMessage(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The inspector of type '{0}' received a null '{1}' in '{2}'.</summary>
            <param name="param0">Parameter 0 for string: The inspector of type '{0}' received a null '{1}' in '{2}'.</param>
            <param name="param1">Parameter 1 for string: The inspector of type '{0}' received a null '{1}' in '{2}'.</param>
            <param name="param2">Parameter 2 for string: The inspector of type '{0}' received a null '{1}' in '{2}'.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HttpOperationDescriptionNullOperationDescription(System.Object)">
            <summary>Gets localized string like: No '{0}' is available.</summary>
            <param name="param0">Parameter 0 for string: No '{0}' is available.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HttpDescriptionPropertyImmutable(System.Object,System.Object)">
            <summary>Gets localized string like: The '{0}' property cannot be modified on the associated '{1}'.</summary>
            <param name="param0">Parameter 0 for string: The '{0}' property cannot be modified on the associated '{1}'.</param>
            <param name="param1">Parameter 1 for string: The '{0}' property cannot be modified on the associated '{1}'.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HttpErrorMessageNullResponse(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The error handler of type '{0}' returned '{1}' in '{2}' but the '{3}' is null.</summary>
            <param name="param0">Parameter 0 for string: The error handler of type '{0}' returned '{1}' in '{2}' but the '{3}' is null.</param>
            <param name="param1">Parameter 1 for string: The error handler of type '{0}' returned '{1}' in '{2}' but the '{3}' is null.</param>
            <param name="param2">Parameter 2 for string: The error handler of type '{0}' returned '{1}' in '{2}' but the '{3}' is null.</param>
            <param name="param3">Parameter 3 for string: The error handler of type '{0}' returned '{1}' in '{2}' but the '{3}' is null.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HttpInstanceProviderNullRequest(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The instance provider of type '{0}' received a null '{1}' in '{2}'.</summary>
            <param name="param0">Parameter 0 for string: The instance provider of type '{0}' received a null '{1}' in '{2}'.</param>
            <param name="param1">Parameter 1 for string: The instance provider of type '{0}' received a null '{1}' in '{2}'.</param>
            <param name="param2">Parameter 2 for string: The instance provider of type '{0}' received a null '{1}' in '{2}'.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HttpOperationSelectorNullOperation(System.Object)">
            <summary>Gets localized string like: The operation selector of type '{0}' selected a null operation.</summary>
            <param name="param0">Parameter 0 for string: The operation selector of type '{0}' selected a null operation.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HttpOperationSelectorNullRequest(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The operation selector of type '{0}' received a null '{1}' in '{2}'.</summary>
            <param name="param0">Parameter 0 for string: The operation selector of type '{0}' received a null '{1}' in '{2}'.</param>
            <param name="param1">Parameter 1 for string: The operation selector of type '{0}' received a null '{1}' in '{2}'.</param>
            <param name="param2">Parameter 2 for string: The operation selector of type '{0}' received a null '{1}' in '{2}'.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HttpMessageFormatterMessageVersion(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The formatter of type '{0}' only supports bindings that ensure the message version is '{1}.{2}'</summary>
            <param name="param0">Parameter 0 for string: The formatter of type '{0}' only supports bindings that ensure the message version is '{1}.{2}'</param>
            <param name="param1">Parameter 1 for string: The formatter of type '{0}' only supports bindings that ensure the message version is '{1}.{2}'</param>
            <param name="param2">Parameter 2 for string: The formatter of type '{0}' only supports bindings that ensure the message version is '{1}.{2}'</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HttpMessageFormatterNullMessage(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The formatter of type '{0}' received a null '{1}' in '{2}'.</summary>
            <param name="param0">Parameter 0 for string: The formatter of type '{0}' received a null '{1}' in '{2}'.</param>
            <param name="param1">Parameter 1 for string: The formatter of type '{0}' received a null '{1}' in '{2}'.</param>
            <param name="param2">Parameter 2 for string: The formatter of type '{0}' received a null '{1}' in '{2}'.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.MultipleTypeParametersForHttpContentType(System.Object)">
            <summary>Gets localized string like: Unable to determine the type of the content because the type '{0}' has two or more type parameters.</summary>
            <param name="param0">Parameter 0 for string: Unable to determine the type of the content because the type '{0}' has two or more type parameters.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.NullValueInArrayParameterFromGetParameters(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The {0} '{1}' of service operation '{2}' returned a collection from the method '{3}' that had a null value at index '{4}'.</summary>
            <param name="param0">Parameter 0 for string: The {0} '{1}' of service operation '{2}' returned a collection from the method '{3}' that had a null value at index '{4}'.</param>
            <param name="param1">Parameter 1 for string: The {0} '{1}' of service operation '{2}' returned a collection from the method '{3}' that had a null value at index '{4}'.</param>
            <param name="param2">Parameter 2 for string: The {0} '{1}' of service operation '{2}' returned a collection from the method '{3}' that had a null value at index '{4}'.</param>
            <param name="param3">Parameter 3 for string: The {0} '{1}' of service operation '{2}' returned a collection from the method '{3}' that had a null value at index '{4}'.</param>
            <param name="param4">Parameter 4 for string: The {0} '{1}' of service operation '{2}' returned a collection from the method '{3}' that had a null value at index '{4}'.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HttpOperationHandlerReceivedWrongNumberOfValues(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The {0} '{1}' of service operation '{2}' expected '{3}' values but received '{4}' values.</summary>
            <param name="param0">Parameter 0 for string: The {0} '{1}' of service operation '{2}' expected '{3}' values but received '{4}' values.</param>
            <param name="param1">Parameter 1 for string: The {0} '{1}' of service operation '{2}' expected '{3}' values but received '{4}' values.</param>
            <param name="param2">Parameter 2 for string: The {0} '{1}' of service operation '{2}' expected '{3}' values but received '{4}' values.</param>
            <param name="param3">Parameter 3 for string: The {0} '{1}' of service operation '{2}' expected '{3}' values but received '{4}' values.</param>
            <param name="param4">Parameter 4 for string: The {0} '{1}' of service operation '{2}' expected '{3}' values but received '{4}' values.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HttpOperationHandlerProducedWrongNumberOfValues(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The {0} '{1}' of service operation '{2}' was expected to return '{3}' values but returned '{4}' values.</summary>
            <param name="param0">Parameter 0 for string: The {0} '{1}' of service operation '{2}' was expected to return '{3}' values but returned '{4}' values.</param>
            <param name="param1">Parameter 1 for string: The {0} '{1}' of service operation '{2}' was expected to return '{3}' values but returned '{4}' values.</param>
            <param name="param2">Parameter 2 for string: The {0} '{1}' of service operation '{2}' was expected to return '{3}' values but returned '{4}' values.</param>
            <param name="param3">Parameter 3 for string: The {0} '{1}' of service operation '{2}' was expected to return '{3}' values but returned '{4}' values.</param>
            <param name="param4">Parameter 4 for string: The {0} '{1}' of service operation '{2}' was expected to return '{3}' values but returned '{4}' values.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HttpOperationHandlerReceivedWrongType(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The {0} '{1}' of service operation '{2}' expected a value assignable to type '{3}' for input parameter '{4}' but received a value of type '{5}'.</summary>
            <param name="param0">Parameter 0 for string: The {0} '{1}' of service operation '{2}' expected a value assignable to type '{3}' for input parameter '{4}' but received a value of type '{5}'.</param>
            <param name="param1">Parameter 1 for string: The {0} '{1}' of service operation '{2}' expected a value assignable to type '{3}' for input parameter '{4}' but received a value of type '{5}'.</param>
            <param name="param2">Parameter 2 for string: The {0} '{1}' of service operation '{2}' expected a value assignable to type '{3}' for input parameter '{4}' but received a value of type '{5}'.</param>
            <param name="param3">Parameter 3 for string: The {0} '{1}' of service operation '{2}' expected a value assignable to type '{3}' for input parameter '{4}' but received a value of type '{5}'.</param>
            <param name="param4">Parameter 4 for string: The {0} '{1}' of service operation '{2}' expected a value assignable to type '{3}' for input parameter '{4}' but received a value of type '{5}'.</param>
            <param name="param5">Parameter 5 for string: The {0} '{1}' of service operation '{2}' expected a value assignable to type '{3}' for input parameter '{4}' but received a value of type '{5}'.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HttpOperationHandlerProducedWrongType(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The {0} '{1}' of service operation '{2}' was expected to return a value of type '{3}' assignable to the '{4}' output parameter but returned a value of type '{5}'.</summary>
            <param name="param0">Parameter 0 for string: The {0} '{1}' of service operation '{2}' was expected to return a value of type '{3}' assignable to the '{4}' output parameter but returned a value of type '{5}'.</param>
            <param name="param1">Parameter 1 for string: The {0} '{1}' of service operation '{2}' was expected to return a value of type '{3}' assignable to the '{4}' output parameter but returned a value of type '{5}'.</param>
            <param name="param2">Parameter 2 for string: The {0} '{1}' of service operation '{2}' was expected to return a value of type '{3}' assignable to the '{4}' output parameter but returned a value of type '{5}'.</param>
            <param name="param3">Parameter 3 for string: The {0} '{1}' of service operation '{2}' was expected to return a value of type '{3}' assignable to the '{4}' output parameter but returned a value of type '{5}'.</param>
            <param name="param4">Parameter 4 for string: The {0} '{1}' of service operation '{2}' was expected to return a value of type '{3}' assignable to the '{4}' output parameter but returned a value of type '{5}'.</param>
            <param name="param5">Parameter 5 for string: The {0} '{1}' of service operation '{2}' was expected to return a value of type '{3}' assignable to the '{4}' output parameter but returned a value of type '{5}'.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HttpOperationHandlerFailedToConvertInputString(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The {0} '{1}' of service operation '{2}' expected a string value that could be parsed as a '{3}' for input parameter '{4}' but the parsing failed with the message: {5} See the inner exception for more details.</summary>
            <param name="param0">Parameter 0 for string: The {0} '{1}' of service operation '{2}' expected a string value that could be parsed as a '{3}' for input parameter '{4}' but the parsing failed with the message: {5} See the inner exception for more details.</param>
            <param name="param1">Parameter 1 for string: The {0} '{1}' of service operation '{2}' expected a string value that could be parsed as a '{3}' for input parameter '{4}' but the parsing failed with the message: {5} See the inner exception for more details.</param>
            <param name="param2">Parameter 2 for string: The {0} '{1}' of service operation '{2}' expected a string value that could be parsed as a '{3}' for input parameter '{4}' but the parsing failed with the message: {5} See the inner exception for more details.</param>
            <param name="param3">Parameter 3 for string: The {0} '{1}' of service operation '{2}' expected a string value that could be parsed as a '{3}' for input parameter '{4}' but the parsing failed with the message: {5} See the inner exception for more details.</param>
            <param name="param4">Parameter 4 for string: The {0} '{1}' of service operation '{2}' expected a string value that could be parsed as a '{3}' for input parameter '{4}' but the parsing failed with the message: {5} See the inner exception for more details.</param>
            <param name="param5">Parameter 5 for string: The {0} '{1}' of service operation '{2}' expected a string value that could be parsed as a '{3}' for input parameter '{4}' but the parsing failed with the message: {5} See the inner exception for more details.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HttpOperationHandlerFailedToGetInnerContent(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The {0} '{1}' of service operation '{2}' expected a value of type '{3}' for input parameter '{4}' but retrieving the value from the received '{5}' instance failed with the following message: {6} See the inner exception for more details.</summary>
            <param name="param0">Parameter 0 for string: The {0} '{1}' of service operation '{2}' expected a value of type '{3}' for input parameter '{4}' but retrieving the value from the received '{5}' instance failed with the following message: {6} See the inner exception for more details.</param>
            <param name="param1">Parameter 1 for string: The {0} '{1}' of service operation '{2}' expected a value of type '{3}' for input parameter '{4}' but retrieving the value from the received '{5}' instance failed with the following message: {6} See the inner exception for more details.</param>
            <param name="param2">Parameter 2 for string: The {0} '{1}' of service operation '{2}' expected a value of type '{3}' for input parameter '{4}' but retrieving the value from the received '{5}' instance failed with the following message: {6} See the inner exception for more details.</param>
            <param name="param3">Parameter 3 for string: The {0} '{1}' of service operation '{2}' expected a value of type '{3}' for input parameter '{4}' but retrieving the value from the received '{5}' instance failed with the following message: {6} See the inner exception for more details.</param>
            <param name="param4">Parameter 4 for string: The {0} '{1}' of service operation '{2}' expected a value of type '{3}' for input parameter '{4}' but retrieving the value from the received '{5}' instance failed with the following message: {6} See the inner exception for more details.</param>
            <param name="param5">Parameter 5 for string: The {0} '{1}' of service operation '{2}' expected a value of type '{3}' for input parameter '{4}' but retrieving the value from the received '{5}' instance failed with the following message: {6} See the inner exception for more details.</param>
            <param name="param6">Parameter 6 for string: The {0} '{1}' of service operation '{2}' expected a value of type '{3}' for input parameter '{4}' but retrieving the value from the received '{5}' instance failed with the following message: {6} See the inner exception for more details.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.ServiceOperationReceivedWrongNumberOfValues(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The service operation '{0}' expected '{1}' values but received '{2}' values.</summary>
            <param name="param0">Parameter 0 for string: The service operation '{0}' expected '{1}' values but received '{2}' values.</param>
            <param name="param1">Parameter 1 for string: The service operation '{0}' expected '{1}' values but received '{2}' values.</param>
            <param name="param2">Parameter 2 for string: The service operation '{0}' expected '{1}' values but received '{2}' values.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.ServiceOperationProducedWrongNumberOfValues(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The service operation '{0}' was expected to return '{1}' values but returned '{2}' values.</summary>
            <param name="param0">Parameter 0 for string: The service operation '{0}' was expected to return '{1}' values but returned '{2}' values.</param>
            <param name="param1">Parameter 1 for string: The service operation '{0}' was expected to return '{1}' values but returned '{2}' values.</param>
            <param name="param2">Parameter 2 for string: The service operation '{0}' was expected to return '{1}' values but returned '{2}' values.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.ServiceOperationReceivedWrongType(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The service operation '{0}' expected a value assignable to type '{1}' for input parameter '{2}' but received a value of type '{3}'.</summary>
            <param name="param0">Parameter 0 for string: The service operation '{0}' expected a value assignable to type '{1}' for input parameter '{2}' but received a value of type '{3}'.</param>
            <param name="param1">Parameter 1 for string: The service operation '{0}' expected a value assignable to type '{1}' for input parameter '{2}' but received a value of type '{3}'.</param>
            <param name="param2">Parameter 2 for string: The service operation '{0}' expected a value assignable to type '{1}' for input parameter '{2}' but received a value of type '{3}'.</param>
            <param name="param3">Parameter 3 for string: The service operation '{0}' expected a value assignable to type '{1}' for input parameter '{2}' but received a value of type '{3}'.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.ServiceOperationProducedWrongType(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The service operation '{0}' was expected to return a value of type '{1}' assignable to the '{2}' output parameter but returned a value of type '{3}'.</summary>
            <param name="param0">Parameter 0 for string: The service operation '{0}' was expected to return a value of type '{1}' assignable to the '{2}' output parameter but returned a value of type '{3}'.</param>
            <param name="param1">Parameter 1 for string: The service operation '{0}' was expected to return a value of type '{1}' assignable to the '{2}' output parameter but returned a value of type '{3}'.</param>
            <param name="param2">Parameter 2 for string: The service operation '{0}' was expected to return a value of type '{1}' assignable to the '{2}' output parameter but returned a value of type '{3}'.</param>
            <param name="param3">Parameter 3 for string: The service operation '{0}' was expected to return a value of type '{1}' assignable to the '{2}' output parameter but returned a value of type '{3}'.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.ServiceOperationFailedToConvertInputString(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The service operation '{0}' expected a string value that could be parsed as a '{1}' for input parameter '{2}' but the parsing failed with the message: {3} See the inner exception for more details.</summary>
            <param name="param0">Parameter 0 for string: The service operation '{0}' expected a string value that could be parsed as a '{1}' for input parameter '{2}' but the parsing failed with the message: {3} See the inner exception for more details.</param>
            <param name="param1">Parameter 1 for string: The service operation '{0}' expected a string value that could be parsed as a '{1}' for input parameter '{2}' but the parsing failed with the message: {3} See the inner exception for more details.</param>
            <param name="param2">Parameter 2 for string: The service operation '{0}' expected a string value that could be parsed as a '{1}' for input parameter '{2}' but the parsing failed with the message: {3} See the inner exception for more details.</param>
            <param name="param3">Parameter 3 for string: The service operation '{0}' expected a string value that could be parsed as a '{1}' for input parameter '{2}' but the parsing failed with the message: {3} See the inner exception for more details.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.ServiceOperationFailedToGetInnerContent(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The service operation '{0}' expected a value of type '{1}' for input parameter '{2}' but retrieving the value from the received '{3}' instance failed with the following message: {4} See the inner exception for more details.</summary>
            <param name="param0">Parameter 0 for string: The service operation '{0}' expected a value of type '{1}' for input parameter '{2}' but retrieving the value from the received '{3}' instance failed with the following message: {4} See the inner exception for more details.</param>
            <param name="param1">Parameter 1 for string: The service operation '{0}' expected a value of type '{1}' for input parameter '{2}' but retrieving the value from the received '{3}' instance failed with the following message: {4} See the inner exception for more details.</param>
            <param name="param2">Parameter 2 for string: The service operation '{0}' expected a value of type '{1}' for input parameter '{2}' but retrieving the value from the received '{3}' instance failed with the following message: {4} See the inner exception for more details.</param>
            <param name="param3">Parameter 3 for string: The service operation '{0}' expected a value of type '{1}' for input parameter '{2}' but retrieving the value from the received '{3}' instance failed with the following message: {4} See the inner exception for more details.</param>
            <param name="param4">Parameter 4 for string: The service operation '{0}' expected a value of type '{1}' for input parameter '{2}' but retrieving the value from the received '{3}' instance failed with the following message: {4} See the inner exception for more details.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.InvalidRequestContentParameter(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The service operation '{0}' has an input parameter of type '{1}' associated with the request message content that is not supported by the {2}.</summary>
            <param name="param0">Parameter 0 for string: The service operation '{0}' has an input parameter of type '{1}' associated with the request message content that is not supported by the {2}.</param>
            <param name="param1">Parameter 1 for string: The service operation '{0}' has an input parameter of type '{1}' associated with the request message content that is not supported by the {2}.</param>
            <param name="param2">Parameter 2 for string: The service operation '{0}' has an input parameter of type '{1}' associated with the request message content that is not supported by the {2}.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.InvalidReturnValueContentParameter(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The service operation '{0}' has a return value of type '{1}' associated with the request message content that is not supported by the {2}.</summary>
            <param name="param0">Parameter 0 for string: The service operation '{0}' has a return value of type '{1}' associated with the request message content that is not supported by the {2}.</param>
            <param name="param1">Parameter 1 for string: The service operation '{0}' has a return value of type '{1}' associated with the request message content that is not supported by the {2}.</param>
            <param name="param2">Parameter 2 for string: The service operation '{0}' has a return value of type '{1}' associated with the request message content that is not supported by the {2}.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.InvalidResponseContentParameter(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The service operation '{0}' has an output parameter of type '{1}' associated with the request message content that is not supported by the {2}.</summary>
            <param name="param0">Parameter 0 for string: The service operation '{0}' has an output parameter of type '{1}' associated with the request message content that is not supported by the {2}.</param>
            <param name="param1">Parameter 1 for string: The service operation '{0}' has an output parameter of type '{1}' associated with the request message content that is not supported by the {2}.</param>
            <param name="param2">Parameter 2 for string: The service operation '{0}' has an output parameter of type '{1}' associated with the request message content that is not supported by the {2}.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.UnknownRequestContentParameter(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The {0} is unable to determine the input parameter that should be associated with the request message content for service operation '{1}'. If the operation does not expect content in the request message use the HTTP GET method with the operation. Otherwise, ensure that one input parameter either has it's {2} property set to '{3}' or is a type that is assignable to one of the following: {4}, {5}, {6} or {7}.</summary>
            <param name="param0">Parameter 0 for string: The {0} is unable to determine the input parameter that should be associated with the request message content for service operation '{1}'. If the operation does not expect content in the request message use the HTTP GET method with the operation. Otherwise, ensure that one input parameter either has it's {2} property set to '{3}' or is a type that is assignable to one of the following: {4}, {5}, {6} or {7}.</param>
            <param name="param1">Parameter 1 for string: The {0} is unable to determine the input parameter that should be associated with the request message content for service operation '{1}'. If the operation does not expect content in the request message use the HTTP GET method with the operation. Otherwise, ensure that one input parameter either has it's {2} property set to '{3}' or is a type that is assignable to one of the following: {4}, {5}, {6} or {7}.</param>
            <param name="param2">Parameter 2 for string: The {0} is unable to determine the input parameter that should be associated with the request message content for service operation '{1}'. If the operation does not expect content in the request message use the HTTP GET method with the operation. Otherwise, ensure that one input parameter either has it's {2} property set to '{3}' or is a type that is assignable to one of the following: {4}, {5}, {6} or {7}.</param>
            <param name="param3">Parameter 3 for string: The {0} is unable to determine the input parameter that should be associated with the request message content for service operation '{1}'. If the operation does not expect content in the request message use the HTTP GET method with the operation. Otherwise, ensure that one input parameter either has it's {2} property set to '{3}' or is a type that is assignable to one of the following: {4}, {5}, {6} or {7}.</param>
            <param name="param4">Parameter 4 for string: The {0} is unable to determine the input parameter that should be associated with the request message content for service operation '{1}'. If the operation does not expect content in the request message use the HTTP GET method with the operation. Otherwise, ensure that one input parameter either has it's {2} property set to '{3}' or is a type that is assignable to one of the following: {4}, {5}, {6} or {7}.</param>
            <param name="param5">Parameter 5 for string: The {0} is unable to determine the input parameter that should be associated with the request message content for service operation '{1}'. If the operation does not expect content in the request message use the HTTP GET method with the operation. Otherwise, ensure that one input parameter either has it's {2} property set to '{3}' or is a type that is assignable to one of the following: {4}, {5}, {6} or {7}.</param>
            <param name="param6">Parameter 6 for string: The {0} is unable to determine the input parameter that should be associated with the request message content for service operation '{1}'. If the operation does not expect content in the request message use the HTTP GET method with the operation. Otherwise, ensure that one input parameter either has it's {2} property set to '{3}' or is a type that is assignable to one of the following: {4}, {5}, {6} or {7}.</param>
            <param name="param7">Parameter 7 for string: The {0} is unable to determine the input parameter that should be associated with the request message content for service operation '{1}'. If the operation does not expect content in the request message use the HTTP GET method with the operation. Otherwise, ensure that one input parameter either has it's {2} property set to '{3}' or is a type that is assignable to one of the following: {4}, {5}, {6} or {7}.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.MultipleRequestContentParameters(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The {0} only supports service operations that have a single input parameter associated with the request message content.  Service operation '{1}' has '{2}' input parameters associated with the content of the request message:</summary>
            <param name="param0">Parameter 0 for string: The {0} only supports service operations that have a single input parameter associated with the request message content.  Service operation '{1}' has '{2}' input parameters associated with the content of the request message:</param>
            <param name="param1">Parameter 1 for string: The {0} only supports service operations that have a single input parameter associated with the request message content.  Service operation '{1}' has '{2}' input parameters associated with the content of the request message:</param>
            <param name="param2">Parameter 2 for string: The {0} only supports service operations that have a single input parameter associated with the request message content.  Service operation '{1}' has '{2}' input parameters associated with the content of the request message:</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.RequestParameterWithIsContentParameterSet(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Parameter '{0}' is associated with the request message content because it's {1} property is set to '{2}';</summary>
            <param name="param0">Parameter 0 for string: Parameter '{0}' is associated with the request message content because it's {1} property is set to '{2}';</param>
            <param name="param1">Parameter 1 for string: Parameter '{0}' is associated with the request message content because it's {1} property is set to '{2}';</param>
            <param name="param2">Parameter 2 for string: Parameter '{0}' is associated with the request message content because it's {1} property is set to '{2}';</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.RequestParameterWithContentType(System.Object,System.Object)">
            <summary>Gets localized string like: Parameter '{0}' is associated with the request message content because it is of type '{1}';</summary>
            <param name="param0">Parameter 0 for string: Parameter '{0}' is associated with the request message content because it is of type '{1}';</param>
            <param name="param1">Parameter 1 for string: Parameter '{0}' is associated with the request message content because it is of type '{1}';</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.MultipleResponseContentParameters(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The {0} only supports service operations that have a return value or single output parameter associated with the response message content.  Service operation '{1}' has '{2}' outputs associated with the content of the response message:</summary>
            <param name="param0">Parameter 0 for string: The {0} only supports service operations that have a return value or single output parameter associated with the response message content.  Service operation '{1}' has '{2}' outputs associated with the content of the response message:</param>
            <param name="param1">Parameter 1 for string: The {0} only supports service operations that have a return value or single output parameter associated with the response message content.  Service operation '{1}' has '{2}' outputs associated with the content of the response message:</param>
            <param name="param2">Parameter 2 for string: The {0} only supports service operations that have a return value or single output parameter associated with the response message content.  Service operation '{1}' has '{2}' outputs associated with the content of the response message:</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.ResponseParameterWithIsContentParameterSet(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Parameter '{0}' is associated with the response message content because it's {1} property is set to '{2}';</summary>
            <param name="param0">Parameter 0 for string: Parameter '{0}' is associated with the response message content because it's {1} property is set to '{2}';</param>
            <param name="param1">Parameter 1 for string: Parameter '{0}' is associated with the response message content because it's {1} property is set to '{2}';</param>
            <param name="param2">Parameter 2 for string: Parameter '{0}' is associated with the response message content because it's {1} property is set to '{2}';</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.ResponseParameterWithContentType(System.Object,System.Object)">
            <summary>Gets localized string like: Parameter '{0}' is associated with the response message content because it is of type '{1}';</summary>
            <param name="param0">Parameter 0 for string: Parameter '{0}' is associated with the response message content because it is of type '{1}';</param>
            <param name="param1">Parameter 1 for string: Parameter '{0}' is associated with the response message content because it is of type '{1}';</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.ReturnValueWithIsContentParameterSet(System.Object,System.Object)">
            <summary>Gets localized string like: The return value is associated with the response message content because it's {0} property is set to '{1}';</summary>
            <param name="param0">Parameter 0 for string: The return value is associated with the response message content because it's {0} property is set to '{1}';</param>
            <param name="param1">Parameter 1 for string: The return value is associated with the response message content because it's {0} property is set to '{1}';</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.ReturnValueWithContentType(System.Object)">
            <summary>Gets localized string like: The return value is associated with the response message content because it is of type '{0}';</summary>
            <param name="param0">Parameter 0 for string: The return value is associated with the response message content because it is of type '{0}';</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.RequestHandlerTypeOnlyOutputParameter(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Request {0} '{1}' output parameter '{2}' of type '{3}';</summary>
            <param name="param0">Parameter 0 for string: Request {0} '{1}' output parameter '{2}' of type '{3}';</param>
            <param name="param1">Parameter 1 for string: Request {0} '{1}' output parameter '{2}' of type '{3}';</param>
            <param name="param2">Parameter 2 for string: Request {0} '{1}' output parameter '{2}' of type '{3}';</param>
            <param name="param3">Parameter 3 for string: Request {0} '{1}' output parameter '{2}' of type '{3}';</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.ServiceOperationTypeOnlyOutputParameter(System.Object,System.Object)">
            <summary>Gets localized string like: Service operation output parameter '{0}' of type '{1}';</summary>
            <param name="param0">Parameter 0 for string: Service operation output parameter '{0}' of type '{1}';</param>
            <param name="param1">Parameter 1 for string: Service operation output parameter '{0}' of type '{1}';</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.ResponseHandlerTypeOnlyOutputParameter(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Response {0} '{1}' output parameter '{2}' of type '{3}';</summary>
            <param name="param0">Parameter 0 for string: Response {0} '{1}' output parameter '{2}' of type '{3}';</param>
            <param name="param1">Parameter 1 for string: Response {0} '{1}' output parameter '{2}' of type '{3}';</param>
            <param name="param2">Parameter 2 for string: Response {0} '{1}' output parameter '{2}' of type '{3}';</param>
            <param name="param3">Parameter 3 for string: Response {0} '{1}' output parameter '{2}' of type '{3}';</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.RequestHandlerWithNoPossibleBindingForNonStringConvertableType(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The request {0} '{1}' of service operation '{2}' will never receive a value for input parameter '{3}' of type '{4}'. Ensure that a request {0} that executes prior to the '{5}' {0} has an output parameter with a type assignable to '{4}'.</summary>
            <param name="param0">Parameter 0 for string: The request {0} '{1}' of service operation '{2}' will never receive a value for input parameter '{3}' of type '{4}'. Ensure that a request {0} that executes prior to the '{5}' {0} has an output parameter with a type assignable to '{4}'.</param>
            <param name="param1">Parameter 1 for string: The request {0} '{1}' of service operation '{2}' will never receive a value for input parameter '{3}' of type '{4}'. Ensure that a request {0} that executes prior to the '{5}' {0} has an output parameter with a type assignable to '{4}'.</param>
            <param name="param2">Parameter 2 for string: The request {0} '{1}' of service operation '{2}' will never receive a value for input parameter '{3}' of type '{4}'. Ensure that a request {0} that executes prior to the '{5}' {0} has an output parameter with a type assignable to '{4}'.</param>
            <param name="param3">Parameter 3 for string: The request {0} '{1}' of service operation '{2}' will never receive a value for input parameter '{3}' of type '{4}'. Ensure that a request {0} that executes prior to the '{5}' {0} has an output parameter with a type assignable to '{4}'.</param>
            <param name="param4">Parameter 4 for string: The request {0} '{1}' of service operation '{2}' will never receive a value for input parameter '{3}' of type '{4}'. Ensure that a request {0} that executes prior to the '{5}' {0} has an output parameter with a type assignable to '{4}'.</param>
            <param name="param5">Parameter 5 for string: The request {0} '{1}' of service operation '{2}' will never receive a value for input parameter '{3}' of type '{4}'. Ensure that a request {0} that executes prior to the '{5}' {0} has an output parameter with a type assignable to '{4}'.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.RequestHandlerWithNoPossibleBindingForStringConvertableType(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The request {0} '{1}' of service operation '{2}' will never receive a value for input parameter '{3}' of type '{4}'. Ensure that a request {0} that executes prior to the '{5}' HttpOperationHandler has an output parameter with a type assignable to '{4}' or that the output parameter has the name '{3}' and provides a string value that can be parsed as a '{4}'.</summary>
            <param name="param0">Parameter 0 for string: The request {0} '{1}' of service operation '{2}' will never receive a value for input parameter '{3}' of type '{4}'. Ensure that a request {0} that executes prior to the '{5}' HttpOperationHandler has an output parameter with a type assignable to '{4}' or that the output parameter has the name '{3}' and provides a string value that can be parsed as a '{4}'.</param>
            <param name="param1">Parameter 1 for string: The request {0} '{1}' of service operation '{2}' will never receive a value for input parameter '{3}' of type '{4}'. Ensure that a request {0} that executes prior to the '{5}' HttpOperationHandler has an output parameter with a type assignable to '{4}' or that the output parameter has the name '{3}' and provides a string value that can be parsed as a '{4}'.</param>
            <param name="param2">Parameter 2 for string: The request {0} '{1}' of service operation '{2}' will never receive a value for input parameter '{3}' of type '{4}'. Ensure that a request {0} that executes prior to the '{5}' HttpOperationHandler has an output parameter with a type assignable to '{4}' or that the output parameter has the name '{3}' and provides a string value that can be parsed as a '{4}'.</param>
            <param name="param3">Parameter 3 for string: The request {0} '{1}' of service operation '{2}' will never receive a value for input parameter '{3}' of type '{4}'. Ensure that a request {0} that executes prior to the '{5}' HttpOperationHandler has an output parameter with a type assignable to '{4}' or that the output parameter has the name '{3}' and provides a string value that can be parsed as a '{4}'.</param>
            <param name="param4">Parameter 4 for string: The request {0} '{1}' of service operation '{2}' will never receive a value for input parameter '{3}' of type '{4}'. Ensure that a request {0} that executes prior to the '{5}' HttpOperationHandler has an output parameter with a type assignable to '{4}' or that the output parameter has the name '{3}' and provides a string value that can be parsed as a '{4}'.</param>
            <param name="param5">Parameter 5 for string: The request {0} '{1}' of service operation '{2}' will never receive a value for input parameter '{3}' of type '{4}'. Ensure that a request {0} that executes prior to the '{5}' HttpOperationHandler has an output parameter with a type assignable to '{4}' or that the output parameter has the name '{3}' and provides a string value that can be parsed as a '{4}'.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.RequestHandlerWithMultipleTypeOnlyBindings(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The request {0} '{1}' of service operation '{2}' will receive a value for input parameter '{3}' of type '{4}' from these multiple sources:</summary>
            <param name="param0">Parameter 0 for string: The request {0} '{1}' of service operation '{2}' will receive a value for input parameter '{3}' of type '{4}' from these multiple sources:</param>
            <param name="param1">Parameter 1 for string: The request {0} '{1}' of service operation '{2}' will receive a value for input parameter '{3}' of type '{4}' from these multiple sources:</param>
            <param name="param2">Parameter 2 for string: The request {0} '{1}' of service operation '{2}' will receive a value for input parameter '{3}' of type '{4}' from these multiple sources:</param>
            <param name="param3">Parameter 3 for string: The request {0} '{1}' of service operation '{2}' will receive a value for input parameter '{3}' of type '{4}' from these multiple sources:</param>
            <param name="param4">Parameter 4 for string: The request {0} '{1}' of service operation '{2}' will receive a value for input parameter '{3}' of type '{4}' from these multiple sources:</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.ServiceOperationWithNoPossibleBindingForNonStringConvertableType(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The service operation '{0}' will never receive a value for the input parameter '{1}' of type '{2}'. Ensure that a request {3} has an output parameter with a type assignable to '{2}'.</summary>
            <param name="param0">Parameter 0 for string: The service operation '{0}' will never receive a value for the input parameter '{1}' of type '{2}'. Ensure that a request {3} has an output parameter with a type assignable to '{2}'.</param>
            <param name="param1">Parameter 1 for string: The service operation '{0}' will never receive a value for the input parameter '{1}' of type '{2}'. Ensure that a request {3} has an output parameter with a type assignable to '{2}'.</param>
            <param name="param2">Parameter 2 for string: The service operation '{0}' will never receive a value for the input parameter '{1}' of type '{2}'. Ensure that a request {3} has an output parameter with a type assignable to '{2}'.</param>
            <param name="param3">Parameter 3 for string: The service operation '{0}' will never receive a value for the input parameter '{1}' of type '{2}'. Ensure that a request {3} has an output parameter with a type assignable to '{2}'.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.ServiceOperationWithNoPossibleBindingForStringConvertableType(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The service operation '{0}' will never receive a value for the input parameter '{1}' of type '{2}'. Ensure that a request {3} has an output parameter with a type assignable to '{2}' or that the output parameter has the name '{1}' and provides a string value that can be parsed as a '{2}'.</summary>
            <param name="param0">Parameter 0 for string: The service operation '{0}' will never receive a value for the input parameter '{1}' of type '{2}'. Ensure that a request {3} has an output parameter with a type assignable to '{2}' or that the output parameter has the name '{1}' and provides a string value that can be parsed as a '{2}'.</param>
            <param name="param1">Parameter 1 for string: The service operation '{0}' will never receive a value for the input parameter '{1}' of type '{2}'. Ensure that a request {3} has an output parameter with a type assignable to '{2}' or that the output parameter has the name '{1}' and provides a string value that can be parsed as a '{2}'.</param>
            <param name="param2">Parameter 2 for string: The service operation '{0}' will never receive a value for the input parameter '{1}' of type '{2}'. Ensure that a request {3} has an output parameter with a type assignable to '{2}' or that the output parameter has the name '{1}' and provides a string value that can be parsed as a '{2}'.</param>
            <param name="param3">Parameter 3 for string: The service operation '{0}' will never receive a value for the input parameter '{1}' of type '{2}'. Ensure that a request {3} has an output parameter with a type assignable to '{2}' or that the output parameter has the name '{1}' and provides a string value that can be parsed as a '{2}'.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.ServiceOperationWithMultipleTypeOnlyBindings(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The service operation '{0}' will receive a value for input parameter '{1}' of type '{2}' from these multiple {3} sources:</summary>
            <param name="param0">Parameter 0 for string: The service operation '{0}' will receive a value for input parameter '{1}' of type '{2}' from these multiple {3} sources:</param>
            <param name="param1">Parameter 1 for string: The service operation '{0}' will receive a value for input parameter '{1}' of type '{2}' from these multiple {3} sources:</param>
            <param name="param2">Parameter 2 for string: The service operation '{0}' will receive a value for input parameter '{1}' of type '{2}' from these multiple {3} sources:</param>
            <param name="param3">Parameter 3 for string: The service operation '{0}' will receive a value for input parameter '{1}' of type '{2}' from these multiple {3} sources:</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.ResponseHandlerWithNoPossibleBindingForNonStringConvertableType(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The response {0} '{1}' of service operation '{2}' will never receive a value for the input parameter '{3}' of type '{4}'. Ensure that a request {0}, the service operation, or a response HttpOperationHandler that executes prior to the '{5}' {0} has an output parameter with a type assignable to '{4}'.</summary>
            <param name="param0">Parameter 0 for string: The response {0} '{1}' of service operation '{2}' will never receive a value for the input parameter '{3}' of type '{4}'. Ensure that a request {0}, the service operation, or a response HttpOperationHandler that executes prior to the '{5}' {0} has an output parameter with a type assignable to '{4}'.</param>
            <param name="param1">Parameter 1 for string: The response {0} '{1}' of service operation '{2}' will never receive a value for the input parameter '{3}' of type '{4}'. Ensure that a request {0}, the service operation, or a response HttpOperationHandler that executes prior to the '{5}' {0} has an output parameter with a type assignable to '{4}'.</param>
            <param name="param2">Parameter 2 for string: The response {0} '{1}' of service operation '{2}' will never receive a value for the input parameter '{3}' of type '{4}'. Ensure that a request {0}, the service operation, or a response HttpOperationHandler that executes prior to the '{5}' {0} has an output parameter with a type assignable to '{4}'.</param>
            <param name="param3">Parameter 3 for string: The response {0} '{1}' of service operation '{2}' will never receive a value for the input parameter '{3}' of type '{4}'. Ensure that a request {0}, the service operation, or a response HttpOperationHandler that executes prior to the '{5}' {0} has an output parameter with a type assignable to '{4}'.</param>
            <param name="param4">Parameter 4 for string: The response {0} '{1}' of service operation '{2}' will never receive a value for the input parameter '{3}' of type '{4}'. Ensure that a request {0}, the service operation, or a response HttpOperationHandler that executes prior to the '{5}' {0} has an output parameter with a type assignable to '{4}'.</param>
            <param name="param5">Parameter 5 for string: The response {0} '{1}' of service operation '{2}' will never receive a value for the input parameter '{3}' of type '{4}'. Ensure that a request {0}, the service operation, or a response HttpOperationHandler that executes prior to the '{5}' {0} has an output parameter with a type assignable to '{4}'.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.ResponseHandlerWithNoPossibleBindingForStringConvertableType(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The response {0} '{1}' of service operation '{2}' will never receive a value for the input parameter '{3}' of type '{4}'. Ensure that at least one request {0}, the service operation, or response {0} that executes prior to the '{5}' {0} has an output parameter with a type assignable to '{4}'  or that the output parameter has the name '{3}' and provides a string value that can be parsed as a '{4}'.</summary>
            <param name="param0">Parameter 0 for string: The response {0} '{1}' of service operation '{2}' will never receive a value for the input parameter '{3}' of type '{4}'. Ensure that at least one request {0}, the service operation, or response {0} that executes prior to the '{5}' {0} has an output parameter with a type assignable to '{4}'  or that the output parameter has the name '{3}' and provides a string value that can be parsed as a '{4}'.</param>
            <param name="param1">Parameter 1 for string: The response {0} '{1}' of service operation '{2}' will never receive a value for the input parameter '{3}' of type '{4}'. Ensure that at least one request {0}, the service operation, or response {0} that executes prior to the '{5}' {0} has an output parameter with a type assignable to '{4}'  or that the output parameter has the name '{3}' and provides a string value that can be parsed as a '{4}'.</param>
            <param name="param2">Parameter 2 for string: The response {0} '{1}' of service operation '{2}' will never receive a value for the input parameter '{3}' of type '{4}'. Ensure that at least one request {0}, the service operation, or response {0} that executes prior to the '{5}' {0} has an output parameter with a type assignable to '{4}'  or that the output parameter has the name '{3}' and provides a string value that can be parsed as a '{4}'.</param>
            <param name="param3">Parameter 3 for string: The response {0} '{1}' of service operation '{2}' will never receive a value for the input parameter '{3}' of type '{4}'. Ensure that at least one request {0}, the service operation, or response {0} that executes prior to the '{5}' {0} has an output parameter with a type assignable to '{4}'  or that the output parameter has the name '{3}' and provides a string value that can be parsed as a '{4}'.</param>
            <param name="param4">Parameter 4 for string: The response {0} '{1}' of service operation '{2}' will never receive a value for the input parameter '{3}' of type '{4}'. Ensure that at least one request {0}, the service operation, or response {0} that executes prior to the '{5}' {0} has an output parameter with a type assignable to '{4}'  or that the output parameter has the name '{3}' and provides a string value that can be parsed as a '{4}'.</param>
            <param name="param5">Parameter 5 for string: The response {0} '{1}' of service operation '{2}' will never receive a value for the input parameter '{3}' of type '{4}'. Ensure that at least one request {0}, the service operation, or response {0} that executes prior to the '{5}' {0} has an output parameter with a type assignable to '{4}'  or that the output parameter has the name '{3}' and provides a string value that can be parsed as a '{4}'.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.ResponseHandlerWithMultipleTypeOnlyBindings(System.Object,System.Object,System.Object,System.Object,System.Object)">
             <summary>Gets localized string like: The response {0} '{1}' for service operation '{2}' 
            will receive a value for input parameter '{3}' of type '{4}' from these multiple sources:</summary>
             <param name="param0">Parameter 0 for string: The response {0} '{1}' for service operation '{2}' 
            will receive a value for input parameter '{3}' of type '{4}' from these multiple sources:</param>
             <param name="param1">Parameter 1 for string: The response {0} '{1}' for service operation '{2}' 
            will receive a value for input parameter '{3}' of type '{4}' from these multiple sources:</param>
             <param name="param2">Parameter 2 for string: The response {0} '{1}' for service operation '{2}' 
            will receive a value for input parameter '{3}' of type '{4}' from these multiple sources:</param>
             <param name="param3">Parameter 3 for string: The response {0} '{1}' for service operation '{2}' 
            will receive a value for input parameter '{3}' of type '{4}' from these multiple sources:</param>
             <param name="param4">Parameter 4 for string: The response {0} '{1}' for service operation '{2}' 
            will receive a value for input parameter '{3}' of type '{4}' from these multiple sources:</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.ResponseSinkHandlerWithNoHttpResponseMessageSource(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Neither the service operation nor any {0} instances will provide an {1} for service operation '{2}'. Ensure there is at least one {0} with an output parameter of type '{1}' or that the service operation returns an {1}.</summary>
            <param name="param0">Parameter 0 for string: Neither the service operation nor any {0} instances will provide an {1} for service operation '{2}'. Ensure there is at least one {0} with an output parameter of type '{1}' or that the service operation returns an {1}.</param>
            <param name="param1">Parameter 1 for string: Neither the service operation nor any {0} instances will provide an {1} for service operation '{2}'. Ensure there is at least one {0} with an output parameter of type '{1}' or that the service operation returns an {1}.</param>
            <param name="param2">Parameter 2 for string: Neither the service operation nor any {0} instances will provide an {1} for service operation '{2}'. Ensure there is at least one {0} with an output parameter of type '{1}' or that the service operation returns an {1}.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HttpResponseExceptionMessage(System.Object)">
            <summary>Gets localized string like: The response message returned by the {0} property of this exception should be immediately returned to the client.  No further handling of the request message is required.</summary>
            <param name="param0">Parameter 0 for string: The response message returned by the {0} property of this exception should be immediately returned to the client.  No further handling of the request message is required.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.InvalidParameterForContentHandler(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The {0} '{1}' of type '{2}' cannot be used with the {3}.</summary>
            <param name="param0">Parameter 0 for string: The {0} '{1}' of type '{2}' cannot be used with the {3}.</param>
            <param name="param1">Parameter 1 for string: The {0} '{1}' of type '{2}' cannot be used with the {3}.</param>
            <param name="param2">Parameter 2 for string: The {0} '{1}' of type '{2}' cannot be used with the {3}.</param>
            <param name="param3">Parameter 3 for string: The {0} '{1}' of type '{2}' cannot be used with the {3}.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.ValueConversionFailed(System.Object,System.Object)">
            <summary>Gets localized string like: A value of type '{0}' cannot be converted into a value of type '{1}'.</summary>
            <param name="param0">Parameter 0 for string: A value of type '{0}' cannot be converted into a value of type '{1}'.</param>
            <param name="param1">Parameter 1 for string: A value of type '{0}' cannot be converted into a value of type '{1}'.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.InvalidNullMediaRange(System.Object)">
            <summary>Gets localized string like: The null value at index '{0}' is not valid media range.</summary>
            <param name="param0">Parameter 0 for string: The null value at index '{0}' is not valid media range.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.MediaRangeAlreadyAdded(System.Object,System.Object)">
            <summary>Gets localized string like: The media range value '{0}' at index '{1}' has already been added to the collection of media ranges.</summary>
            <param name="param0">Parameter 0 for string: The media range value '{0}' at index '{1}' has already been added to the collection of media ranges.</param>
            <param name="param1">Parameter 1 for string: The media range value '{0}' at index '{1}' has already been added to the collection of media ranges.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.MediaRangeAlreadyMapped(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The media range '{0}' has already been mapped to media-type '{1}' and cannot be mapped to a second media-type of '{2}'.</summary>
            <param name="param0">Parameter 0 for string: The media range '{0}' has already been mapped to media-type '{1}' and cannot be mapped to a second media-type of '{2}'.</param>
            <param name="param1">Parameter 1 for string: The media range '{0}' has already been mapped to media-type '{1}' and cannot be mapped to a second media-type of '{2}'.</param>
            <param name="param2">Parameter 2 for string: The media range '{0}' has already been mapped to media-type '{1}' and cannot be mapped to a second media-type of '{2}'.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.UriTemplateDoesNotMatchUri(System.Object,System.Object)">
            <summary>Gets localized string like: The UriTemplate variable values cannot be determined for the uri '{0}' because it does not match the UriTemplate '{1}'.</summary>
            <param name="param0">Parameter 0 for string: The UriTemplate variable values cannot be determined for the uri '{0}' because it does not match the UriTemplate '{1}'.</param>
            <param name="param1">Parameter 1 for string: The UriTemplate variable values cannot be determined for the uri '{0}' because it does not match the UriTemplate '{1}'.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.DefaultEndpointsServiceWithMultipleContracts(System.Object,System.Object)">
            <summary>Gets localized string like: Service '{0}' implements multiple ServiceContract types, and no endpoints are defined in the configuration file.  The ServiceHost of type '{1}'  can set up default endpoints, but only if the service implements only a single ServiceContract. Either change the service to only implement a single ServiceContract, or else define endpoints for the service explicitly in the configuration file.</summary>
            <param name="param0">Parameter 0 for string: Service '{0}' implements multiple ServiceContract types, and no endpoints are defined in the configuration file.  The ServiceHost of type '{1}'  can set up default endpoints, but only if the service implements only a single ServiceContract. Either change the service to only implement a single ServiceContract, or else define endpoints for the service explicitly in the configuration file.</param>
            <param name="param1">Parameter 1 for string: Service '{0}' implements multiple ServiceContract types, and no endpoints are defined in the configuration file.  The ServiceHost of type '{1}'  can set up default endpoints, but only if the service implements only a single ServiceContract. Either change the service to only implement a single ServiceContract, or else define endpoints for the service explicitly in the configuration file.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.DefaultEndpointsServiceWithNoContract(System.Object,System.Object)">
            <summary>Gets localized string like: Service '{0}' does not implement a ServiceContract type.  The ServiceHost of type '{1}' cannot setup default endpoints if the service does not implement a ServiceContract type.</summary>
            <param name="param0">Parameter 0 for string: Service '{0}' does not implement a ServiceContract type.  The ServiceHost of type '{1}' cannot setup default endpoints if the service does not implement a ServiceContract type.</param>
            <param name="param1">Parameter 1 for string: Service '{0}' does not implement a ServiceContract type.  The ServiceHost of type '{1}' cannot setup default endpoints if the service does not implement a ServiceContract type.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HttpEndpointRequiresHttpBinding(System.Object,System.Object)">
            <summary>Gets localized string like: The standard endpoint of type '{0}' does not have a binding of type '{1}'.  The endpoint is initialized with the proper binding and it should not be removed or replaced.</summary>
            <param name="param0">Parameter 0 for string: The standard endpoint of type '{0}' does not have a binding of type '{1}'.  The endpoint is initialized with the proper binding and it should not be removed or replaced.</param>
            <param name="param1">Parameter 1 for string: The standard endpoint of type '{0}' does not have a binding of type '{1}'.  The endpoint is initialized with the proper binding and it should not be removed or replaced.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HttpBehaviorNotFoundWithEndpoint(System.Object,System.Object)">
            <summary>Gets localized string like: The standard endpoint of type '{0}' does not have a behavior of type '{1}'.  The endpoint is initialized with the proper behavior and it should not be removed or replaced.</summary>
            <param name="param0">Parameter 0 for string: The standard endpoint of type '{0}' does not have a behavior of type '{1}'.  The endpoint is initialized with the proper behavior and it should not be removed or replaced.</param>
            <param name="param1">Parameter 1 for string: The standard endpoint of type '{0}' does not have a behavior of type '{1}'.  The endpoint is initialized with the proper behavior and it should not be removed or replaced.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.ApplyClientBehaviorNotSupportedByHttpBehavior(System.Object)">
            <summary>Gets localized string like: '{0}' does not support ApplyClientBehavior.</summary>
            <param name="param0">Parameter 0 for string: '{0}' does not support ApplyClientBehavior.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HttpServiceEndpointCannotHaveMessageHeaders(System.Object)">
            <summary>Gets localized string like: The endpoint address '{0}' has message headers and is being used with a binding that's configured for message version None. Either change the endpoint address to not contain message headers or change the binding to be one that supports SOAP (for example, WSHttpBinding).</summary>
            <param name="param0">Parameter 0 for string: The endpoint address '{0}' has message headers and is being used with a binding that's configured for message version None. Either change the endpoint address to not contain message headers or change the binding to be one that supports SOAP (for example, WSHttpBinding).</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HttpBehaviorBindingRequired(System.Object)">
            <summary>Gets localized string like: The ServiceEndpoint for '{0}' must have a binding.</summary>
            <param name="param0">Parameter 0 for string: The ServiceEndpoint for '{0}' must have a binding.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.InvalidUriScheme(System.Object)">
            <summary>Gets localized string like: The endpoint at '{0}' must have a binding with a scheme of 'http' or 'https'.</summary>
            <param name="param0">Parameter 0 for string: The endpoint at '{0}' must have a binding with a scheme of 'http' or 'https'.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.InvalidMessageVersion(System.Object)">
            <summary>Gets localized string like: The endpoint at '{0}' must have a binding with a message version of 'MessageVersion.None'.</summary>
            <param name="param0">Parameter 0 for string: The endpoint at '{0}' must have a binding with a message version of 'MessageVersion.None'.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.InvalidManualAddressingValue(System.Object)">
            <summary>Gets localized string like: The endpoint at '{0}' must have a binding with a transport binding element that has 'ManualAddressing' set to true.</summary>
            <param name="param0">Parameter 0 for string: The endpoint at '{0}' must have a binding with a transport binding element that has 'ManualAddressing' set to true.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.InvalidMessageEncodingBindingElement(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The endpoint at '{0}' must have a binding with a '{1}' of type '{2}' or a '{3}' of type '{4}'.</summary>
            <param name="param0">Parameter 0 for string: The endpoint at '{0}' must have a binding with a '{1}' of type '{2}' or a '{3}' of type '{4}'.</param>
            <param name="param1">Parameter 1 for string: The endpoint at '{0}' must have a binding with a '{1}' of type '{2}' or a '{3}' of type '{4}'.</param>
            <param name="param2">Parameter 2 for string: The endpoint at '{0}' must have a binding with a '{1}' of type '{2}' or a '{3}' of type '{4}'.</param>
            <param name="param3">Parameter 3 for string: The endpoint at '{0}' must have a binding with a '{1}' of type '{2}' or a '{3}' of type '{4}'.</param>
            <param name="param4">Parameter 4 for string: The endpoint at '{0}' must have a binding with a '{1}' of type '{2}' or a '{3}' of type '{4}'.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.InvalidXmlSerializerFormatAttribute(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Operation '{0}' on contract '{1}, is invalid since it has an '{2}' configured with OperationUse Encoded or OperationStyle Rpc.</summary>
            <param name="param0">Parameter 0 for string: Operation '{0}' on contract '{1}, is invalid since it has an '{2}' configured with OperationUse Encoded or OperationStyle Rpc.</param>
            <param name="param1">Parameter 1 for string: Operation '{0}' on contract '{1}, is invalid since it has an '{2}' configured with OperationUse Encoded or OperationStyle Rpc.</param>
            <param name="param2">Parameter 2 for string: Operation '{0}' on contract '{1}, is invalid since it has an '{2}' configured with OperationUse Encoded or OperationStyle Rpc.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.InvalidOperationWithMessageHeaders(System.Object,System.Object)">
            <summary>Gets localized string like: Operation '{0}' on contract '{1}' is invalid since it has once or more message headers.</summary>
            <param name="param0">Parameter 0 for string: Operation '{0}' on contract '{1}' is invalid since it has once or more message headers.</param>
            <param name="param1">Parameter 1 for string: Operation '{0}' on contract '{1}' is invalid since it has once or more message headers.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.InvalidMessageContractParameter(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Operation '{0}' on contract '{1}' is invalid since it has a '{2}' parameter (of type '{3}').</summary>
            <param name="param0">Parameter 0 for string: Operation '{0}' on contract '{1}' is invalid since it has a '{2}' parameter (of type '{3}').</param>
            <param name="param1">Parameter 1 for string: Operation '{0}' on contract '{1}' is invalid since it has a '{2}' parameter (of type '{3}').</param>
            <param name="param2">Parameter 2 for string: Operation '{0}' on contract '{1}' is invalid since it has a '{2}' parameter (of type '{3}').</param>
            <param name="param3">Parameter 3 for string: Operation '{0}' on contract '{1}' is invalid since it has a '{2}' parameter (of type '{3}').</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.InvalidMessageParameter(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Operation '{0}' on contract '{1}' is invalid since it has message parameter '{2}' of type '{3}'.</summary>
            <param name="param0">Parameter 0 for string: Operation '{0}' on contract '{1}' is invalid since it has message parameter '{2}' of type '{3}'.</param>
            <param name="param1">Parameter 1 for string: Operation '{0}' on contract '{1}' is invalid since it has message parameter '{2}' of type '{3}'.</param>
            <param name="param2">Parameter 2 for string: Operation '{0}' on contract '{1}' is invalid since it has message parameter '{2}' of type '{3}'.</param>
            <param name="param3">Parameter 3 for string: Operation '{0}' on contract '{1}' is invalid since it has message parameter '{2}' of type '{3}'.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.MultipleWebAttributes(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Operation '{0}' in contract '{1}' has both '{2}' and '{3}'; only one can be present.</summary>
            <param name="param0">Parameter 0 for string: Operation '{0}' in contract '{1}' has both '{2}' and '{3}'; only one can be present.</param>
            <param name="param1">Parameter 1 for string: Operation '{0}' in contract '{1}' has both '{2}' and '{3}'; only one can be present.</param>
            <param name="param2">Parameter 2 for string: Operation '{0}' in contract '{1}' has both '{2}' and '{3}'; only one can be present.</param>
            <param name="param3">Parameter 3 for string: Operation '{0}' in contract '{1}' has both '{2}' and '{3}'; only one can be present.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.OperationCanNotReturnHttpReferenceType(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Operation '{0}' on contract '{1}' is invalid because it returns a value of type '{2}' or has an output parameter of type '{2}'.  To access '{2}' within an operation, include it as an input parameter and modify its properties.</summary>
            <param name="param0">Parameter 0 for string: Operation '{0}' on contract '{1}' is invalid because it returns a value of type '{2}' or has an output parameter of type '{2}'.  To access '{2}' within an operation, include it as an input parameter and modify its properties.</param>
            <param name="param1">Parameter 1 for string: Operation '{0}' on contract '{1}' is invalid because it returns a value of type '{2}' or has an output parameter of type '{2}'.  To access '{2}' within an operation, include it as an input parameter and modify its properties.</param>
            <param name="param2">Parameter 2 for string: Operation '{0}' on contract '{1}' is invalid because it returns a value of type '{2}' or has an output parameter of type '{2}'.  To access '{2}' within an operation, include it as an input parameter and modify its properties.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.OperationCanNotReturnXmlAndBeJson(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Operation '{0}' on contract '{1}' is invalid since it returns a {2} or has an output parameter of type {2} and has a response format explicitly set to Json.</summary>
            <param name="param0">Parameter 0 for string: Operation '{0}' on contract '{1}' is invalid since it returns a {2} or has an output parameter of type {2} and has a response format explicitly set to Json.</param>
            <param name="param1">Parameter 1 for string: Operation '{0}' on contract '{1}' is invalid since it returns a {2} or has an output parameter of type {2} and has a response format explicitly set to Json.</param>
            <param name="param2">Parameter 2 for string: Operation '{0}' on contract '{1}' is invalid since it returns a {2} or has an output parameter of type {2} and has a response format explicitly set to Json.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.MultipleOperationsWithSameMethodAndUriTemplate(System.Object,System.Object)">
            <summary>Gets localized string like: There are multiple operations with HTTP method '{1}' and a UriTemplate that is equivalent to '{0}'. Each operation requires a unique combination of UriTemplate and Method to unambiguously dispatch messages.</summary>
            <param name="param0">Parameter 0 for string: There are multiple operations with HTTP method '{1}' and a UriTemplate that is equivalent to '{0}'. Each operation requires a unique combination of UriTemplate and Method to unambiguously dispatch messages.</param>
            <param name="param1">Parameter 1 for string: There are multiple operations with HTTP method '{1}' and a UriTemplate that is equivalent to '{0}'. Each operation requires a unique combination of UriTemplate and Method to unambiguously dispatch messages.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.AttributeRequiredOnConfigElement(System.Object,System.Object)">
            <summary>Gets localized string like: A value must be specified for the '{0}' on the '{1}' element.</summary>
            <param name="param0">Parameter 0 for string: A value must be specified for the '{0}' on the '{1}' element.</param>
            <param name="param1">Parameter 1 for string: A value must be specified for the '{0}' on the '{1}' element.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.AtLeastOneMediaTypeMappingAttributeRequired(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: At least one of the following '{0}' attributes must be specified: '{1}', '{2}' or '{3}'.</summary>
            <param name="param0">Parameter 0 for string: At least one of the following '{0}' attributes must be specified: '{1}', '{2}' or '{3}'.</param>
            <param name="param1">Parameter 1 for string: At least one of the following '{0}' attributes must be specified: '{1}', '{2}' or '{3}'.</param>
            <param name="param2">Parameter 2 for string: At least one of the following '{0}' attributes must be specified: '{1}', '{2}' or '{3}'.</param>
            <param name="param3">Parameter 3 for string: At least one of the following '{0}' attributes must be specified: '{1}', '{2}' or '{3}'.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.AttributeRequiredOnConfigElementIfOtherAttributeSpecified(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: If a value is specified for the '{0}'  on the '{1}' element, then a value must also be specified for the '{2}'.</summary>
            <param name="param0">Parameter 0 for string: If a value is specified for the '{0}'  on the '{1}' element, then a value must also be specified for the '{2}'.</param>
            <param name="param1">Parameter 1 for string: If a value is specified for the '{0}'  on the '{1}' element, then a value must also be specified for the '{2}'.</param>
            <param name="param2">Parameter 2 for string: If a value is specified for the '{0}'  on the '{1}' element, then a value must also be specified for the '{2}'.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HttpMessageConfigurationPropertyTypeMismatch(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: "The configuration file specified type '{0}' for the '{1}' property but that type is not a subtype of '{2}'.  The '{1}' must be a public class that is a subtype of '{2}', and it must have a public default constructor.</summary>
            <param name="param0">Parameter 0 for string: "The configuration file specified type '{0}' for the '{1}' property but that type is not a subtype of '{2}'.  The '{1}' must be a public class that is a subtype of '{2}', and it must have a public default constructor.</param>
            <param name="param1">Parameter 1 for string: "The configuration file specified type '{0}' for the '{1}' property but that type is not a subtype of '{2}'.  The '{1}' must be a public class that is a subtype of '{2}', and it must have a public default constructor.</param>
            <param name="param2">Parameter 2 for string: "The configuration file specified type '{0}' for the '{1}' property but that type is not a subtype of '{2}'.  The '{1}' must be a public class that is a subtype of '{2}', and it must have a public default constructor.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HttpEndpointNotSupported(System.Object,System.Object)">
            <summary>Gets localized string like: The '{0}' is not supported on the client side.  The '{1}' is the recommended API for sending HTTP requests.</summary>
            <param name="param0">Parameter 0 for string: The '{0}' is not supported on the client side.  The '{1}' is the recommended API for sending HTTP requests.</param>
            <param name="param1">Parameter 1 for string: The '{0}' is not supported on the client side.  The '{1}' is the recommended API for sending HTTP requests.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HttpEndpointRequiredBinding(System.Object,System.Object)">
            <summary>Gets localized string like: The '{0}' requires the '{1}' binding.</summary>
            <param name="param0">Parameter 0 for string: The '{0}' requires the '{1}' binding.</param>
            <param name="param1">Parameter 1 for string: The '{0}' requires the '{1}' binding.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HelpExampleGeneratorSchemaObjectNotSupported(System.Object)">
            <summary>Gets localized string like: Schema object {0} not supported.</summary>
            <param name="param0">Parameter 0 for string: Schema object {0} not supported.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HelpPageBodyIsEmpty(System.Object)">
            <summary>Gets localized string like: The {0} body is empty.</summary>
            <param name="param0">Parameter 0 for string: The {0} body is empty.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HelpPageIsAtom10Entry(System.Object)">
            <summary>Gets localized string like: The {0} body is an Atom 1.0 syndication entry. See http://tools.ietf.org/html/rfc4287 for more details.</summary>
            <param name="param0">Parameter 0 for string: The {0} body is an Atom 1.0 syndication entry. See http://tools.ietf.org/html/rfc4287 for more details.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HelpPageIsAtom10Feed(System.Object)">
            <summary>Gets localized string like: The {0} body is an Atom 1.0 syndication feed. See http://tools.ietf.org/html/rfc4287 for more details.</summary>
            <param name="param0">Parameter 0 for string: The {0} body is an Atom 1.0 syndication feed. See http://tools.ietf.org/html/rfc4287 for more details.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HelpPageIsAtomPubCategoriesDocument(System.Object)">
            <summary>Gets localized string like: The {0} body is an Atom Pub categories document. See http://www.rfc-editor.org/rfc/rfc5023.txt for more details.</summary>
            <param name="param0">Parameter 0 for string: The {0} body is an Atom Pub categories document. See http://www.rfc-editor.org/rfc/rfc5023.txt for more details.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HelpPageIsAtomPubServiceDocument(System.Object)">
            <summary>Gets localized string like: The {0} body is an Atom Pub service document. See http://www.rfc-editor.org/rfc/rfc5023.txt for more details.</summary>
            <param name="param0">Parameter 0 for string: The {0} body is an Atom Pub service document. See http://www.rfc-editor.org/rfc/rfc5023.txt for more details.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HelpPageIsRSS20Feed(System.Object)">
            <summary>Gets localized string like: The {0} body is an RSS 2.0 syndication feed. See http://validator.w3.org/feed/docs/rss2.html for more details.</summary>
            <param name="param0">Parameter 0 for string: The {0} body is an RSS 2.0 syndication feed. See http://validator.w3.org/feed/docs/rss2.html for more details.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HelpPageIsStream(System.Object)">
            <summary>Gets localized string like: The {0} body is a byte stream.</summary>
            <param name="param0">Parameter 0 for string: The {0} body is a byte stream.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HelpPageIsXML(System.Object)">
            <summary>Gets localized string like: The {0} body is arbitrary XML.</summary>
            <param name="param0">Parameter 0 for string: The {0} body is arbitrary XML.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HelpPageIsSyndication(System.Object)">
            <summary>Gets localized string like: The {0} body is a syndication feed.</summary>
            <param name="param0">Parameter 0 for string: The {0} body is a syndication feed.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HelpPageIsMessage(System.Object)">
            <summary>Gets localized string like: The {0} body cannot be inferred.</summary>
            <param name="param0">Parameter 0 for string: The {0} body cannot be inferred.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HelpPageMethodNotAllowedWithLink(System.Object)">
            <summary>Gets localized string like: <p>Method not allowed. Please see the <a rel="help-page" href="{0}">service help page</a> for constructing valid requests to the service.</p></summary>
            <param name="param0">Parameter 0 for string: <p>Method not allowed. Please see the <a rel="help-page" href="{0}">service help page</a> for constructing valid requests to the service.</p></param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HelpPageEndpointNotFoundWithLink(System.Object)">
            <summary>Gets localized string like: <p>Endpoint not found. Please see the <a rel="help-page" href="{0}">service help page</a> for constructing valid requests to the service.</p></summary>
            <param name="param0">Parameter 0 for string: <p>Endpoint not found. Please see the <a rel="help-page" href="{0}">service help page</a> for constructing valid requests to the service.</p></param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HelpServerErrorProcessingRequestWithDetails(System.Object)">
            <summary>Gets localized string like: The server encountered an error processing the request. The exception message is '{0}'. See server logs for more details. The exception stack trace is: </summary>
            <param name="param0">Parameter 0 for string: The server encountered an error processing the request. The exception message is '{0}'. See server logs for more details. The exception stack trace is: </param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HelpServerErrorProcessingRequestWithLink(System.Object)">
            <summary>Gets localized string like: <p>The server encountered an error processing the request. Please see the <a rel="help-page" href="{0}">service help page</a> for constructing valid requests to the service.</p></summary>
            <param name="param0">Parameter 0 for string: <p>The server encountered an error processing the request. Please see the <a rel="help-page" href="{0}">service help page</a> for constructing valid requests to the service.</p></param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HelpServerErrorProcessingRequestWithDetailsAndLink(System.Object,System.Object)">
            <summary>Gets localized string like: <p>The server encountered an error processing the request. Please see the <a rel="help-page" href="{0}">service help page</a> for constructing valid requests to the service. The exception message is '{1}'. See server logs for more details. The exception stack trace is: </p></summary>
            <param name="param0">Parameter 0 for string: <p>The server encountered an error processing the request. Please see the <a rel="help-page" href="{0}">service help page</a> for constructing valid requests to the service. The exception message is '{1}'. See server logs for more details. The exception stack trace is: </p></param>
            <param name="param1">Parameter 1 for string: <p>The server encountered an error processing the request. Please see the <a rel="help-page" href="{0}">service help page</a> for constructing valid requests to the service. The exception message is '{1}'. See server logs for more details. The exception stack trace is: </p></param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HelpPageRedirect(System.Object,System.Object)">
            <summary>Gets localized string like: <p>There is no operation listening for <a href="{0}">{0}</a>, but there is an operation listening for <a href="{1}">{1}</a>, so you are being redirected there.</p></summary>
            <param name="param0">Parameter 0 for string: <p>There is no operation listening for <a href="{0}">{0}</a>, but there is an operation listening for <a href="{1}">{1}</a>, so you are being redirected there.</p></param>
            <param name="param1">Parameter 1 for string: <p>There is no operation listening for <a href="{0}">{0}</a>, but there is an operation listening for <a href="{1}">{1}</a>, so you are being redirected there.</p></param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HelpPageCallbackText(System.Object)">
            <summary>Gets localized string like: <p xmlns="http://www.w3.org/1999/xhtml">This operation supports JSONP responses. The callback function can be specified using the <b>"<span class="javascript-callback">{0}</span>"</b> Url query parameter.</p></summary>
            <param name="param0">Parameter 0 for string: <p xmlns="http://www.w3.org/1999/xhtml">This operation supports JSONP responses. The callback function can be specified using the <b>"<span class="javascript-callback">{0}</span>"</b> Url query parameter.</p></param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HelpExampleGeneratorHandlerNotFound(System.Object)">
            <summary>Gets localized string like: Handler for type {0} not found.</summary>
            <param name="param0">Parameter 0 for string: Handler for type {0} not found.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HelpExampleGeneratorMaxDepthLevelReached(System.Object)">
            <summary>Gets localized string like: Max depth level reached at {0}.</summary>
            <param name="param0">Parameter 0 for string: Max depth level reached at {0}.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HelpPageValidElementOfType(System.Object)">
            <summary>Gets localized string like: Valid elements of type: {0}</summary>
            <param name="param0">Parameter 0 for string: Valid elements of type: {0}</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HelpPageOperationsAt(System.Object)">
            <summary>Gets localized string like: Operations at {0}</summary>
            <param name="param0">Parameter 0 for string: Operations at {0}</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HelpPageReferenceFor(System.Object)">
            <summary>Gets localized string like: Reference for  {0}</summary>
            <param name="param0">Parameter 0 for string: Reference for  {0}</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HelpPageDefaultDescription(System.Object)">
            <summary>Gets localized string like: Service at {0}</summary>
            <param name="param0">Parameter 0 for string: Service at {0}</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HelpPageOperationMethod(System.Object)">
            <summary>Gets localized string like: <p  xmlns="http://www.w3.org/1999/xhtml"><b>HTTP Method: </b><span class="method">{0}</span></p></summary>
            <param name="param0">Parameter 0 for string: <p  xmlns="http://www.w3.org/1999/xhtml"><b>HTTP Method: </b><span class="method">{0}</span></p></param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HelpPageOperationUri(System.Object)">
            <summary>Gets localized string like: <p  xmlns="http://www.w3.org/1999/xhtml"><b>Url: </b><span class="uri-template"><a href="{0}">{0}</a></span></p></summary>
            <param name="param0">Parameter 0 for string: <p  xmlns="http://www.w3.org/1999/xhtml"><b>Url: </b><span class="uri-template"><a href="{0}">{0}</a></span></p></param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HelpPageBodyIsWrapped(System.Object)">
            <summary>Gets localized string like: Cannot infer schema. The {0} body is wrapped.</summary>
            <param name="param0">Parameter 0 for string: Cannot infer schema. The {0} body is wrapped.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HttpMessageHandlerMissingProperty(System.Object,System.Object)">
            <summary>Gets localized string like: A property required for completing the processing of this '{0}' is missing. The property with key '{1}' cannot be removed from an incoming '{0}' request.</summary>
            <param name="param0">Parameter 0 for string: A property required for completing the processing of this '{0}' is missing. The property with key '{1}' cannot be removed from an incoming '{0}' request.</param>
            <param name="param1">Parameter 1 for string: A property required for completing the processing of this '{0}' is missing. The property with key '{1}' cannot be removed from an incoming '{0}' request.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HttpMessageHandlerChannelFactoryNullPipeline(System.Object,System.Object)">
            <summary>Gets localized string like: '{0}' cannot return a null '{1}' instance. Please ensure that '{0}' returns a valid '{1}' instance.</summary>
            <param name="param0">Parameter 0 for string: '{0}' cannot return a null '{1}' instance. Please ensure that '{0}' returns a valid '{1}' instance.</param>
            <param name="param1">Parameter 1 for string: '{0}' cannot return a null '{1}' instance. Please ensure that '{0}' returns a valid '{1}' instance.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HttpMessageHandlerChannelInvalidResponse(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: '{0}' did not receive a '{1}' reply containing a '{2}' instance. Please ensure that replies contain a '{2}' instance.</summary>
            <param name="param0">Parameter 0 for string: '{0}' did not receive a '{1}' reply containing a '{2}' instance. Please ensure that replies contain a '{2}' instance.</param>
            <param name="param1">Parameter 1 for string: '{0}' did not receive a '{1}' reply containing a '{2}' instance. Please ensure that replies contain a '{2}' instance.</param>
            <param name="param2">Parameter 2 for string: '{0}' did not receive a '{1}' reply containing a '{2}' instance. Please ensure that replies contain a '{2}' instance.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.InvalidBaseUriScheme(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The provided URI scheme '{0}' is invalid; expected '{1}' or '{2}'.</summary>
            <param name="param0">Parameter 0 for string: The provided URI scheme '{0}' is invalid; expected '{1}' or '{2}'.</param>
            <param name="param1">Parameter 1 for string: The provided URI scheme '{0}' is invalid; expected '{1}' or '{2}'.</param>
            <param name="param2">Parameter 2 for string: The provided URI scheme '{0}' is invalid; expected '{1}' or '{2}'.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HttpMemoryChannelExplicitListenUriMode(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Only '{0}' is supported as '{1}' value for the '{2}' transport.</summary>
            <param name="param0">Parameter 0 for string: Only '{0}' is supported as '{1}' value for the '{2}' transport.</param>
            <param name="param1">Parameter 1 for string: Only '{0}' is supported as '{1}' value for the '{2}' transport.</param>
            <param name="param2">Parameter 2 for string: Only '{0}' is supported as '{1}' value for the '{2}' transport.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HttpMemoryChannelNullListenUri(System.Object,System.Object)">
            <summary>Gets localized string like: The '{0}' cannot have a null '{1}'</summary>
            <param name="param0">Parameter 0 for string: The '{0}' cannot have a null '{1}'</param>
            <param name="param1">Parameter 1 for string: The '{0}' cannot have a null '{1}'</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HttpMessageHandlerNoSyncSupport(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: This '{0}' does not support synchronous '{1}' operations. Please use the asynchronous '{2}' instead.</summary>
            <param name="param0">Parameter 0 for string: This '{0}' does not support synchronous '{1}' operations. Please use the asynchronous '{2}' instead.</param>
            <param name="param1">Parameter 1 for string: This '{0}' does not support synchronous '{1}' operations. Please use the asynchronous '{2}' instead.</param>
            <param name="param2">Parameter 2 for string: This '{0}' does not support synchronous '{1}' operations. Please use the asynchronous '{2}' instead.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HttpMemoryChannelRelativeListenUri(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Invalid listen URI base address: '{0}'. The '{1}' must have an absolute URI as '{2}'.</summary>
            <param name="param0">Parameter 0 for string: Invalid listen URI base address: '{0}'. The '{1}' must have an absolute URI as '{2}'.</param>
            <param name="param1">Parameter 1 for string: Invalid listen URI base address: '{0}'. The '{1}' must have an absolute URI as '{2}'.</param>
            <param name="param2">Parameter 2 for string: Invalid listen URI base address: '{0}'. The '{1}' must have an absolute URI as '{2}'.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HttpMemoryChannelBadListenUriScheme(System.Object,System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Invalid URI scheme: '{0}'. The '{1}' must have a '{2}' with an '{3}' URI scheme.</summary>
            <param name="param0">Parameter 0 for string: Invalid URI scheme: '{0}'. The '{1}' must have a '{2}' with an '{3}' URI scheme.</param>
            <param name="param1">Parameter 1 for string: Invalid URI scheme: '{0}'. The '{1}' must have a '{2}' with an '{3}' URI scheme.</param>
            <param name="param2">Parameter 2 for string: Invalid URI scheme: '{0}'. The '{1}' must have a '{2}' with an '{3}' URI scheme.</param>
            <param name="param3">Parameter 3 for string: Invalid URI scheme: '{0}'. The '{1}' must have a '{2}' with an '{3}' URI scheme.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.DelegatingHandlerArrayFromFuncContainsNullItem(System.Object,System.Object)">
            <summary>Gets localized string like: The '{0}' list created by the Func '{1}' is invalid because it contains one or more null items.</summary>
            <param name="param0">Parameter 0 for string: The '{0}' list created by the Func '{1}' is invalid because it contains one or more null items.</param>
            <param name="param1">Parameter 1 for string: The '{0}' list created by the Func '{1}' is invalid because it contains one or more null items.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.DelegatingHandlerArrayHasNonNullInnerHandler(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The '{0}' list is invalid because the property '{1}' of '{2}' is not null.</summary>
            <param name="param0">Parameter 0 for string: The '{0}' list is invalid because the property '{1}' of '{2}' is not null.</param>
            <param name="param1">Parameter 1 for string: The '{0}' list is invalid because the property '{1}' of '{2}' is not null.</param>
            <param name="param2">Parameter 2 for string: The '{0}' list is invalid because the property '{1}' of '{2}' is not null.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.HttpConfigurationIsReadOnly(System.Object,System.Object)">
            <summary>Gets localized string like: The '{0}' instance has already been applied to one or more '{1}'. '{0}' can only be modified before passing it to the first '{1}'.</summary>
            <param name="param0">Parameter 0 for string: The '{0}' instance has already been applied to one or more '{1}'. '{0}' can only be modified before passing it to the first '{1}'.</param>
            <param name="param1">Parameter 1 for string: The '{0}' instance has already been applied to one or more '{1}'. '{0}' can only be modified before passing it to the first '{1}'.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.AmbiguousConstructorInvocation(System.Object)">
            <summary>Gets localized string like: Ambiguous invocation of '{0}' constructor</summary>
            <param name="param0">Parameter 0 for string: Ambiguous invocation of '{0}' constructor</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.AmbiguousIndexerInvocation(System.Object)">
            <summary>Gets localized string like: Ambiguous invocation of indexer in type '{0}'</summary>
            <param name="param0">Parameter 0 for string: Ambiguous invocation of indexer in type '{0}'</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.AmbiguousMethodInvocation(System.Object,System.Object)">
            <summary>Gets localized string like: Ambiguous invocation of method '{0}' in type '{1}'</summary>
            <param name="param0">Parameter 0 for string: Ambiguous invocation of method '{0}' in type '{1}'</param>
            <param name="param1">Parameter 1 for string: Ambiguous invocation of method '{0}' in type '{1}'</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.BothTypesConvertToOther(System.Object,System.Object)">
            <summary>Gets localized string like: Both of the types '{0}' and '{1}' convert to the other</summary>
            <param name="param0">Parameter 0 for string: Both of the types '{0}' and '{1}' convert to the other</param>
            <param name="param1">Parameter 1 for string: Both of the types '{0}' and '{1}' convert to the other</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.CannotConvertValue(System.Object,System.Object)">
            <summary>Gets localized string like: A value of type '{0}' cannot be converted to type '{1}'</summary>
            <param name="param0">Parameter 0 for string: A value of type '{0}' cannot be converted to type '{1}'</param>
            <param name="param1">Parameter 1 for string: A value of type '{0}' cannot be converted to type '{1}'</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.DuplicateIdentifier(System.Object)">
            <summary>Gets localized string like: The identifier '{0}' was defined more than once</summary>
            <param name="param0">Parameter 0 for string: The identifier '{0}' was defined more than once</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.ExpressionTypeMismatch(System.Object)">
            <summary>Gets localized string like: Expression of type '{0}' expected</summary>
            <param name="param0">Parameter 0 for string: Expression of type '{0}' expected</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.IncompatibleOperand(System.Object,System.Object)">
            <summary>Gets localized string like: Operator '{0}' incompatible with operand type '{1}'</summary>
            <param name="param0">Parameter 0 for string: Operator '{0}' incompatible with operand type '{1}'</param>
            <param name="param1">Parameter 1 for string: Operator '{0}' incompatible with operand type '{1}'</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.IncompatibleOperands(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: Operator '{0}' incompatible with operand types '{1}' and '{2}'</summary>
            <param name="param0">Parameter 0 for string: Operator '{0}' incompatible with operand types '{1}' and '{2}'</param>
            <param name="param1">Parameter 1 for string: Operator '{0}' incompatible with operand types '{1}' and '{2}'</param>
            <param name="param2">Parameter 2 for string: Operator '{0}' incompatible with operand types '{1}' and '{2}'</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.InvalidCharacter(System.Object)">
            <summary>Gets localized string like: Syntax error '{0}'</summary>
            <param name="param0">Parameter 0 for string: Syntax error '{0}'</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.InvalidIntegerLiteral(System.Object)">
            <summary>Gets localized string like: Invalid integer literal '{0}'</summary>
            <param name="param0">Parameter 0 for string: Invalid integer literal '{0}'</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.InvalidRealLiteral(System.Object)">
            <summary>Gets localized string like: Invalid real literal '{0}'</summary>
            <param name="param0">Parameter 0 for string: Invalid real literal '{0}'</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.MethodIsVoid(System.Object,System.Object)">
            <summary>Gets localized string like: Method '{0}' in type '{1}' does not return a value</summary>
            <param name="param0">Parameter 0 for string: Method '{0}' in type '{1}' does not return a value</param>
            <param name="param1">Parameter 1 for string: Method '{0}' in type '{1}' does not return a value</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.MethodsAreInaccessible(System.Object)">
            <summary>Gets localized string like: Methods on type '{0}' are not accessible</summary>
            <param name="param0">Parameter 0 for string: Methods on type '{0}' are not accessible</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.NeitherTypeConvertsToOther(System.Object,System.Object)">
            <summary>Gets localized string like: Neither type '{0}' or '{1}' converts to the other</summary>
            <param name="param0">Parameter 0 for string: Neither type '{0}' or '{1}' converts to the other</param>
            <param name="param1">Parameter 1 for string: Neither type '{0}' or '{1}' converts to the other</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.NoApplicableAggregate(System.Object)">
            <summary>Gets localized string like: No applicable aggregate method '{0}' exists</summary>
            <param name="param0">Parameter 0 for string: No applicable aggregate method '{0}' exists</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.NoApplicableIndexer(System.Object)">
            <summary>Gets localized string like: No applicable indexer exists in type '{0}'</summary>
            <param name="param0">Parameter 0 for string: No applicable indexer exists in type '{0}'</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.NoApplicableMethod(System.Object,System.Object)">
            <summary>Gets localized string like: No applicable method '{0}' exists in type '{1}'</summary>
            <param name="param0">Parameter 0 for string: No applicable method '{0}' exists in type '{1}'</param>
            <param name="param1">Parameter 1 for string: No applicable method '{0}' exists in type '{1}'</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.NoMatchingConstructor(System.Object)">
            <summary>Gets localized string like: No matching constructor in type '{0}'</summary>
            <param name="param0">Parameter 0 for string: No matching constructor in type '{0}'</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.ParseExceptionFormat(System.Object,System.Object)">
            <summary>Gets localized string like: {0} (at index {1})</summary>
            <param name="param0">Parameter 0 for string: {0} (at index {1})</param>
            <param name="param1">Parameter 1 for string: {0} (at index {1})</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.TypeHasNoNullableForm(System.Object)">
            <summary>Gets localized string like: Type '{0}' has no nullable form</summary>
            <param name="param0">Parameter 0 for string: Type '{0}' has no nullable form</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.UnknownIdentifier(System.Object)">
            <summary>Gets localized string like: Unknown identifier '{0}'</summary>
            <param name="param0">Parameter 0 for string: Unknown identifier '{0}'</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.UnknownPropertyOrField(System.Object,System.Object)">
            <summary>Gets localized string like: No property or field '{0}' exists in type '{1}'</summary>
            <param name="param0">Parameter 0 for string: No property or field '{0}' exists in type '{1}'</param>
            <param name="param1">Parameter 1 for string: No property or field '{0}' exists in type '{1}'</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.InvalidQueryOperator(System.Object)">
            <summary>Gets localized string like: Invalid query operator '{0}'.</summary>
            <param name="param0">Parameter 0 for string: Invalid query operator '{0}'.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.BindingIndexAndMessage(System.Object,System.Object)">
            <summary>Gets localized string like:     [{0}]: {1}</summary>
            <param name="param0">Parameter 0 for string:     [{0}]: {1}</param>
            <param name="param1">Parameter 1 for string:     [{0}]: {1}</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.MultipleTypeOnlyBindingRemedy(System.Object)">
            <summary>Gets localized string like: Either eliminate all but one of these sources, or rename ‘{0}’ to match the output parameter of the source you want.</summary>
            <param name="param0">Parameter 0 for string: Either eliminate all but one of these sources, or rename ‘{0}’ to match the output parameter of the source you want.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.CannotSetBothProperties(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The properties '{0}' and '{1}' cannot be set at the same time in '{2}'.</summary>
            <param name="param0">Parameter 0 for string: The properties '{0}' and '{1}' cannot be set at the same time in '{2}'.</param>
            <param name="param1">Parameter 1 for string: The properties '{0}' and '{1}' cannot be set at the same time in '{2}'.</param>
            <param name="param2">Parameter 2 for string: The properties '{0}' and '{1}' cannot be set at the same time in '{2}'.</param>
        </member>
        <member name="M:Microsoft.ApplicationServer.Http.SR.CannotSetOnlyOneProperty(System.Object,System.Object,System.Object)">
            <summary>Gets localized string like: The property '{0}' cannot be set without setting the '{1}' in '{2}'.</summary>
            <param name="param0">Parameter 0 for string: The property '{0}' cannot be set without setting the '{1}' in '{2}'.</param>
            <param name="param1">Parameter 1 for string: The property '{0}' cannot be set without setting the '{1}' in '{2}'.</param>
            <param name="param2">Parameter 2 for string: The property '{0}' cannot be set without setting the '{1}' in '{2}'.</param>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.MessageBodyIsHttpRequestMessageWithUnknownContentLength">
            <summary>Gets localized string like: HTTP request message body with an undetermined content length.</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.MessageBodyIsHttpResponseMessageWithUnknownContentLength">
            <summary>Gets localized string like: HTTP response message body with an undetermined content length.</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.MessageClosed">
            <summary>Gets localized string like: Message is closed.</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.RequestMissingToHeader">
            <summary>Gets localized string like: The incoming message does not have the required 'To' header.</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.HtmlPageTitleText">
            <summary>Gets localized string like: Service</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.HtmlPageMethodNotAllowed">
            <summary>Gets localized string like: Method not allowed.</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.HtmlPageRequestErrorTitle">
            <summary>Gets localized string like: Request Error</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.HtmlPageServerErrorProcessingRequest">
            <summary>Gets localized string like: The server encountered an error processing the request. See server logs for more details.</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.HtmlPageEndpointNotFound">
            <summary>Gets localized string like: Endpoint not found.</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.HelpExampleGeneratorThisElementContainsText">
            <summary>Gets localized string like: This element contains text.</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.HelpExampleGeneratorStringContent">
            <summary>Gets localized string like: String content</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.HelpPageCouldNotGenerateSchema">
            <summary>Gets localized string like: Could not generate schema document.</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.HelpPageExample">
            <summary>Gets localized string like: Example</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.HelpPageFormat">
            <summary>Gets localized string like: Format</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.HelpPageBody">
            <summary>Gets localized string like: Body</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.HelpPageMessageDirection">
            <summary>Gets localized string like: Message direction</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.HelpPageRequest">
            <summary>Gets localized string like: Request</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.HelpPageResponse">
            <summary>Gets localized string like: Response</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.HelpPageSchema">
            <summary>Gets localized string like: Schema</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.HelpPageNotSupportedInScripts">
            <summary>Gets localized string like: Help Page is not supported for WebScript endpoints.</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.HelpPageMethodNotAllowed">
            <summary>Gets localized string like: Method not allowed.</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.HelpPageEndpointNotFound">
            <summary>Gets localized string like: Endpoint not found.</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.HelpPageTitleText">
            <summary>Gets localized string like: Service</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.HelpPageRequestErrorTitle">
            <summary>Gets localized string like: Request Error</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.HelpServerErrorProcessingRequest">
            <summary>Gets localized string like: The server encountered an error processing the request. See server logs for more details.</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.HelpPageUnknown">
            <summary>Gets localized string like: Unknown</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.HelpExampleGeneratorLanguage">
            <summary>Gets localized string like: en-us</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.HelpPageDescription">
            <summary>Gets localized string like: Description</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.HelpPageMethod">
            <summary>Gets localized string like: Method</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.HelpPageStaticText">
            <summary>Gets localized string like: This page describes the service operations at this endpoint.</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.HelpPageUri">
            <summary>Gets localized string like: Uri</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.HelpPageXmlRequest">
            <summary>Gets localized string like: The following is an example request Xml body:</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.HelpPageJsonRequest">
            <summary>Gets localized string like: The following is an example request Json body:</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.HelpPageXmlResponse">
            <summary>Gets localized string like: The following is an example response Xml body:</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.HelpPageJsonResponse">
            <summary>Gets localized string like: The following is an example response Json body:</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.HelpPageRequestSchema">
            <summary>Gets localized string like: The following is the request Xml Schema:</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.HelpPageResponseSchema">
            <summary>Gets localized string like: The following is the response Xml Schema:</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.HelpPageAdditionalRequestSchema">
            <summary>Gets localized string like: Additional request Xml Schemas:</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.HelpPageAdditionalResponseSchema">
            <summary>Gets localized string like: Additional response Xml Schemas:</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.HelpPageNA">
            <summary>Gets localized string like: N/A</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.HelpPageFailedToCreateErrorMessage">
            <summary>Gets localized string like: Failed to create error response message</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.home_htm">
            <summary>Gets localized string like: microsoft\ApplicationServer\Http\Test\home.htm;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.home_css">
            <summary>Gets localized string like: microsoft\ApplicationServer\Http\Test\home.css;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.testscript_js">
            <summary>Gets localized string like: microsoft\ApplicationServer\Http\Test\testscript.js;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.jquery_1_5_2_min_js">
            <summary>Gets localized string like: microsoft\ApplicationServer\Http\Test\jquery-1.5.2.min.js;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.autocomplete_js">
            <summary>Gets localized string like: microsoft\applicationserver\http\test\autocomplete.js;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.jquery_fieldselection_js">
            <summary>Gets localized string like: microsoft\applicationserver\http\test\jquery-fieldselection.js;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.proxy_js">
            <summary>Gets localized string like: microsoft\applicationserver\http\test\proxy.js;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.EmptyValidationStack">
            <summary>Gets localized string like: Validation stack is empty.</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.UnexpectedEOF">
            <summary>Gets localized string like: Unexpected end of file.</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.jquery_ui_1_8_14_custom_css">
            <summary>Gets localized string like: Microsoft\ApplicationServer\Http\Test\jquery-ui-1.8.14.custom.css;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.jquery_ui_1_8_14_custom_min_js">
            <summary>Gets localized string like: Microsoft\ApplicationServer\Http\Test\jquery-ui-1.8.14.custom.min.js;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.MultipleVariablesInSingleSegmentOrQueryValue">
            <summary>Gets localized string like: Multiple variables in a single segment or query value is not supported.</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.UriCannotBeMultipleLines">
            <summary>Gets localized string like: Uri cannot be multiple lines.</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.UriCannotHaveMoreSegmentsThanTemplate">
            <summary>Gets localized string like: Uri cannot have more segments than the uri template.</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.UriMustStartWithBaseUri">
            <summary>Gets localized string like: Uri must start with the base uri.</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.UriSegmentMismatch">
            <summary>Gets localized string like: A uri segment mismatches with the uri template.</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.InputTypeListEmptyError">
            <summary>Gets localized string like: The input handler list cannot be empty.</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.warning_png">
            <summary>Gets localized string like: Microsoft\ApplicationServer\Http\Test\warning.png;System.Byte[], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.CannotIndexMultiDimArray">
            <summary>Gets localized string like: Indexing of multi-dimensional arrays is not supported</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.CloseBracketOrCommaExpected">
            <summary>Gets localized string like: ']' or ',' expected</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.CloseParenOrCommaExpected">
            <summary>Gets localized string like: ')' or ',' expected</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.CloseParenOrOperatorExpected">
            <summary>Gets localized string like: ')' or operator expected</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.ColonExpected">
            <summary>Gets localized string like: ':' expected</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.DigitExpected">
            <summary>Gets localized string like: Digit expected</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.DotOrOpenParenExpected">
            <summary>Gets localized string like: '.' or '(' expected</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.ExpressionExpected">
            <summary>Gets localized string like: Expression expected</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.FirstExprMustBeBool">
            <summary>Gets localized string like: The first expression must be of type 'bool'</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.IdentifierExpected">
            <summary>Gets localized string like: Identifier expected</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.IifRequiresThreeArgs">
            <summary>Gets localized string like: The 'IIF' function requires three arguments</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.InvalidCharacterLiteral">
            <summary>Gets localized string like: Character literal must contain exactly one character</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.InvalidIndex">
            <summary>Gets localized string like: Array index must be an integer expression</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.NoItInScope">
            <summary>Gets localized string like: No 'it' is in scope</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.OpenParenExpected">
            <summary>Gets localized string like: '(' expected</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.SyntaxError">
            <summary>Gets localized string like: Syntax error</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.UnterminatedStringLiteral">
            <summary>Gets localized string like: Unterminated string literal</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.QueryCompositionFailed">
            <summary>Gets localized string like: The query could not be applied to the result of the service operation.</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.RequiresQueryableType">
            <summary>Gets localized string like: The underlying type must implement System.Collections.Generic.IEnumerable'1.</summary>
        </member>
        <member name="P:Microsoft.ApplicationServer.Http.SR.UriQueryStringInvalid">
            <summary>Gets localized string like: The query specified in the URI is not valid.</summary>
        </member>
    </members>
</doc>
